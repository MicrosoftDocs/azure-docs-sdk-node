### YamlMime:TSType
name: Backend
uid: '@azure/arm-apimanagement.Backend'
package: '@azure/arm-apimanagement'
summary: Interface representing a Backend.
fullName: Backend
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, BackendContract,
      BackendCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a backend.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        backendId: string, parameters: BackendContract, options?:
        BackendCreateOrUpdateOptionalParams):
        Promise<BackendCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.BackendCreateOrUpdateResponse" />&gt;
  - name: delete(string, string, string, string, BackendDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified backend.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        backendId: string, ifMatch: string, options?:
        BackendDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.BackendDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, BackendGetOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the backend specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, backendId:
        string, options?: BackendGetOptionalParams): Promise<BackendGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.BackendGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.BackendGetResponse"
          />&gt;
  - name: getEntityTag(string, string, string, BackendGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the backend specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        backendId: string, options?: BackendGetEntityTagOptionalParams):
        Promise<BackendGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendGetEntityTagOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.BackendGetEntityTagHeaders" />&gt;
  - name: listByService(string, string, BackendListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of backends in the specified service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: BackendListByServiceOptionalParams):
        PagedAsyncIterableIterator<BackendContract, BackendContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.BackendListByServiceOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.BackendContract" />, <xref
          uid="@azure/arm-apimanagement.BackendContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: reconnect(string, string, string, BackendReconnectOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.reconnect'
    package: '@azure/arm-apimanagement'
    summary: >-
      Notifies the API Management gateway to create a new connection to the
      backend after the specified

      timeout. If no timeout was specified, timeout of 2 minutes is used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reconnect(resourceGroupName: string, serviceName: string,
        backendId: string, options?: BackendReconnectOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.BackendReconnectOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      update(string, string, string, string, BackendUpdateParameters,
      BackendUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Backend.update'
    package: '@azure/arm-apimanagement'
    summary: Updates an existing backend.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        backendId: string, ifMatch: string, parameters: BackendUpdateParameters,
        options?: BackendUpdateOptionalParams): Promise<BackendUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: backendId
          type: string
          description: >-
            Identifier of the Backend entity. Must be unique in the current API
            Management
                             service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.BackendUpdateParameters" />
          description: Update parameters.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.BackendUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.BackendUpdateResponse"
          />&gt;
