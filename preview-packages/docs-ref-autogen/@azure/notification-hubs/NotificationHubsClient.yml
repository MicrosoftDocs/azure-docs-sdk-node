### YamlMime:TSType
name: NotificationHubsClient
uid: '@azure/notification-hubs.NotificationHubsClient'
package: '@azure/notification-hubs'
summary: >-
  This represents a client for Azure Notification Hubs to manage installations
  and send

  messages to devices.
fullName: NotificationHubsClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: NotificationHubsClient(string, string, NotificationHubsClientOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.constructor'
    package: '@azure/notification-hubs'
    summary: >-
      Creates a new instance of the NotificationClient with a connection string,
      hub name and options.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new NotificationHubsClient(connectionString: string, hubName: string,
        options?: NotificationHubsClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: The Notification Hub Access Policy connection string.
        - id: hubName
          type: string
          description: The name of the Azure Notification Hub.
        - id: options
          type: >-
            <xref uid="@azure/notification-hubs.NotificationHubsClientOptions"
            />
          description: Options for configuring the Azure Notification Hubs client.
methods:
  - name: beginSubmitNotificationHubJob(NotificationHubJob, PolledOperationOptions)
    uid: >-
      @azure/notification-hubs.NotificationHubsClient.beginSubmitNotificationHubJob
    package: '@azure/notification-hubs'
    summary: Submits a Notification Hub job and creates a poller to poll for results.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSubmitNotificationHubJob(notificationHubJob:
        NotificationHubJob, options?: PolledOperationOptions):
        Promise<NotificationHubJobPoller>
      parameters:
        - id: notificationHubJob
          type: <xref uid="@azure/notification-hubs.NotificationHubJob" />
          description: The Notification Hub import/export job to start.
        - id: options
          type: <xref uid="@azure/notification-hubs.PolledOperationOptions" />
          description: The operation options.
      return:
        description: A poller which can be called to poll until completion of the job.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubJobPoller" />&gt;
  - name: cancelScheduledNotification(string, OperationOptions)
    uid: >-
      @azure/notification-hubs.NotificationHubsClient.cancelScheduledNotification
    package: '@azure/notification-hubs'
    summary: Cancels the scheduled notification with the given notification ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function cancelScheduledNotification(notificationId: string, options?:
        OperationOptions): Promise<NotificationHubsResponse>
      parameters:
        - id: notificationId
          type: string
          description: The notification ID from the scheduled notification.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: A notification hub response with correlation ID and tracking ID.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsResponse" />&gt;
  - name: createOrUpdateInstallation(Installation, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.createOrUpdateInstallation'
    package: '@azure/notification-hubs'
    summary: Creates or overwrites an installation to a Notification Hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateInstallation(installation: Installation,
        options?: OperationOptions): Promise<NotificationHubsResponse>
      parameters:
        - id: installation
          type: <xref uid="@azure/notification-hubs.Installation" />
          description: The installation to create or overwrite.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: >-
            Configuration options for the create or update installation
            operation.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsResponse" />&gt;
  - name: createOrUpdateRegistration(RegistrationDescription, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.createOrUpdateRegistration'
    package: '@azure/notification-hubs'
    summary: Creates or updates a registration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateRegistration(registration:
        RegistrationDescription, options?: OperationOptions):
        Promise<RegistrationDescription>
      parameters:
        - id: registration
          type: <xref uid="@azure/notification-hubs.RegistrationDescription" />
          description: The registration to create or update.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: The created or updated registration description.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />&gt;
  - name: createRegistration(RegistrationDescription, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.createRegistration'
    package: '@azure/notification-hubs'
    summary: >-
      Creates a new registration. This method generates a registration ID,

      which you can subsequently use to retrieve, update, and delete this
      registration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRegistration(registration: RegistrationDescription,
        options?: OperationOptions): Promise<RegistrationDescription>
      parameters:
        - id: registration
          type: <xref uid="@azure/notification-hubs.RegistrationDescription" />
          description: The registration to create.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: Options for creating a new registration.
      return:
        description: The newly created registration description.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />&gt;
  - name: createRegistrationId(OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.createRegistrationId'
    package: '@azure/notification-hubs'
    summary: Creates a new registration ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRegistrationId(options?: OperationOptions):
        Promise<string>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The options for creating a new registration ID.
      return:
        description: The newly created registration ID.
        type: Promise&lt;string&gt;
  - name: deleteInstallation(string, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.deleteInstallation'
    package: '@azure/notification-hubs'
    summary: Deletes an installation from a Notification Hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteInstallation(installationId: string, options?:
        OperationOptions): Promise<NotificationHubsResponse>
      parameters:
        - id: installationId
          type: string
          description: The installation ID of the installation to delete.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: Configuration options for the installation delete operation.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsResponse" />&gt;
  - name: deleteRegistration(string, EntityOperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.deleteRegistration'
    package: '@azure/notification-hubs'
    summary: Deletes a registration with the given registration ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteRegistration(registrationId: string, options?:
        EntityOperationOptions): Promise<NotificationHubsResponse>
      parameters:
        - id: registrationId
          type: string
          description: The registration ID of the registration to delete.
        - id: options
          type: <xref uid="@azure/notification-hubs.EntityOperationOptions" />
          description: The options for delete operations including the ETag
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsResponse" />&gt;
  - name: getFeedbackContainerUrl(OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.getFeedbackContainerUrl'
    package: '@azure/notification-hubs'
    summary: >-
      Retrieves an Azure Storage container URL. The container has feedback data
      for the notification hub.

      The caller can then use the Azure Storage Services SDK to retrieve the
      contents of the container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFeedbackContainerUrl(options?: OperationOptions):
        Promise<string>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: >-
            The options for getting the push notification feedback container
            URL.
      return:
        description: The URL of the Azure Storage Container containing the feedback data.
        type: Promise&lt;string&gt;
  - name: getInstallation(string, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.getInstallation'
    package: '@azure/notification-hubs'
    summary: Gets an Azure Notification Hub installation by the installation ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getInstallation(installationId: string, options?:
        OperationOptions): Promise<Installation>
      parameters:
        - id: installationId
          type: string
          description: The ID of the installation to get.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: Configuration options for the get installation operation.
      return:
        description: The installation that matches the installation ID.
        type: Promise&lt;<xref uid="@azure/notification-hubs.Installation" />&gt;
  - name: getNotificationHubJob(string, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.getNotificationHubJob'
    package: '@azure/notification-hubs'
    summary: Gets a Notification Hub Job by the ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getNotificationHubJob(jobId: string, options?:
        OperationOptions): Promise<NotificationHubJob>
      parameters:
        - id: jobId
          type: string
          description: The Notification Hub Job ID.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: The Notification Hub Job with the matching ID.
        type: >-
          Promise&lt;<xref uid="@azure/notification-hubs.NotificationHubJob"
          />&gt;
  - name: getNotificationOutcomeDetails(string, OperationOptions)
    uid: >-
      @azure/notification-hubs.NotificationHubsClient.getNotificationOutcomeDetails
    package: '@azure/notification-hubs'
    summary: >-
      Retrieves the results of a send operation. This can retrieve intermediate
      results if the send is being processed

      or final results if the Send* has completed. This API can only be called
      for Standard SKU and above.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getNotificationOutcomeDetails(notificationId: string, options?:
        OperationOptions): Promise<NotificationDetails>
      parameters:
        - id: notificationId
          type: string
          description: The notification ID returned from the send operation.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: The results of the send operation.
        type: >-
          Promise&lt;<xref uid="@azure/notification-hubs.NotificationDetails"
          />&gt;
  - name: getRegistration(string, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.getRegistration'
    package: '@azure/notification-hubs'
    summary: Gets a registration by the given registration ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRegistration(registrationId: string, options?:
        OperationOptions): Promise<RegistrationDescription>
      parameters:
        - id: registrationId
          type: string
          description: The ID of the registration to get.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The options for getting a registration by ID.
      return:
        description: A RegistrationDescription that has the given registration ID.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />&gt;
  - name: listNotificationHubJobs(OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.listNotificationHubJobs'
    package: '@azure/notification-hubs'
    summary: Gets all Notification Hub Jobs for this Notification Hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNotificationHubJobs(options?: OperationOptions):
        Promise<NotificationHubJob[]>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: An array of all Notification Hub Jobs for this Notification Hub.
        type: >-
          Promise&lt;<xref uid="@azure/notification-hubs.NotificationHubJob"
          />[]&gt;
  - name: listRegistrations(RegistrationQueryLimitOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.listRegistrations'
    package: '@azure/notification-hubs'
    summary: >-
      Gets all registrations for the notification hub with the given query
      options.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRegistrations(options?: RegistrationQueryLimitOptions):
        PagedAsyncIterableIterator<RegistrationDescription,
        RegistrationDescription[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/notification-hubs.RegistrationQueryLimitOptions"
            />
          description: The options for querying the registrations such as $top.
      return:
        description: >-
          A paged async iterable containing all of the registrations for the
          notification hub.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />, <xref
          uid="@azure/notification-hubs.RegistrationDescription" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listRegistrationsByChannel(RegistrationChannel,
      RegistrationQueryLimitOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.listRegistrationsByChannel'
    package: '@azure/notification-hubs'
    summary: >-
      Gets all registrations for the notification hub with the given device
      information and options.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRegistrationsByChannel(channel: RegistrationChannel,
        options?: RegistrationQueryLimitOptions):
        PagedAsyncIterableIterator<RegistrationDescription,
        RegistrationDescription[], PageSettings>
      parameters:
        - id: channel
          type: <xref uid="@azure/notification-hubs.RegistrationChannel" />
          description: The registration channel information to query per PNS type.
        - id: options
          type: >-
            <xref uid="@azure/notification-hubs.RegistrationQueryLimitOptions"
            />
          description: The options for querying the registrations such as $top.
      return:
        description: >-
          A paged async iterable containing all of the registrations for the
          notification hub.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />, <xref
          uid="@azure/notification-hubs.RegistrationDescription" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listRegistrationsByTag(string, RegistrationQueryLimitOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.listRegistrationsByTag'
    package: '@azure/notification-hubs'
    summary: Lists all registrations with the matching tag.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRegistrationsByTag(tag: string, options?:
        RegistrationQueryLimitOptions):
        PagedAsyncIterableIterator<RegistrationDescription,
        RegistrationDescription[], PageSettings>
      parameters:
        - id: tag
          type: string
          description: The tag to query for matching registrations.
        - id: options
          type: >-
            <xref uid="@azure/notification-hubs.RegistrationQueryLimitOptions"
            />
          description: The query options such as $top.
      return:
        description: >-
          A paged async iterable containing the matching registrations for the
          notification hub.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />, <xref
          uid="@azure/notification-hubs.RegistrationDescription" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: scheduleBroadcastNotification(Date, Notification, OperationOptions)
    uid: >-
      @azure/notification-hubs.NotificationHubsClient.scheduleBroadcastNotification
    package: '@azure/notification-hubs'
    summary: |-
      Schedules a push notification to all devices at the specified time.
      NOTE: This is only available in Standard SKU Azure Notification Hubs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function scheduleBroadcastNotification(scheduledTime: Date,
        notification: Notification, options?: OperationOptions):
        Promise<NotificationHubsMessageResponse>
      parameters:
        - id: scheduledTime
          type: Date
          description: The Date to send the push notification.
        - id: notification
          type: <xref uid="@azure/notification-hubs.Notification" />
          description: The notification to send to the matching devices.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsMessageResponse" />&gt;
  - name: scheduleNotification(Date, Notification, ScheduleNotificationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.scheduleNotification'
    package: '@azure/notification-hubs'
    summary: >-
      Schedules a push notification to devices that match the given tags or tag
      expression at the specified time.

      NOTE: This is only available in Standard SKU Azure Notification Hubs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function scheduleNotification(scheduledTime: Date, notification:
        Notification, options: ScheduleNotificationOptions):
        Promise<NotificationHubsMessageResponse>
      parameters:
        - id: scheduledTime
          type: Date
          description: The Date to send the push notification.
        - id: notification
          type: <xref uid="@azure/notification-hubs.Notification" />
          description: The notification to send to the matching devices.
        - id: options
          type: <xref uid="@azure/notification-hubs.ScheduleNotificationOptions" />
          description: >-
            Options which include tags used to target the device for push
            notifications in either an array or tag expression.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsMessageResponse" />&gt;
  - name: sendBroadcastNotification(Notification, BroadcastSendNotificationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.sendBroadcastNotification'
    package: '@azure/notification-hubs'
    summary: Sends push notifications to devices all devices.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendBroadcastNotification(notification: Notification, options?:
        BroadcastSendNotificationOptions):
        Promise<NotificationHubsMessageResponse>
      parameters:
        - id: notification
          type: <xref uid="@azure/notification-hubs.Notification" />
          description: The notification to send to all devices.
        - id: options
          type: >-
            <xref
            uid="@azure/notification-hubs.BroadcastSendNotificationOptions" />
          description: Options for the notification including whether to enable test send.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsMessageResponse" />&gt;
  - name: >-
      sendNotification(Notification, DirectSendNotificationOptions |
      SendNotificationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.sendNotification'
    package: '@azure/notification-hubs'
    summary: >-
      Sends push notifications to devices that match the given tags or tag
      expression.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendNotification(notification: Notification, options:
        DirectSendNotificationOptions | SendNotificationOptions):
        Promise<NotificationHubsMessageResponse>
      parameters:
        - id: notification
          type: <xref uid="@azure/notification-hubs.Notification" />
          description: The notification to send to the matching devices.
        - id: options
          type: >-
            <xref uid="@azure/notification-hubs.DirectSendNotificationOptions"
            /> | <xref uid="@azure/notification-hubs.SendNotificationOptions" />
          description: >-
            Options for the notification including tags, device handles and
            whether to enable test send.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsMessageResponse" />&gt;
  - name: submitNotificationHubJob(NotificationHubJob, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.submitNotificationHubJob'
    package: '@azure/notification-hubs'
    summary: >-
      Submits a Notification Hub Job.  Note this is available to Standard SKU
      namespace and above.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitNotificationHubJob(job: NotificationHubJob, options?:
        OperationOptions): Promise<NotificationHubJob>
      parameters:
        - id: job
          type: <xref uid="@azure/notification-hubs.NotificationHubJob" />
          description: The notification hub job to submit.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: The notification hub job details including job ID and status.
        type: >-
          Promise&lt;<xref uid="@azure/notification-hubs.NotificationHubJob"
          />&gt;
  - name: updateInstallation(string, JsonPatch[], OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.updateInstallation'
    package: '@azure/notification-hubs'
    summary: Updates an installation using the JSON-Patch standard in RFC6902.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateInstallation(installationId: string, patches:
        JsonPatch[], options?: OperationOptions):
        Promise<NotificationHubsResponse>
      parameters:
        - id: installationId
          type: string
          description: The ID of the installation to update.
        - id: patches
          type: <xref uid="@azure/notification-hubs.JsonPatch" />[]
          description: An array of patches following the JSON-Patch standard.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: Configuration options for the patch installation operation.
      return:
        description: >-
          A NotificationHubResponse with the tracking ID, correlation ID and
          location.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.NotificationHubsResponse" />&gt;
  - name: updateRegistration(RegistrationDescription, OperationOptions)
    uid: '@azure/notification-hubs.NotificationHubsClient.updateRegistration'
    package: '@azure/notification-hubs'
    summary: Updates an existing registration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateRegistration(registration: RegistrationDescription,
        options?: OperationOptions): Promise<RegistrationDescription>
      parameters:
        - id: registration
          type: <xref uid="@azure/notification-hubs.RegistrationDescription" />
          description: The registration to update.
        - id: options
          type: <xref uid="@azure-rest/core-client.OperationOptions" />
          description: The operation options.
      return:
        description: The updated registration description.
        type: >-
          Promise&lt;<xref
          uid="@azure/notification-hubs.RegistrationDescription" />&gt;
