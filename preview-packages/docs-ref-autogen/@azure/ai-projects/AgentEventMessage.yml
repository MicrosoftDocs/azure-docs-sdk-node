### YamlMime:TSType
name: AgentEventMessage
uid: '@azure/ai-projects.AgentEventMessage'
package: '@azure/ai-projects'
summary: >+
  Each event in a server-sent events stream has an `event` and `data` property:

  *

  *


  **Example**


  * ``` ts

  *  event: thread.created

  *  data: {"id": "thread_123", "object": "thread", ...}

  * ```

  *

  *  We emit events whenever a new object is created, transitions to a new
  state, or is being

  *  streamed in parts (deltas). For example, we emit `thread.run.created` when
  a new run

  *  is created, `thread.run.completed` when a run completes, and so on. When an
  Agent chooses

  *  to create a message during a run, we emit a `thread.message.created event`,
  a

  *  `thread.message.in_progress` event, many `thread.message.delta` events, and
  finally a

  *  `thread.message.completed` event.

  *

  *  We may add additional events over time, so we recommend handling unknown
  events gracefully

  *  in your code.

  *

fullName: AgentEventMessage
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: data
    uid: '@azure/ai-projects.AgentEventMessage.data'
    package: '@azure/ai-projects'
    summary: >-
      The data of the event. The data can be of type AgentThreadOutput,
      ThreadRunOutput, RunStepOutput, ThreadMessageOutput,
      MessageDeltaChunk,RunStepDeltaChunk
    fullName: data
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'data: AgentEventStreamDataOutput'
      return:
        description: ''
        type: <xref uid="@azure/ai-projects.AgentEventStreamDataOutput" />
  - name: event
    uid: '@azure/ai-projects.AgentEventMessage.event'
    package: '@azure/ai-projects'
    summary: The type of the event.
    fullName: event
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'event: string'
      return:
        description: ''
        type: string
