### YamlMime:TSType
name: WorkloadIdentityCredential
uid: '@azure/identity.WorkloadIdentityCredential'
package: '@azure/identity'
summary: >-
  Workload Identity authentication is a feature in Azure that allows
  applications running on virtual machines (VMs)

  to access other Azure resources without the need for a service principal or
  managed identity. With Workload Identity

  authentication, applications authenticate themselves using their own identity,
  rather than using a shared service

  principal or managed identity. Under the hood, Workload Identity
  authentication uses the concept of Service Account

  Credentials (SACs), which are automatically created by Azure and stored
  securely in the VM. By using Workload

  Identity authentication, you can avoid the need to manage and rotate service
  principals or managed identities for

  each application on each VM. Additionally, because SACs are created
  automatically and managed by Azure, you don't

  need to worry about storing and securing sensitive credentials themselves.

  The WorkloadIdentityCredential supports Microsoft Entra Workload ID
  authentication on Azure Kubernetes and acquires

  a token using the SACs available in the Azure Kubernetes environment.

  Refer to <a
  href="https://learn.microsoft.com/azure/aks/workload-identity-overview">Microsoft
  Entra

  Workload ID</a> for more information.
fullName: WorkloadIdentityCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: WorkloadIdentityCredential(WorkloadIdentityCredentialOptions)
    uid: '@azure/identity.WorkloadIdentityCredential.constructor'
    package: '@azure/identity'
    summary: >-
      WorkloadIdentityCredential supports Microsoft Entra Workload ID on
      Kubernetes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new WorkloadIdentityCredential(options?:
        WorkloadIdentityCredentialOptions)
      parameters:
        - id: options
          type: <xref uid="@azure/identity.WorkloadIdentityCredentialOptions" />
          description: The identity client options to use for authentication.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.WorkloadIdentityCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Microsoft Entra ID and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           TokenCredential implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
