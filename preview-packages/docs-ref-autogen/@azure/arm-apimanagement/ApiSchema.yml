### YamlMime:TSType
name: ApiSchema
uid: '@azure/arm-apimanagement.ApiSchema'
package: '@azure/arm-apimanagement'
summary: Interface representing a ApiSchema.
fullName: ApiSchema
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, SchemaContract,
      ApiSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.beginCreateOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates schema configuration for the API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, apiId: string, schemaId: string, parameters: SchemaContract,
        options?: ApiSchemaCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ApiSchemaCreateOrUpdateResponse>,
        ApiSchemaCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.SchemaContract" />
          description: The schema contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-apimanagement.ApiSchemaCreateOrUpdateResponse" />&gt;,
          <xref uid="@azure/arm-apimanagement.ApiSchemaCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string, SchemaContract,
      ApiSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.beginCreateOrUpdateAndWait'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates schema configuration for the API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serviceName: string, apiId: string, schemaId: string, parameters:
        SchemaContract, options?: ApiSchemaCreateOrUpdateOptionalParams):
        Promise<ApiSchemaCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.SchemaContract" />
          description: The schema contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ApiSchemaCreateOrUpdateResponse" />&gt;
  - name: >-
      delete(string, string, string, string, string,
      ApiSchemaDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes the schema configuration at the Api.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, apiId:
        string, schemaId: string, ifMatch: string, options?:
        ApiSchemaDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.ApiSchemaDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, string, ApiSchemaGetOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.get'
    package: '@azure/arm-apimanagement'
    summary: Get the schema configuration at the API level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, schemaId: string, options?: ApiSchemaGetOptionalParams):
        Promise<ApiSchemaGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.ApiSchemaGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.ApiSchemaGetResponse"
          />&gt;
  - name: >-
      getEntityTag(string, string, string, string,
      ApiSchemaGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the schema specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, schemaId: string, options?:
        ApiSchemaGetEntityTagOptionalParams):
        Promise<ApiSchemaGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ApiSchemaGetEntityTagHeaders" />&gt;
  - name: listByApi(string, string, string, ApiSchemaListByApiOptionalParams)
    uid: '@azure/arm-apimanagement.ApiSchema.listByApi'
    package: '@azure/arm-apimanagement'
    summary: Get the schema configuration at the API level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByApi(resourceGroupName: string, serviceName: string,
        apiId: string, options?: ApiSchemaListByApiOptionalParams):
        PagedAsyncIterableIterator<SchemaContract, SchemaContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API revision identifier. Must be unique in the current API
            Management service instance.
                         Non-current revision has ;rev=n as a suffix where n is the revision number.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiSchemaListByApiOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.SchemaContract" />, <xref
          uid="@azure/arm-apimanagement.SchemaContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
