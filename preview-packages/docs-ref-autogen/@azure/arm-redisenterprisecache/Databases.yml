### YamlMime:TSType
name: Databases
uid: '@azure/arm-redisenterprisecache.Databases'
package: '@azure/arm-redisenterprisecache'
summary: Interface representing a Databases.
fullName: Databases
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, Database,
      DatabasesCreateOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginCreate'
    package: '@azure/arm-redisenterprisecache'
    summary: Creates a database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, clusterName: string,
        databaseName: string, parameters: Database, options?:
        DatabasesCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Database>, Database>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.Database" />
          description: Parameters supplied to the create or update database operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.Database" />&gt;, <xref
          uid="@azure/arm-redisenterprisecache.Database" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, Database,
      DatabasesCreateOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginCreateAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Creates a database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: Database, options?:
        DatabasesCreateOptionalParams): Promise<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.Database" />
          description: Parameters supplied to the create or update database operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-redisenterprisecache.Database" />&gt;
  - name: beginDelete(string, string, string, DatabasesDeleteOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginDelete'
    package: '@azure/arm-redisenterprisecache'
    summary: Deletes a single database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, clusterName: string,
        databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, DatabasesDeleteOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginDeleteAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Deletes a single database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginExport(string, string, string, ExportClusterParameters,
      DatabasesExportOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginExport'
    package: '@azure/arm-redisenterprisecache'
    summary: Exports a database file from target database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginExport(resourceGroupName: string, clusterName: string,
        databaseName: string, parameters: ExportClusterParameters, options?:
        DatabasesExportOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.ExportClusterParameters"
            />
          description: Storage information for exporting into the cluster
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesExportOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginExportAndWait(string, string, string, ExportClusterParameters,
      DatabasesExportOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginExportAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Exports a database file from target database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginExportAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: ExportClusterParameters,
        options?: DatabasesExportOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.ExportClusterParameters"
            />
          description: Storage information for exporting into the cluster
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesExportOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginFlush(string, string, string, DatabasesFlushOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginFlush'
    package: '@azure/arm-redisenterprisecache'
    summary: Flushes all the keys in this database and also from its linked databases.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(resourceGroupName: string, clusterName: string,
        databaseName: string, options?: DatabasesFlushOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesFlushOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginFlushAndWait(string, string, string, DatabasesFlushOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginFlushAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Flushes all the keys in this database and also from its linked databases.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, options?: DatabasesFlushOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesFlushOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginForceLinkToReplicationGroup(string, string, string,
      ForceLinkParameters, DatabasesForceLinkToReplicationGroupOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginForceLinkToReplicationGroup'
    package: '@azure/arm-redisenterprisecache'
    summary: >-
      Forcibly recreates an existing database on the specified cluster, and
      rejoins it to an existing

      replication group. **IMPORTANT NOTE:** All data in this database will be
      discarded, and the database

      will temporarily be unavailable while rejoining the replication group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginForceLinkToReplicationGroup(resourceGroupName: string,
        clusterName: string, databaseName: string, parameters:
        ForceLinkParameters, options?:
        DatabasesForceLinkToReplicationGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabasesForceLinkToReplicationGroupHeaders>,
        DatabasesForceLinkToReplicationGroupHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ForceLinkParameters" />
          description: Information identifying the database to be unlinked.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesForceLinkToReplicationGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.DatabasesForceLinkToReplicationGroupHeaders"
          />&gt;, <xref
          uid="@azure/arm-redisenterprisecache.DatabasesForceLinkToReplicationGroupHeaders"
          />&gt;&gt;
  - name: >-
      beginForceLinkToReplicationGroupAndWait(string, string, string,
      ForceLinkParameters, DatabasesForceLinkToReplicationGroupOptionalParams)
    uid: >-
      @azure/arm-redisenterprisecache.Databases.beginForceLinkToReplicationGroupAndWait
    package: '@azure/arm-redisenterprisecache'
    summary: >-
      Forcibly recreates an existing database on the specified cluster, and
      rejoins it to an existing

      replication group. **IMPORTANT NOTE:** All data in this database will be
      discarded, and the database

      will temporarily be unavailable while rejoining the replication group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginForceLinkToReplicationGroupAndWait(resourceGroupName:
        string, clusterName: string, databaseName: string, parameters:
        ForceLinkParameters, options?:
        DatabasesForceLinkToReplicationGroupOptionalParams):
        Promise<DatabasesForceLinkToReplicationGroupHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ForceLinkParameters" />
          description: Information identifying the database to be unlinked.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesForceLinkToReplicationGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-redisenterprisecache.DatabasesForceLinkToReplicationGroupHeaders"
          />&gt;
  - name: >-
      beginForceUnlink(string, string, string, ForceUnlinkParameters,
      DatabasesForceUnlinkOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginForceUnlink'
    package: '@azure/arm-redisenterprisecache'
    summary: Forcibly removes the link to the specified database resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginForceUnlink(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: ForceUnlinkParameters,
        options?: DatabasesForceUnlinkOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ForceUnlinkParameters" />
          description: Information identifying the database to be unlinked.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesForceUnlinkOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginForceUnlinkAndWait(string, string, string, ForceUnlinkParameters,
      DatabasesForceUnlinkOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginForceUnlinkAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Forcibly removes the link to the specified database resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginForceUnlinkAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: ForceUnlinkParameters,
        options?: DatabasesForceUnlinkOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.ForceUnlinkParameters" />
          description: Information identifying the database to be unlinked.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesForceUnlinkOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginImport(string, string, string, ImportClusterParameters,
      DatabasesImportOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginImport'
    package: '@azure/arm-redisenterprisecache'
    summary: Imports database files to target database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImport(resourceGroupName: string, clusterName: string,
        databaseName: string, parameters: ImportClusterParameters, options?:
        DatabasesImportOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.ImportClusterParameters"
            />
          description: Storage information for importing into the cluster
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesImportOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginImportAndWait(string, string, string, ImportClusterParameters,
      DatabasesImportOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginImportAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Imports database files to target database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: ImportClusterParameters,
        options?: DatabasesImportOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.ImportClusterParameters"
            />
          description: Storage information for importing into the cluster
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesImportOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRegenerateKey(string, string, string, RegenerateKeyParameters,
      DatabasesRegenerateKeyOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginRegenerateKey'
    package: '@azure/arm-redisenterprisecache'
    summary: Regenerates the Redis Enterprise database's access keys.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKey(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: RegenerateKeyParameters,
        options?: DatabasesRegenerateKeyOptionalParams):
        Promise<SimplePollerLike<OperationState<AccessKeys>, AccessKeys>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.RegenerateKeyParameters"
            />
          description: Specifies which key to regenerate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.AccessKeys" />&gt;, <xref
          uid="@azure/arm-redisenterprisecache.AccessKeys" />&gt;&gt;
  - name: >-
      beginRegenerateKeyAndWait(string, string, string, RegenerateKeyParameters,
      DatabasesRegenerateKeyOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginRegenerateKeyAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Regenerates the Redis Enterprise database's access keys.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKeyAndWait(resourceGroupName: string,
        clusterName: string, databaseName: string, parameters:
        RegenerateKeyParameters, options?:
        DatabasesRegenerateKeyOptionalParams): Promise<AccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-redisenterprisecache.RegenerateKeyParameters"
            />
          description: Specifies which key to regenerate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-redisenterprisecache.AccessKeys"
          />&gt;
  - name: >-
      beginUpdate(string, string, string, DatabaseUpdate,
      DatabasesUpdateOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginUpdate'
    package: '@azure/arm-redisenterprisecache'
    summary: Updates a database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, clusterName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        DatabasesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Database>, Database>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.DatabaseUpdate" />
          description: Parameters supplied to the create or update database operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.Database" />&gt;, <xref
          uid="@azure/arm-redisenterprisecache.Database" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, DatabaseUpdate,
      DatabasesUpdateOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginUpdateAndWait'
    package: '@azure/arm-redisenterprisecache'
    summary: Updates a database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, clusterName:
        string, databaseName: string, parameters: DatabaseUpdate, options?:
        DatabasesUpdateOptionalParams): Promise<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: parameters
          type: <xref uid="@azure/arm-redisenterprisecache.DatabaseUpdate" />
          description: Parameters supplied to the create or update database operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-redisenterprisecache.Database" />&gt;
  - name: >-
      beginUpgradeDBRedisVersion(string, string, string,
      DatabasesUpgradeDBRedisVersionOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.beginUpgradeDBRedisVersion'
    package: '@azure/arm-redisenterprisecache'
    summary: Upgrades the database Redis version to the latest available.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeDBRedisVersion(resourceGroupName: string,
        clusterName: string, databaseName: string, options?:
        DatabasesUpgradeDBRedisVersionOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabasesUpgradeDBRedisVersionHeaders>,
        DatabasesUpgradeDBRedisVersionHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesUpgradeDBRedisVersionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.DatabasesUpgradeDBRedisVersionHeaders"
          />&gt;, <xref
          uid="@azure/arm-redisenterprisecache.DatabasesUpgradeDBRedisVersionHeaders"
          />&gt;&gt;
  - name: >-
      beginUpgradeDBRedisVersionAndWait(string, string, string,
      DatabasesUpgradeDBRedisVersionOptionalParams)
    uid: >-
      @azure/arm-redisenterprisecache.Databases.beginUpgradeDBRedisVersionAndWait
    package: '@azure/arm-redisenterprisecache'
    summary: Upgrades the database Redis version to the latest available.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeDBRedisVersionAndWait(resourceGroupName: string,
        clusterName: string, databaseName: string, options?:
        DatabasesUpgradeDBRedisVersionOptionalParams):
        Promise<DatabasesUpgradeDBRedisVersionHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesUpgradeDBRedisVersionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-redisenterprisecache.DatabasesUpgradeDBRedisVersionHeaders"
          />&gt;
  - name: get(string, string, string, DatabasesGetOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.get'
    package: '@azure/arm-redisenterprisecache'
    summary: Gets information about a database in a Redis Enterprise cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string,
        databaseName: string, options?: DatabasesGetOptionalParams):
        Promise<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-redisenterprisecache.Database" />&gt;
  - name: listByCluster(string, string, DatabasesListByClusterOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.listByCluster'
    package: '@azure/arm-redisenterprisecache'
    summary: Gets all databases in the specified Redis Enterprise cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByCluster(resourceGroupName: string, clusterName: string,
        options?: DatabasesListByClusterOptionalParams):
        PagedAsyncIterableIterator<Database, Database[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesListByClusterOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-redisenterprisecache.Database" />, <xref
          uid="@azure/arm-redisenterprisecache.Database" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, string, DatabasesListKeysOptionalParams)
    uid: '@azure/arm-redisenterprisecache.Databases.listKeys'
    package: '@azure/arm-redisenterprisecache'
    summary: Retrieves the access keys for the Redis Enterprise database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, clusterName: string,
        databaseName: string, options?: DatabasesListKeysOptionalParams):
        Promise<AccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: >-
            The name of the Redis Enterprise cluster. Name must be 1-60
            characters long.
                               Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor
                               consecutive hyphens
        - id: databaseName
          type: string
          description: The name of the Redis Enterprise database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-redisenterprisecache.DatabasesListKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-redisenterprisecache.AccessKeys"
          />&gt;
