### YamlMime:TSType
name: ServiceBusReceivedMessage
uid: '@azure/service-bus.ServiceBusReceivedMessage'
package: '@azure/service-bus'
summary: >-
  Describes the message received from Service Bus during peek operations and so
  cannot be settled.
fullName: ServiceBusReceivedMessage
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: deadLetterErrorDescription
    uid: '@azure/service-bus.ServiceBusReceivedMessage.deadLetterErrorDescription'
    package: '@azure/service-bus'
    summary: The error description for deadlettering the message.
    fullName: deadLetterErrorDescription
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deadLetterErrorDescription?: string'
      return:
        description: ''
        type: string
  - name: deadLetterReason
    uid: '@azure/service-bus.ServiceBusReceivedMessage.deadLetterReason'
    package: '@azure/service-bus'
    summary: The reason for deadlettering the message.
    fullName: deadLetterReason
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deadLetterReason?: string'
      return:
        description: ''
        type: string
  - name: deadLetterSource
    uid: '@azure/service-bus.ServiceBusReceivedMessage.deadLetterSource'
    package: '@azure/service-bus'
    summary: >-
      The name of the queue or subscription that this message

      was enqueued on, before it was deadlettered. Only set in messages that
      have been dead-lettered

      and subsequently auto-forwarded from the dead-letter sub-queue to another
      entity. Indicates the

      entity in which the message was dead-lettered.
    fullName: deadLetterSource
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deadLetterSource?: string'
      return:
        description: ''
        type: string
  - name: deliveryCount
    uid: '@azure/service-bus.ServiceBusReceivedMessage.deliveryCount'
    package: '@azure/service-bus'
    summary: >-
      Number of deliveries that have been attempted for this message. The count
      is

      incremented when a message lock expires, or the message is explicitly
      abandoned using the

      `abandon()` method on the message.
    fullName: deliveryCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deliveryCount?: number'
      return:
        description: ''
        type: number
  - name: enqueuedSequenceNumber
    uid: '@azure/service-bus.ServiceBusReceivedMessage.enqueuedSequenceNumber'
    package: '@azure/service-bus'
    summary: >-
      The original sequence number of the message. For

      messages that have been auto-forwarded, this property reflects the
      sequence number that had

      first been assigned to the message at its original point of submission.
    fullName: enqueuedSequenceNumber
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enqueuedSequenceNumber?: number'
      return:
        description: ''
        type: number
  - name: enqueuedTimeUtc
    uid: '@azure/service-bus.ServiceBusReceivedMessage.enqueuedTimeUtc'
    package: '@azure/service-bus'
    summary: >-
      The UTC instant at which the message has been accepted and stored in
      Service Bus.
    fullName: enqueuedTimeUtc
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enqueuedTimeUtc?: Date'
      return:
        description: ''
        type: Date
  - name: expiresAtUtc
    uid: '@azure/service-bus.ServiceBusReceivedMessage.expiresAtUtc'
    package: '@azure/service-bus'
    summary: >-
      The UTC instant at which the message is marked for removal and no longer
      available for

      retrieval from the entity due to expiration. This property is computed
      from 2 other properties

      on the message: `enqueuedTimeUtc` + `timeToLive`.
    fullName: expiresAtUtc
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'expiresAtUtc?: Date'
      return:
        description: ''
        type: Date
  - name: lockedUntilUtc
    uid: '@azure/service-bus.ServiceBusReceivedMessage.lockedUntilUtc'
    package: '@azure/service-bus'
    summary: >-
      The UTC instant until which the message is held locked in the
      queue/subscription.

      When the lock expires, the `deliveryCount` is incremented and the message
      is again available

      for retrieval.

      - Not applicable when the message is received in `receiveAndDelete`
      receive mode.

      mode.
    fullName: lockedUntilUtc
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lockedUntilUtc?: Date'
      return:
        description: ''
        type: Date
  - name: lockToken
    uid: '@azure/service-bus.ServiceBusReceivedMessage.lockToken'
    package: '@azure/service-bus'
    summary: >-
      The lock token is a reference to the lock that is being held by the broker
      in

      `peekLock` receive mode. Locks are used internally settle messages as
      explained in the

      [product documentation in more
      detail](https://learn.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement)

      - Not applicable when the message is received in `receiveAndDelete`
      receive mode.

      mode.
    fullName: lockToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lockToken?: string'
      return:
        description: ''
        type: string
  - name: sequenceNumber
    uid: '@azure/service-bus.ServiceBusReceivedMessage.sequenceNumber'
    package: '@azure/service-bus'
    summary: >-
      The unique number assigned to a message by Service Bus.

      The sequence number is a unique 64-bit integer assigned to a message as it
      is accepted

      and stored by the broker and functions as its true identifier. For
      partitioned entities,

      the topmost 16 bits reflect the partition identifier. Sequence numbers
      monotonically increase.

      They roll over to 0 when the 48-64 bit range is exhausted.


      **Max safe integer** that Javascript currently supports is `2^53 - 1`. The
      sequence number

      is an AMQP `Long` type which can be upto 64 bits long. To represent that
      we are using a

      library named [long.js](https://github.com/dcodeIO/long.js). We expect
      customers

      to use the **`Long`** type exported by this library.
    fullName: sequenceNumber
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sequenceNumber?: Long'
      return:
        description: ''
        type: Long
  - name: state
    uid: '@azure/service-bus.ServiceBusReceivedMessage.state'
    package: '@azure/service-bus'
    summary: >-
      State of the message can be active, deferred or scheduled. Deferred
      messages have deferred state,

      scheduled messages have scheduled state, all other messages have active
      state.
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state: "active" | "deferred" | "scheduled"'
      return:
        description: ''
        type: '"active" | "deferred" | "scheduled"'
inheritedProperties:
  - name: applicationProperties
    uid: '@azure/service-bus.ServiceBusReceivedMessage.applicationProperties'
    package: '@azure/service-bus'
    summary: |-
      The application specific properties which can be
      used for custom message metadata.
    fullName: applicationProperties
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        applicationProperties?: {[key: string]: number | boolean | string | Date
        | null}
      return:
        description: ''
        type: '{[key: string]: number | boolean | string | Date | null}'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.applicationProperties](xref:@azure/service-bus.ServiceBusMessage.applicationProperties)
  - name: body
    uid: '@azure/service-bus.ServiceBusReceivedMessage.body'
    package: '@azure/service-bus'
    summary: |-
      The message body that needs to be sent or is received.
      If the application receiving the message is not using this SDK,
      convert your body payload to a byte array or Buffer for better
      cross-language compatibility.
    fullName: body
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'body: any'
      return:
        description: ''
        type: any
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.body](xref:@azure/service-bus.ServiceBusMessage.body)
  - name: contentType
    uid: '@azure/service-bus.ServiceBusReceivedMessage.contentType'
    package: '@azure/service-bus'
    summary: >-
      The content type of the message. Optionally describes

      the payload of the message, with a descriptor following the format of
      RFC2045, Section 5, for

      example "application/json".
    fullName: contentType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'contentType?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.contentType](xref:@azure/service-bus.ServiceBusMessage.contentType)
  - name: correlationId
    uid: '@azure/service-bus.ServiceBusReceivedMessage.correlationId'
    package: '@azure/service-bus'
    summary: >-
      The correlation identifier that allows an

      application to specify a context for the message for the purposes of
      correlation, for example

      reflecting the MessageId of a message that is being replied to.

      See [Message Routing and
      Correlation](https://learn.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: correlationId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'correlationId?: string | number | Buffer'
      return:
        description: ''
        type: string | number | Buffer
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.correlationId](xref:@azure/service-bus.ServiceBusMessage.correlationId)
  - name: messageId
    uid: '@azure/service-bus.ServiceBusReceivedMessage.messageId'
    package: '@azure/service-bus'
    summary: >-
      The message identifier is an

      application-defined value that uniquely identifies the message and its
      payload.


      Note: Numbers that are not whole integers are not allowed.
    fullName: messageId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageId?: string | number | Buffer'
      return:
        description: ''
        type: string | number | Buffer
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.messageId](xref:@azure/service-bus.ServiceBusMessage.messageId)
  - name: partitionKey
    uid: '@azure/service-bus.ServiceBusReceivedMessage.partitionKey'
    package: '@azure/service-bus'
    summary: >-
      The partition key for sending a message to a partitioned entity.

      Maximum length is 128 characters. For [partitioned
      entities](https://learn.microsoft.com/azure/service-bus-messaging/service-bus-partitioning),

      setting this value enables assigning related messages to the same internal
      partition,

      so that submission sequence order is correctly recorded. The partition is
      chosen by a hash

      function over this value and cannot be chosen directly.

      - For session-aware entities, the `sessionId` property overrides this
      value.

      - For non partitioned entities, partition key will be ignored
    fullName: partitionKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'partitionKey?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.partitionKey](xref:@azure/service-bus.ServiceBusMessage.partitionKey)
  - name: replyTo
    uid: '@azure/service-bus.ServiceBusReceivedMessage.replyTo'
    package: '@azure/service-bus'
    summary: >-
      The address of an entity to send replies to. This optional and

      application-defined value is a standard way to express a reply path to the
      receiver of the

      message. When a sender expects a reply, it sets the value to the absolute
      or relative path of

      the queue or topic it expects the reply to be sent to. See

      [Message Routing and
      Correlation](https://learn.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: replyTo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'replyTo?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.replyTo](xref:@azure/service-bus.ServiceBusMessage.replyTo)
  - name: replyToSessionId
    uid: '@azure/service-bus.ServiceBusReceivedMessage.replyToSessionId'
    package: '@azure/service-bus'
    summary: >-
      The session identifier augmenting the `replyTo` address.

      Maximum length is 128 characters. This value augments the ReplyTo
      information and specifies

      which SessionId should be set for the reply when sent to the reply entity.

      See [Message Routing and
      Correlation](https://learn.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: replyToSessionId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'replyToSessionId?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.replyToSessionId](xref:@azure/service-bus.ServiceBusMessage.replyToSessionId)
  - name: scheduledEnqueueTimeUtc
    uid: '@azure/service-bus.ServiceBusReceivedMessage.scheduledEnqueueTimeUtc'
    package: '@azure/service-bus'
    summary: >-
      The date and time in UTC at which the message will

      be enqueued. This property returns the time in UTC; when setting the
      property, the

      supplied DateTime value must also be in UTC. This value is for delayed
      message sending.

      It is utilized to delay messages sending to a specific time in the future.
      Message enqueuing

      time does not mean that the message will be sent at the same time. It will
      get enqueued,

      but the actual sending time depends on the queue's workload and its state.
    fullName: scheduledEnqueueTimeUtc
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scheduledEnqueueTimeUtc?: Date'
      return:
        description: ''
        type: Date
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.scheduledEnqueueTimeUtc](xref:@azure/service-bus.ServiceBusMessage.scheduledEnqueueTimeUtc)
  - name: sessionId
    uid: '@azure/service-bus.ServiceBusReceivedMessage.sessionId'
    package: '@azure/service-bus'
    summary: >-
      The session identifier for a session-aware entity. Maximum

      length is 128 characters. For session-aware entities, this
      application-defined value specifies

      the session affiliation of the message. Messages with the same session
      identifier are subject

      to summary locking and enable exact in-order processing and
      demultiplexing. For

      session-unaware entities, this value is ignored.

      [Message
      Sessions](https://learn.microsoft.com/azure/service-bus-messaging/message-sessions).
    fullName: sessionId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sessionId?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.sessionId](xref:@azure/service-bus.ServiceBusMessage.sessionId)
  - name: subject
    uid: '@azure/service-bus.ServiceBusReceivedMessage.subject'
    package: '@azure/service-bus'
    summary: >-
      The application specific label. This property enables the

      application to indicate the purpose of the message to the receiver in a
      standardized. fashion,

      similar to an email subject line. The mapped AMQP property is "subject".
    fullName: subject
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'subject?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.subject](xref:@azure/service-bus.ServiceBusMessage.subject)
  - name: timeToLive
    uid: '@azure/service-bus.ServiceBusReceivedMessage.timeToLive'
    package: '@azure/service-bus'
    summary: >-
      The message’s time to live value. This value is the relative

      duration after which the message expires, starting from the instant the
      message has been

      accepted and stored by the broker, as captured in `enqueuedTimeUtc`. When
      not set explicitly,

      the assumed value is the DefaultTimeToLive for the respective queue or
      topic. A message-level

      `timeToLive` value cannot be longer than the entity's DefaultTimeToLive
      setting and it is

      silently adjusted if it does. See

      [Expiration](https://learn.microsoft.com/azure/service-bus-messaging/message-expiration).
    fullName: timeToLive
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timeToLive?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.timeToLive](xref:@azure/service-bus.ServiceBusMessage.timeToLive)
  - name: to
    uid: '@azure/service-bus.ServiceBusReceivedMessage.to'
    package: '@azure/service-bus'
    summary: >-
      The "to" address. This property is reserved for future use in routing

      scenarios and presently ignored by the broker itself. Applications can use
      this value in

      rule-driven [auto-forward
      chaining](https://learn.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding)

      scenarios to indicate the intended logical destination of the message.
    fullName: to
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'to?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ServiceBusMessage.to](xref:@azure/service-bus.ServiceBusMessage.to)
extends: <xref uid="@azure/service-bus.ServiceBusMessage" />
