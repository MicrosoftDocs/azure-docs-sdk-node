### YamlMime:TSType
name: Connectors
uid: '@azure/arm-customerinsights.Connectors'
package: '@azure/arm-customerinsights'
summary: Interface representing a Connectors.
fullName: Connectors
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, ConnectorResourceFormat,
      ConnectorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.beginCreateOrUpdate'
    package: '@azure/arm-customerinsights'
    summary: Creates a connector or updates an existing connector in the hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, hubName: string,
        connectorName: string, parameters: ConnectorResourceFormat, options?:
        ConnectorsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ConnectorResourceFormat>,
        ConnectorResourceFormat>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: parameters
          type: <xref uid="@azure/arm-customerinsights.ConnectorResourceFormat" />
          description: Parameters supplied to the CreateOrUpdate Connector operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-customerinsights.ConnectorsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-customerinsights.ConnectorResourceFormat" />&gt;,
          <xref uid="@azure/arm-customerinsights.ConnectorResourceFormat"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string,
      ConnectorResourceFormat, ConnectorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.beginCreateOrUpdateAndWait'
    package: '@azure/arm-customerinsights'
    summary: Creates a connector or updates an existing connector in the hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string, hubName:
        string, connectorName: string, parameters: ConnectorResourceFormat,
        options?: ConnectorsCreateOrUpdateOptionalParams):
        Promise<ConnectorResourceFormat>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: parameters
          type: <xref uid="@azure/arm-customerinsights.ConnectorResourceFormat" />
          description: Parameters supplied to the CreateOrUpdate Connector operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-customerinsights.ConnectorsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-customerinsights.ConnectorResourceFormat" />&gt;
  - name: beginDelete(string, string, string, ConnectorsDeleteOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.beginDelete'
    package: '@azure/arm-customerinsights'
    summary: Deletes a connector in the hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, hubName: string,
        connectorName: string, options?: ConnectorsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-customerinsights.ConnectorsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, ConnectorsDeleteOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.beginDeleteAndWait'
    package: '@azure/arm-customerinsights'
    summary: Deletes a connector in the hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, hubName: string,
        connectorName: string, options?: ConnectorsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-customerinsights.ConnectorsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, ConnectorsGetOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.get'
    package: '@azure/arm-customerinsights'
    summary: Gets a connector in the hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hubName: string, connectorName:
        string, options?: ConnectorsGetOptionalParams):
        Promise<ConnectorResourceFormat>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: connectorName
          type: string
          description: The name of the connector.
        - id: options
          type: >-
            <xref uid="@azure/arm-customerinsights.ConnectorsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-customerinsights.ConnectorResourceFormat" />&gt;
  - name: listByHub(string, string, ConnectorsListByHubOptionalParams)
    uid: '@azure/arm-customerinsights.Connectors.listByHub'
    package: '@azure/arm-customerinsights'
    summary: Gets all the connectors in the specified hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByHub(resourceGroupName: string, hubName: string, options?:
        ConnectorsListByHubOptionalParams):
        PagedAsyncIterableIterator<ConnectorResourceFormat,
        ConnectorResourceFormat[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: hubName
          type: string
          description: The name of the hub.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-customerinsights.ConnectorsListByHubOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-customerinsights.ConnectorResourceFormat" />, <xref
          uid="@azure/arm-customerinsights.ConnectorResourceFormat" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
