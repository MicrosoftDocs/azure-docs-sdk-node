### YamlMime:TSType
name: ClientGroups
uid: '@azure/arm-eventgrid.ClientGroups'
package: '@azure/arm-eventgrid'
summary: Interface representing a ClientGroups.
fullName: ClientGroups
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, ClientGroup,
      ClientGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.beginCreateOrUpdate'
    package: '@azure/arm-eventgrid'
    summary: Create or update a client group with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, clientGroupName: string, clientGroupInfo: ClientGroup, options?:
        ClientGroupsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ClientGroup>, ClientGroup>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientGroupName
          type: string
          description: The client group name.
        - id: clientGroupInfo
          type: <xref uid="@azure/arm-eventgrid.ClientGroup" />
          description: Client group information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.ClientGroupsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.ClientGroup" />&gt;, <xref
          uid="@azure/arm-eventgrid.ClientGroup" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, ClientGroup,
      ClientGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.beginCreateOrUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: Create or update a client group with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        namespaceName: string, clientGroupName: string, clientGroupInfo:
        ClientGroup, options?: ClientGroupsCreateOrUpdateOptionalParams):
        Promise<ClientGroup>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientGroupName
          type: string
          description: The client group name.
        - id: clientGroupInfo
          type: <xref uid="@azure/arm-eventgrid.ClientGroup" />
          description: Client group information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.ClientGroupsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.ClientGroup" />&gt;
  - name: beginDelete(string, string, string, ClientGroupsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.beginDelete'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing client group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, namespaceName: string,
        clientGroupName: string, options?: ClientGroupsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientGroupName
          type: string
          description: Name of the client group.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientGroupsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      ClientGroupsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.beginDeleteAndWait'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing client group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, namespaceName:
        string, clientGroupName: string, options?:
        ClientGroupsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientGroupName
          type: string
          description: Name of the client group.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientGroupsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, ClientGroupsGetOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.get'
    package: '@azure/arm-eventgrid'
    summary: Get properties of a client group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        clientGroupName: string, options?: ClientGroupsGetOptionalParams):
        Promise<ClientGroup>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientGroupName
          type: string
          description: Name of the client group.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientGroupsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.ClientGroup" />&gt;
  - name: listByNamespace(string, string, ClientGroupsListByNamespaceOptionalParams)
    uid: '@azure/arm-eventgrid.ClientGroups.listByNamespace'
    package: '@azure/arm-eventgrid'
    summary: Get all the client groups under a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: ClientGroupsListByNamespaceOptionalParams):
        PagedAsyncIterableIterator<ClientGroup, ClientGroup[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.ClientGroupsListByNamespaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.ClientGroup" />, <xref
          uid="@azure/arm-eventgrid.ClientGroup" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
