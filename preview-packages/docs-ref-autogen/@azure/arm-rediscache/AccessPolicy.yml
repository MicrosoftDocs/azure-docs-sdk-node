### YamlMime:TSType
name: AccessPolicy
uid: '@azure/arm-rediscache.AccessPolicy'
package: '@azure/arm-rediscache'
summary: Interface representing a AccessPolicy.
fullName: AccessPolicy
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdate(string, string, string, RedisCacheAccessPolicy,
      AccessPolicyCreateUpdateOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.beginCreateUpdate'
    package: '@azure/arm-rediscache'
    summary: Adds an access policy to the redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdate(resourceGroupName: string, cacheName: string,
        accessPolicyName: string, parameters: RedisCacheAccessPolicy, options?:
        AccessPolicyCreateUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<RedisCacheAccessPolicy>,
        RedisCacheAccessPolicy>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: accessPolicyName
          type: string
          description: >-
            The name of the access policy that is being added to the Redis
            cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />
          description: Parameters supplied to the Create Update Access Policy operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.AccessPolicyCreateUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />&gt;, <xref
          uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />&gt;&gt;
  - name: >-
      beginCreateUpdateAndWait(string, string, string, RedisCacheAccessPolicy,
      AccessPolicyCreateUpdateOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.beginCreateUpdateAndWait'
    package: '@azure/arm-rediscache'
    summary: Adds an access policy to the redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateAndWait(resourceGroupName: string, cacheName:
        string, accessPolicyName: string, parameters: RedisCacheAccessPolicy,
        options?: AccessPolicyCreateUpdateOptionalParams):
        Promise<RedisCacheAccessPolicy>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: accessPolicyName
          type: string
          description: >-
            The name of the access policy that is being added to the Redis
            cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />
          description: Parameters supplied to the Create Update Access Policy operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.AccessPolicyCreateUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-rediscache.RedisCacheAccessPolicy"
          />&gt;
  - name: beginDelete(string, string, string, AccessPolicyDeleteOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.beginDelete'
    package: '@azure/arm-rediscache'
    summary: Deletes the access policy from a redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, cacheName: string,
        accessPolicyName: string, options?: AccessPolicyDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: accessPolicyName
          type: string
          description: >-
            The name of the access policy that is being added to the Redis
            cache.
        - id: options
          type: >-
            <xref uid="@azure/arm-rediscache.AccessPolicyDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      AccessPolicyDeleteOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.beginDeleteAndWait'
    package: '@azure/arm-rediscache'
    summary: Deletes the access policy from a redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, cacheName:
        string, accessPolicyName: string, options?:
        AccessPolicyDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: accessPolicyName
          type: string
          description: >-
            The name of the access policy that is being added to the Redis
            cache.
        - id: options
          type: >-
            <xref uid="@azure/arm-rediscache.AccessPolicyDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, AccessPolicyGetOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.get'
    package: '@azure/arm-rediscache'
    summary: Gets the detailed information about an access policy of a redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        accessPolicyName: string, options?: AccessPolicyGetOptionalParams):
        Promise<RedisCacheAccessPolicy>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: accessPolicyName
          type: string
          description: >-
            The name of the access policy that is being added to the Redis
            cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.AccessPolicyGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-rediscache.RedisCacheAccessPolicy"
          />&gt;
  - name: list(string, string, AccessPolicyListOptionalParams)
    uid: '@azure/arm-rediscache.AccessPolicy.list'
    package: '@azure/arm-rediscache'
    summary: Gets the list of access policies associated with this redis cache
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, cacheName: string, options?:
        AccessPolicyListOptionalParams):
        PagedAsyncIterableIterator<RedisCacheAccessPolicy,
        RedisCacheAccessPolicy[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.AccessPolicyListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />, <xref
          uid="@azure/arm-rediscache.RedisCacheAccessPolicy" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
