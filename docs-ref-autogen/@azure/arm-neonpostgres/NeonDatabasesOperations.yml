### YamlMime:TSType
name: NeonDatabasesOperations
uid: '@azure/arm-neonpostgres.NeonDatabasesOperations'
package: '@azure/arm-neonpostgres'
summary: Interface representing a NeonDatabases operations.
fullName: NeonDatabasesOperations
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: createOrUpdate
    uid: '@azure/arm-neonpostgres.NeonDatabasesOperations.createOrUpdate'
    package: '@azure/arm-neonpostgres'
    summary: Create a NeonDatabase
    fullName: createOrUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createOrUpdate: (resourceGroupName: string, organizationName: string,
        projectName: string, branchName: string, neonDatabaseName: string,
        resource: NeonDatabase, options?:
        NeonDatabasesCreateOrUpdateOptionalParams) =>
        PollerLike<OperationState<NeonDatabase>, NeonDatabase>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, branchName: string, neonDatabaseName: string, resource:
          NeonDatabase, options?: NeonDatabasesCreateOrUpdateOptionalParams)
          =&gt; PollerLike&lt;OperationState&lt;NeonDatabase&gt;,
          NeonDatabase&gt;
  - name: delete
    uid: '@azure/arm-neonpostgres.NeonDatabasesOperations.delete'
    package: '@azure/arm-neonpostgres'
    summary: ''
    fullName: delete
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        delete: (resourceGroupName: string, organizationName: string,
        projectName: string, branchName: string, neonDatabaseName: string,
        options?: NeonDatabasesDeleteOptionalParams) => Promise<void>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, branchName: string, neonDatabaseName: string, options?:
          NeonDatabasesDeleteOptionalParams) =&gt; Promise&lt;void&gt;
  - name: get
    uid: '@azure/arm-neonpostgres.NeonDatabasesOperations.get'
    package: '@azure/arm-neonpostgres'
    summary: Get a NeonDatabase
    fullName: get
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        get: (resourceGroupName: string, organizationName: string, projectName:
        string, branchName: string, neonDatabaseName: string, options?:
        NeonDatabasesGetOptionalParams) => Promise<NeonDatabase>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, branchName: string, neonDatabaseName: string, options?:
          NeonDatabasesGetOptionalParams) =&gt; Promise&lt;NeonDatabase&gt;
  - name: list
    uid: '@azure/arm-neonpostgres.NeonDatabasesOperations.list'
    package: '@azure/arm-neonpostgres'
    summary: List NeonDatabase resources by Branch
    fullName: list
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        list: (resourceGroupName: string, organizationName: string, projectName:
        string, branchName: string, options?: NeonDatabasesListOptionalParams)
        => PagedAsyncIterableIterator<NeonDatabase, NeonDatabase[],
        PageSettings>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, branchName: string, options?: NeonDatabasesListOptionalParams)
          =&gt; PagedAsyncIterableIterator&lt;NeonDatabase, NeonDatabase[],
          PageSettings&gt;
  - name: update
    uid: '@azure/arm-neonpostgres.NeonDatabasesOperations.update'
    package: '@azure/arm-neonpostgres'
    summary: Update a NeonDatabase
    fullName: update
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        update: (resourceGroupName: string, organizationName: string,
        projectName: string, branchName: string, neonDatabaseName: string,
        properties: NeonDatabase, options?: NeonDatabasesUpdateOptionalParams)
        => PollerLike<OperationState<NeonDatabase>, NeonDatabase>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, branchName: string, neonDatabaseName: string, properties:
          NeonDatabase, options?: NeonDatabasesUpdateOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;NeonDatabase&gt;, NeonDatabase&gt;
