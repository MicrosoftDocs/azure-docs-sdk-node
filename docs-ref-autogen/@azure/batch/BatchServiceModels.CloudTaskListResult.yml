### YamlMime:TSType
name: CloudTaskListResult
uid: '@azure/batch.BatchServiceModels.CloudTaskListResult'
package: '@azure/batch'
summary: ''
fullName: CloudTaskListResult
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: odatanextLink
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.odatanextLink'
    package: '@azure/batch'
    summary: ''
    fullName: odatanextLink
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'odatanextLink?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: length
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.length'
    package: '@azure/batch'
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest index in the array.
    fullName: length
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.length
inheritedMethods:
  - name: concat((CloudTask | ConcatArray<CloudTask>)[])
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.concat_1'
    package: '@azure/batch'
    summary: |-
      Combines two or more arrays.
      This method returns a new array without modifying any existing arrays.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function concat(items: (CloudTask | ConcatArray<CloudTask>)[]):
        CloudTask[]
      parameters:
        - id: items
          type: >-
            (<xref uid="@azure/batch.BatchServiceModels.CloudTask" /> |
            ConcatArray&lt;<xref uid="@azure/batch.BatchServiceModels.CloudTask"
            />&gt;)[]
          description: Additional arrays and/or items to add to the end of the array.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.concat
  - name: concat(ConcatArray<CloudTask>[])
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.concat'
    package: '@azure/batch'
    summary: |-
      Combines two or more arrays.
      This method returns a new array without modifying any existing arrays.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function concat(items: ConcatArray<CloudTask>[]): CloudTask[]'
      parameters:
        - id: items
          type: >-
            ConcatArray&lt;<xref uid="@azure/batch.BatchServiceModels.CloudTask"
            />&gt;[]
          description: Additional arrays and/or items to add to the end of the array.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.concat
  - name: copyWithin(number, number, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.copyWithin'
    package: '@azure/batch'
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function copyWithin(target: number, start: number, end?: number):
        CloudTaskListResult
      parameters:
        - id: target
          type: number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type: number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type: number
          description: >-
            If not specified, length of the this object is used as its default
            value.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTaskListResult" />
    inheritanceDescription: <b>Inherited From</b> Array.copyWithin
  - name: entries()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.entries'
    package: '@azure/batch'
    summary: Returns an iterable of key, value pairs for every entry in the array
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function entries(): IterableIterator<[number, CloudTask]>'
      return:
        description: ''
        type: IterableIterator&lt;[number, CloudTask]&gt;
    inheritanceDescription: <b>Inherited From</b> Array.entries
  - name: >-
      every((value: CloudTask, index: number, array: CloudTask[]) => unknown,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.every_1'
    package: '@azure/batch'
    summary: Determines whether all the members of an array satisfy the specified test.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function every(predicate: (value: CloudTask, index: number, array:
        CloudTask[]) => unknown, thisArg?: any): boolean
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The every method
            calls

            the predicate function for each element in the array until the
            predicate returns a value

            which is coercible to the Boolean value false, or until the end of
            the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the predicate
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Array.every
  - name: >-
      every<S>((value: CloudTask, index: number, array: CloudTask[]) => value,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.every'
    package: '@azure/batch'
    summary: Determines whether all the members of an array satisfy the specified test.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function every<S>(predicate: (value: CloudTask, index: number, array:
        CloudTask[]) => value, thisArg?: any): this
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; value'
          description: >-
            A function that accepts up to three arguments. The every method
            calls

            the predicate function for each element in the array until the
            predicate returns a value

            which is coercible to the Boolean value false, or until the end of
            the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the predicate
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: this
    inheritanceDescription: <b>Inherited From</b> Array.every
  - name: fill(CloudTask, number, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.fill'
    package: '@azure/batch'
    summary: >-
      Changes all array elements from `start` to `end` index to a static `value`
      and returns the modified array
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function fill(value: CloudTask, start?: number, end?: number):
        CloudTaskListResult
      parameters:
        - id: value
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: value to fill array section with
        - id: start
          type: number
          description: >-
            index to start filling the array at. If start is negative, it is
            treated as

            length+start where length is the length of the array.
        - id: end
          type: number
          description: >-
            index to stop filling the array at. If end is negative, it is
            treated as

            length+end.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTaskListResult" />
    inheritanceDescription: <b>Inherited From</b> Array.fill
  - name: >-
      filter((value: CloudTask, index: number, array: CloudTask[]) => unknown,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.filter_1'
    package: '@azure/batch'
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function filter(predicate: (value: CloudTask, index: number, array:
        CloudTask[]) => unknown, thisArg?: any): CloudTask[]
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the predicate function one time for each element in the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the predicate
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.filter
  - name: >-
      filter<S>((value: CloudTask, index: number, array: CloudTask[]) => value,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.filter'
    package: '@azure/batch'
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function filter<S>(predicate: (value: CloudTask, index: number, array:
        CloudTask[]) => value, thisArg?: any): S[]
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; value'
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the predicate function one time for each element in the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the predicate
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: S[]
    inheritanceDescription: <b>Inherited From</b> Array.filter
  - name: 'find((value: CloudTask, index: number, obj: CloudTask[]) => unknown, any)'
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.find_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function find(predicate: (value: CloudTask, index: number, obj:
        CloudTask[]) => unknown, thisArg?: any): undefined | CloudTask
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, obj: CloudTask[]) =&gt; unknown'
          description: ''
        - id: thisArg
          type: any
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.find
  - name: >-
      find<S>((this: void, value: CloudTask, index: number, obj: CloudTask[]) =>
      value, any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.find'
    package: '@azure/batch'
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function find<S>(predicate: (this: void, value: CloudTask, index:
        number, obj: CloudTask[]) => value, thisArg?: any): undefined | S
      parameters:
        - id: predicate
          type: >-
            (this: void, value: CloudTask, index: number, obj: CloudTask[])
            =&gt; value
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type: any
          description: >-
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        description: ''
        type: undefined | S
    inheritanceDescription: <b>Inherited From</b> Array.find
  - name: >-
      findIndex((value: CloudTask, index: number, obj: CloudTask[]) => unknown,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.findIndex'
    package: '@azure/batch'
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function findIndex(predicate: (value: CloudTask, index: number, obj:
        CloudTask[]) => unknown, thisArg?: any): number
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, obj: CloudTask[]) =&gt; unknown'
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type: any
          description: >-
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.findIndex
  - name: flat<A, D>(A, D)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.flat'
    package: '@azure/batch'
    summary: >-
      Returns a new array with all sub-array elements concatenated into it
      recursively up to the

      specified depth.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function flat<A, D>(this: A, depth?: D): FlatArray<A, D>[]'
      parameters:
        - id: this
          type: A
          description: ''
        - id: depth
          type: D
          description: The maximum recursion depth
      return:
        description: ''
        type: FlatArray&lt;A, D&gt;[]
    inheritanceDescription: <b>Inherited From</b> Array.flat
  - name: >-
      flatMap<U, This>((this: This, value: CloudTask, index: number, array:
      CloudTask[]) => U | (readonly U[]), This)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.flatMap'
    package: '@azure/batch'
    summary: >-
      Calls a defined callback function on each element of an array. Then,
      flattens the result into

      a new array.

      This is identical to a map followed by flat with depth 1.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function flatMap<U, This>(callback: (this: This, value: CloudTask,
        index: number, array: CloudTask[]) => U | (readonly U[]), thisArg?:
        This): U[]
      parameters:
        - id: callback
          type: >-
            (this: This, value: CloudTask, index: number, array: CloudTask[])
            =&gt; U | (readonly U[])
          description: >-
            A function that accepts up to three arguments. The flatMap method
            calls the

            callback function one time for each element in the array.
        - id: thisArg
          type: This
          description: >-
            An object to which the this keyword can refer in the callback
            function. If

            thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: U[]
    inheritanceDescription: <b>Inherited From</b> Array.flatMap
  - name: >-
      forEach((value: CloudTask, index: number, array: CloudTask[]) => void,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.forEach'
    package: '@azure/batch'
    summary: Performs the specified action for each element in an array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function forEach(callbackfn: (value: CloudTask, index: number, array:
        CloudTask[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; void'
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
    inheritanceDescription: <b>Inherited From</b> Array.forEach
  - name: includes(CloudTask, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.includes'
    package: '@azure/batch'
    summary: >-
      Determines whether an array includes a certain element, returning true or
      false as appropriate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function includes(searchElement: CloudTask, fromIndex?: number): boolean'
      parameters:
        - id: searchElement
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: The element to search for.
        - id: fromIndex
          type: number
          description: >-
            The position in this array at which to begin searching for
            searchElement.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Array.includes
  - name: indexOf(CloudTask, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.indexOf'
    package: '@azure/batch'
    summary: >-
      Returns the index of the first occurrence of a value in an array, or -1 if
      it is not present.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function indexOf(searchElement: CloudTask, fromIndex?: number): number'
      parameters:
        - id: searchElement
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >-
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.indexOf
  - name: join(string)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.join'
    package: '@azure/batch'
    summary: >-
      Adds all the elements of an array into a string, separated by the
      specified separator string.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function join(separator?: string): string'
      parameters:
        - id: separator
          type: string
          description: >-
            A string used to separate one element of the array from the next in
            the resulting string. If omitted, the array elements are separated
            with a comma.
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.join
  - name: keys()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.keys'
    package: '@azure/batch'
    summary: Returns an iterable of keys in the array
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function keys(): IterableIterator<number>'
      return:
        description: ''
        type: IterableIterator&lt;number&gt;
    inheritanceDescription: <b>Inherited From</b> Array.keys
  - name: lastIndexOf(CloudTask, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.lastIndexOf'
    package: '@azure/batch'
    summary: >-
      Returns the index of the last occurrence of a specified value in an array,
      or -1 if it is not present.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function lastIndexOf(searchElement: CloudTask, fromIndex?: number):
        number
      parameters:
        - id: searchElement
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: The value to locate in the array.
        - id: fromIndex
          type: number
          description: >-
            The array index at which to begin searching backward. If fromIndex
            is omitted, the search starts at the last index in the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.lastIndexOf
  - name: 'map<U>((value: CloudTask, index: number, array: CloudTask[]) => U, any)'
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.map'
    package: '@azure/batch'
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function map<U>(callbackfn: (value: CloudTask, index: number, array:
        CloudTask[]) => U, thisArg?: any): U[]
      parameters:
        - id: callbackfn
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; U'
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
      return:
        description: ''
        type: U[]
    inheritanceDescription: <b>Inherited From</b> Array.map
  - name: pop()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.pop'
    package: '@azure/batch'
    summary: >-
      Removes the last element from an array and returns it.

      If the array is empty, undefined is returned and the array is not
      modified.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function pop(): undefined | CloudTask'
      return:
        description: ''
        type: undefined | <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.pop
  - name: push(CloudTask[])
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.push'
    package: '@azure/batch'
    summary: >-
      Appends new elements to the end of an array, and returns the new length of
      the array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function push(items: CloudTask[]): number'
      parameters:
        - id: items
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
          description: New elements to add to the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.push
  - name: >-
      reduce((previousValue: CloudTask, currentValue: CloudTask, currentIndex:
      number, array: CloudTask[]) => CloudTask)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduce'
    package: '@azure/batch'
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: CloudTask, currentValue:
        CloudTask, currentIndex: number, array: CloudTask[]) => CloudTask):
        CloudTask
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: CloudTask, currentValue: CloudTask, currentIndex:
            number, array: CloudTask[]) =&gt; CloudTask
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduce((previousValue: CloudTask, currentValue: CloudTask, currentIndex:
      number, array: CloudTask[]) => CloudTask, CloudTask)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduce_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: CloudTask, currentValue:
        CloudTask, currentIndex: number, array: CloudTask[]) => CloudTask,
        initialValue: CloudTask): CloudTask
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: CloudTask, currentValue: CloudTask, currentIndex:
            number, array: CloudTask[]) =&gt; CloudTask
          description: ''
        - id: initialValue
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduce<U>((previousValue: U, currentValue: CloudTask, currentIndex:
      number, array: CloudTask[]) => U, U)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduce_2'
    package: '@azure/batch'
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue:
        CloudTask, currentIndex: number, array: CloudTask[]) => U, initialValue:
        U): U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: CloudTask, currentIndex: number,
            array: CloudTask[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >-
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Array.reduce
  - name: >-
      reduceRight((previousValue: CloudTask, currentValue: CloudTask,
      currentIndex: number, array: CloudTask[]) => CloudTask)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduceRight'
    package: '@azure/batch'
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: CloudTask,
        currentValue: CloudTask, currentIndex: number, array: CloudTask[]) =>
        CloudTask): CloudTask
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: CloudTask, currentValue: CloudTask, currentIndex:
            number, array: CloudTask[]) =&gt; CloudTask
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: >-
      reduceRight((previousValue: CloudTask, currentValue: CloudTask,
      currentIndex: number, array: CloudTask[]) => CloudTask, CloudTask)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduceRight_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue: CloudTask,
        currentValue: CloudTask, currentIndex: number, array: CloudTask[]) =>
        CloudTask, initialValue: CloudTask): CloudTask
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: CloudTask, currentValue: CloudTask, currentIndex:
            number, array: CloudTask[]) =&gt; CloudTask
          description: ''
        - id: initialValue
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: >-
      reduceRight<U>((previousValue: U, currentValue: CloudTask, currentIndex:
      number, array: CloudTask[]) => U, U)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reduceRight_2'
    package: '@azure/batch'
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        CloudTask, currentIndex: number, array: CloudTask[]) => U, initialValue:
        U): U
      parameters:
        - id: callbackfn
          type: >-
            (previousValue: U, currentValue: CloudTask, currentIndex: number,
            array: CloudTask[]) =&gt; U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type: U
          description: >-
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        description: ''
        type: U
    inheritanceDescription: <b>Inherited From</b> Array.reduceRight
  - name: reverse()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.reverse'
    package: '@azure/batch'
    summary: |-
      Reverses the elements in an array in place.
      This method mutates the array and returns a reference to the same array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function reverse(): CloudTask[]'
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.reverse
  - name: shift()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.shift'
    package: '@azure/batch'
    summary: >-
      Removes the first element from an array and returns it.

      If the array is empty, undefined is returned and the array is not
      modified.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function shift(): undefined | CloudTask'
      return:
        description: ''
        type: undefined | <xref uid="@azure/batch.BatchServiceModels.CloudTask" />
    inheritanceDescription: <b>Inherited From</b> Array.shift
  - name: slice(number, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.slice'
    package: '@azure/batch'
    summary: >-
      Returns a copy of a section of an array.

      For both start and end, a negative index can be used to indicate an offset
      from the end of the array.

      For example, -2 refers to the second to last element of the array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function slice(start?: number, end?: number): CloudTask[]'
      parameters:
        - id: start
          type: number
          description: |-
            The beginning index of the specified portion of the array.
            If start is undefined, then the slice begins at index 0.
        - id: end
          type: number
          description: >-
            The end index of the specified portion of the array. This is
            exclusive of the element at the index 'end'.

            If end is undefined, then the slice extends to the end of the array.
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.slice
  - name: >-
      some((value: CloudTask, index: number, array: CloudTask[]) => unknown,
      any)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.some'
    package: '@azure/batch'
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function some(predicate: (value: CloudTask, index: number, array:
        CloudTask[]) => unknown, thisArg?: any): boolean
      parameters:
        - id: predicate
          type: '(value: CloudTask, index: number, array: CloudTask[]) =&gt; unknown'
          description: >-
            A function that accepts up to three arguments. The some method calls

            the predicate function for each element in the array until the
            predicate returns a value

            which is coercible to the Boolean value true, or until the end of
            the array.
        - id: thisArg
          type: any
          description: >-
            An object to which the this keyword can refer in the predicate
            function.

            If thisArg is omitted, undefined is used as the this value.
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> Array.some
  - name: 'sort((a: CloudTask, b: CloudTask) => number)'
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.sort'
    package: '@azure/batch'
    summary: |-
      Sorts an array in place.
      This method mutates the array and returns a reference to the same array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sort(compareFn?: (a: CloudTask, b: CloudTask) => number):
        CloudTaskListResult
      parameters:
        - id: compareFn
          type: '(a: CloudTask, b: CloudTask) =&gt; number'
          description: >-
            Function used to determine the order of the elements. It is expected
            to return

            a negative value if the first argument is less than the second
            argument, zero if they're equal, and a positive

            value otherwise. If omitted, the elements are sorted in ascending,
            ASCII character order.

            ```ts

            [11,2,22,1].sort((a, b) => a - b)

            ```
      return:
        description: ''
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTaskListResult" />
    inheritanceDescription: <b>Inherited From</b> Array.sort
  - name: splice(number, number)
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.splice'
    package: '@azure/batch'
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function splice(start: number, deleteCount?: number): CloudTask[]'
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: The number of elements to remove.
      return:
        description: An array containing the elements that were deleted.
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.splice
  - name: splice(number, number, CloudTask[])
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.splice_1'
    package: '@azure/batch'
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function splice(start: number, deleteCount: number, items: CloudTask[]):
        CloudTask[]
      parameters:
        - id: start
          type: number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type: number
          description: The number of elements to remove.
        - id: items
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
          description: Elements to insert into the array in place of the deleted elements.
      return:
        description: An array containing the elements that were deleted.
        type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
    inheritanceDescription: <b>Inherited From</b> Array.splice
  - name: toLocaleString()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.toLocaleString'
    package: '@azure/batch'
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocaleString methods.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toLocaleString(): string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.toLocaleString
  - name: toString()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.toString'
    package: '@azure/batch'
    summary: Returns a string representation of an array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toString(): string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Array.toString
  - name: unshift(CloudTask[])
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.unshift'
    package: '@azure/batch'
    summary: >-
      Inserts new elements at the start of an array, and returns the new length
      of the array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unshift(items: CloudTask[]): number'
      parameters:
        - id: items
          type: <xref uid="@azure/batch.BatchServiceModels.CloudTask" />[]
          description: Elements to insert at the start of the array.
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Array.unshift
  - name: values()
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.values'
    package: '@azure/batch'
    summary: Returns an iterable of values in the array
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function values(): IterableIterator<CloudTask>'
      return:
        description: ''
        type: >-
          IterableIterator&lt;<xref
          uid="@azure/batch.BatchServiceModels.CloudTask" />&gt;
    inheritanceDescription: <b>Inherited From</b> Array.values
  - name: '[iterator]()'
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.[iterator]'
    package: '@azure/batch'
    summary: Iterator
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function [iterator](): IterableIterator<CloudTask>'
      return:
        description: ''
        type: >-
          IterableIterator&lt;<xref
          uid="@azure/batch.BatchServiceModels.CloudTask" />&gt;
    inheritanceDescription: <b>Inherited From</b> Array.__@iterator@2850
  - name: '[unscopables]()'
    uid: '@azure/batch.BatchServiceModels.CloudTaskListResult.[unscopables]'
    package: '@azure/batch'
    summary: |-
      Returns an object whose properties have the value 'true'
      when they will be absent when used in a 'with' statement.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function [unscopables](): { copyWithin: boolean, entries: boolean, fill:
        boolean, find: boolean, findIndex: boolean, keys: boolean, values:
        boolean }
      return:
        description: ''
        type: >-
          { copyWithin: boolean, entries: boolean, fill: boolean, find: boolean,
          findIndex: boolean, keys: boolean, values: boolean }
    inheritanceDescription: <b>Inherited From</b> Array.__@unscopables@2852
extends: Array&lt;<xref uid="@azure/batch.BatchServiceModels.CloudTask" />&gt;
