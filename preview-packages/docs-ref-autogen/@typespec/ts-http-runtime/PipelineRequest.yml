### YamlMime:TSType
name: PipelineRequest
uid: '@typespec/ts-http-runtime.PipelineRequest'
package: '@typespec/ts-http-runtime'
summary: Metadata about a request being made by the pipeline.
fullName: PipelineRequest
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: abortSignal
    uid: '@typespec/ts-http-runtime.PipelineRequest.abortSignal'
    package: '@typespec/ts-http-runtime'
    summary: Used to abort the request later.
    fullName: abortSignal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignal'
      return:
        description: ''
        type: AbortSignal
  - name: agent
    uid: '@typespec/ts-http-runtime.PipelineRequest.agent'
    package: '@typespec/ts-http-runtime'
    summary: |-
      NODEJS ONLY

      A Node-only option to provide a custom `http.Agent`/`https.Agent`.
      Does nothing when running in the browser.
    fullName: agent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'agent?: Agent'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.Agent" />
  - name: allowInsecureConnection
    uid: '@typespec/ts-http-runtime.PipelineRequest.allowInsecureConnection'
    package: '@typespec/ts-http-runtime'
    summary: Set to true if the request is sent over HTTP instead of HTTPS
    fullName: allowInsecureConnection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'allowInsecureConnection?: boolean'
      return:
        description: ''
        type: boolean
  - name: authSchemes
    uid: '@typespec/ts-http-runtime.PipelineRequest.authSchemes'
    package: '@typespec/ts-http-runtime'
    summary: >-
      List of authentication schemes used for this specific request.

      These schemes define how the request will be authenticated.


      If values are provided, these schemes override the client level
      authentication schemes.

      If an empty array is provided, it explicitly specifies no authentication
      for the request.

      If not provided at the request level, the client level authentication
      schemes will be used.
    fullName: authSchemes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'authSchemes?: AuthScheme[]'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.AuthScheme" />[]
  - name: body
    uid: '@typespec/ts-http-runtime.PipelineRequest.body'
    package: '@typespec/ts-http-runtime'
    summary: The HTTP body content (if any)
    fullName: body
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'body?: RequestBodyType'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.RequestBodyType" />
  - name: disableKeepAlive
    uid: '@typespec/ts-http-runtime.PipelineRequest.disableKeepAlive'
    package: '@typespec/ts-http-runtime'
    summary: If the connection should not be reused.
    fullName: disableKeepAlive
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disableKeepAlive?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableBrowserStreams
    uid: '@typespec/ts-http-runtime.PipelineRequest.enableBrowserStreams'
    package: '@typespec/ts-http-runtime'
    summary: >-
      BROWSER ONLY


      A browser only option to enable browser Streams. If this option is set and
      a response is a stream

      the response will have a property `browserStream` instead of `blobBody`
      which will be undefined.


      Default value is false
    fullName: enableBrowserStreams
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableBrowserStreams?: boolean'
      return:
        description: ''
        type: boolean
  - name: formData
    uid: '@typespec/ts-http-runtime.PipelineRequest.formData'
    package: '@typespec/ts-http-runtime'
    summary: To simulate a browser form post
    fullName: formData
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'formData?: FormDataMap'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.FormDataMap" />
  - name: headers
    uid: '@typespec/ts-http-runtime.PipelineRequest.headers'
    package: '@typespec/ts-http-runtime'
    summary: The HTTP headers to use when making the request.
    fullName: headers
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'headers: HttpHeaders'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.HttpHeaders" />
  - name: method
    uid: '@typespec/ts-http-runtime.PipelineRequest.method'
    package: '@typespec/ts-http-runtime'
    summary: The HTTP method to use when making the request.
    fullName: method
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'method: HttpMethods'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.HttpMethods" />
  - name: multipartBody
    uid: '@typespec/ts-http-runtime.PipelineRequest.multipartBody'
    package: '@typespec/ts-http-runtime'
    summary: Body for a multipart request.
    fullName: multipartBody
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'multipartBody?: MultipartRequestBody'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.MultipartRequestBody" />
  - name: onDownloadProgress
    uid: '@typespec/ts-http-runtime.PipelineRequest.onDownloadProgress'
    package: '@typespec/ts-http-runtime'
    summary: Callback which fires upon download progress.
    fullName: onDownloadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
  - name: onUploadProgress
    uid: '@typespec/ts-http-runtime.PipelineRequest.onUploadProgress'
    package: '@typespec/ts-http-runtime'
    summary: Callback which fires upon upload progress.
    fullName: onUploadProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        description: ''
        type: '(progress: TransferProgressEvent) =&gt; void'
  - name: proxySettings
    uid: '@typespec/ts-http-runtime.PipelineRequest.proxySettings'
    package: '@typespec/ts-http-runtime'
    summary: Proxy configuration.
    fullName: proxySettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'proxySettings?: ProxySettings'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.ProxySettings" />
  - name: requestId
    uid: '@typespec/ts-http-runtime.PipelineRequest.requestId'
    package: '@typespec/ts-http-runtime'
    summary: A unique identifier for the request. Used for logging and tracing.
    fullName: requestId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'requestId: string'
      return:
        description: ''
        type: string
  - name: requestOverrides
    uid: '@typespec/ts-http-runtime.PipelineRequest.requestOverrides'
    package: '@typespec/ts-http-runtime'
    summary: >-
      Additional options to set on the request. This provides a way to override

      existing ones or provide request properties that are not declared.


      For possible valid properties, see
        - NodeJS https.request options:  https://nodejs.org/api/http.html#httprequestoptions-callback
        - Browser RequestInit: https://developer.mozilla.org/en-US/docs/Web/API/RequestInit

      WARNING: Options specified here will override any properties of same names
      when request is sent by
      [HttpClient](xref:@typespec/ts-http-runtime.HttpClient).
    fullName: requestOverrides
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'requestOverrides?: Record<string, unknown>'
      return:
        description: ''
        type: Record&lt;string, unknown&gt;
  - name: streamResponseStatusCodes
    uid: '@typespec/ts-http-runtime.PipelineRequest.streamResponseStatusCodes'
    package: '@typespec/ts-http-runtime'
    summary: >-
      A list of response status codes whose corresponding PipelineResponse body
      should be treated as a stream.

      When streamResponseStatusCodes contains the value Number.POSITIVE_INFINITY
      any status would be treated as a stream.
    fullName: streamResponseStatusCodes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'streamResponseStatusCodes?: Set<number>'
      return:
        description: ''
        type: Set&lt;number&gt;
  - name: timeout
    uid: '@typespec/ts-http-runtime.PipelineRequest.timeout'
    package: '@typespec/ts-http-runtime'
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.

      If the request is terminated, an `AbortError` is thrown.

      Defaults to 0, which disables the timeout.
    fullName: timeout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'timeout: number'
      return:
        description: ''
        type: number
  - name: tlsSettings
    uid: '@typespec/ts-http-runtime.PipelineRequest.tlsSettings'
    package: '@typespec/ts-http-runtime'
    summary: Settings for configuring TLS authentication
    fullName: tlsSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tlsSettings?: TlsSettings'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.TlsSettings" />
  - name: url
    uid: '@typespec/ts-http-runtime.PipelineRequest.url'
    package: '@typespec/ts-http-runtime'
    summary: The URL to make the request to.
    fullName: url
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        description: ''
        type: string
  - name: withCredentials
    uid: '@typespec/ts-http-runtime.PipelineRequest.withCredentials'
    package: '@typespec/ts-http-runtime'
    summary: >-
      Indicates whether the user agent should send cookies from the other domain
      in the case of cross-origin requests.

      Defaults to false.
    fullName: withCredentials
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'withCredentials: boolean'
      return:
        description: ''
        type: boolean
