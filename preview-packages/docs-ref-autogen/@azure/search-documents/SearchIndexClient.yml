### YamlMime:TSType
name: SearchIndexClient
uid: '@azure/search-documents.SearchIndexClient'
package: '@azure/search-documents'
summary: |-
  Class to perform operations to manage
  (create, update, list/delete)
  indexes, & synonymmaps.
fullName: SearchIndexClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      SearchIndexClient(string, KeyCredential | TokenCredential,
      SearchIndexClientOptions)
    uid: '@azure/search-documents.SearchIndexClient.constructor'
    package: '@azure/search-documents'
    summary: >-
      Creates an instance of SearchIndexClient.


      Example usage:

      ```ts snippet:ReadmeSampleSearchIndexClient

      import { SearchIndexClient, AzureKeyCredential } from
      "@azure/search-documents";


      const indexClient = new SearchIndexClient("<endpoint>", new
      AzureKeyCredential("<apiKey>"));

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new SearchIndexClient(endpoint: string, credential: KeyCredential |
        TokenCredential, options?: SearchIndexClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: The endpoint of the search service
        - id: credential
          type: >-
            <xref uid="@azure/core-auth.KeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: Used to authenticate requests to the service.
        - id: options
          type: <xref uid="@azure/search-documents.SearchIndexClientOptions" />
          description: Used to configure the Search Index client.
properties:
  - name: apiVersion
    uid: '@azure/search-documents.SearchIndexClient.apiVersion'
    package: '@azure/search-documents'
    summary: The API version to use when communicating with the service.
    fullName: apiVersion
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: use {@Link serviceVersion} instead
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/search-documents.SearchIndexClient.endpoint'
    package: '@azure/search-documents'
    summary: The endpoint of the search service
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: pipeline
    uid: '@azure/search-documents.SearchIndexClient.pipeline'
    package: '@azure/search-documents'
    summary: A reference to the internal HTTP pipeline for use with raw requests
    fullName: pipeline
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'pipeline: Pipeline'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.Pipeline" />
  - name: serviceVersion
    uid: '@azure/search-documents.SearchIndexClient.serviceVersion'
    package: '@azure/search-documents'
    summary: The API version to use when communicating with the service.
    fullName: serviceVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'serviceVersion: string'
      return:
        description: ''
        type: string
methods:
  - name: analyzeText(string, AnalyzeTextOptions)
    uid: '@azure/search-documents.SearchIndexClient.analyzeText'
    package: '@azure/search-documents'
    summary: Calls an analyzer or tokenizer manually on provided text.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function analyzeText(indexName: string, options: AnalyzeTextOptions):
        Promise<AnalyzeResult>
      parameters:
        - id: indexName
          type: string
          description: The name of the index that contains the field to analyze
        - id: options
          type: <xref uid="@azure/search-documents.AnalyzeTextOptions" />
          description: Additional arguments
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.AnalyzeResult" />&gt;
  - name: createAlias(SearchAlias, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.createAlias'
    package: '@azure/search-documents'
    summary: Creates a new search alias.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAlias(alias: SearchAlias, options?: OperationOptions):
        Promise<SearchAlias>
      parameters:
        - id: alias
          type: <xref uid="@azure/search-documents.SearchAlias" />
          description: The definition of the alias to create.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchAlias" />&gt;
  - name: createIndex(SearchIndex, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.createIndex'
    package: '@azure/search-documents'
    summary: Creates a new index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createIndex(index: SearchIndex, options?: OperationOptions):
        Promise<SearchIndex>
      parameters:
        - id: index
          type: <xref uid="@azure/search-documents.SearchIndex" />
          description: The information describing the index to be created.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchIndex" />&gt;
  - name: createKnowledgeAgent(KnowledgeAgent, CreateKnowledgeAgentOptions)
    uid: '@azure/search-documents.SearchIndexClient.createKnowledgeAgent'
    package: '@azure/search-documents'
    summary: Creates a new agent.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createKnowledgeAgent(knowledgeAgent: KnowledgeAgent, options?:
        CreateKnowledgeAgentOptions): Promise<KnowledgeAgent>
      parameters:
        - id: knowledgeAgent
          type: <xref uid="@azure/search-documents.KnowledgeAgent" />
          description: definition of the agent to create.
        - id: options
          type: <xref uid="@azure/search-documents.CreateKnowledgeAgentOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeAgent" />&gt;
  - name: createKnowledgeSource(KnowledgeSource, CreateKnowledgeSourceOptions)
    uid: '@azure/search-documents.SearchIndexClient.createKnowledgeSource'
    package: '@azure/search-documents'
    summary: Creates a new knowledge source.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createKnowledgeSource(knowledgeSource: KnowledgeSource,
        options?: CreateKnowledgeSourceOptions): Promise<KnowledgeSource>
      parameters:
        - id: knowledgeSource
          type: <xref uid="@azure/search-documents.KnowledgeSource" />
          description: The definition of the knowledge source to create.
        - id: options
          type: <xref uid="@azure/search-documents.CreateKnowledgeSourceOptions" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeSource" />&gt;
  - name: createOrUpdateAlias(SearchAlias, CreateOrUpdateAliasOptions)
    uid: '@azure/search-documents.SearchIndexClient.createOrUpdateAlias'
    package: '@azure/search-documents'
    summary: Creates a new search alias or updates an alias if it already exists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAlias(alias: SearchAlias, options?:
        CreateOrUpdateAliasOptions): Promise<SearchAlias>
      parameters:
        - id: alias
          type: <xref uid="@azure/search-documents.SearchAlias" />
          description: The definition of the alias to create or update.
        - id: options
          type: <xref uid="@azure/search-documents.CreateOrUpdateAliasOptions" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchAlias" />&gt;
  - name: createOrUpdateIndex(SearchIndex, CreateOrUpdateIndexOptions)
    uid: '@azure/search-documents.SearchIndexClient.createOrUpdateIndex'
    package: '@azure/search-documents'
    summary: Creates a new index or modifies an existing one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateIndex(index: SearchIndex, options?:
        CreateOrUpdateIndexOptions): Promise<SearchIndex>
      parameters:
        - id: index
          type: <xref uid="@azure/search-documents.SearchIndex" />
          description: The information describing the index to be created.
        - id: options
          type: <xref uid="@azure/search-documents.CreateOrUpdateIndexOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchIndex" />&gt;
  - name: >-
      createOrUpdateKnowledgeAgent(string, KnowledgeAgent,
      CreateOrUpdateKnowledgeAgentOptions)
    uid: '@azure/search-documents.SearchIndexClient.createOrUpdateKnowledgeAgent'
    package: '@azure/search-documents'
    summary: Creates a new agent or updates an agent if it already exists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateKnowledgeAgent(agentName: string, knowledgeAgent:
        KnowledgeAgent, options?: CreateOrUpdateKnowledgeAgentOptions):
        Promise<KnowledgeAgent>
      parameters:
        - id: agentName
          type: string
          description: name of the agent to create or update.
        - id: knowledgeAgent
          type: <xref uid="@azure/search-documents.KnowledgeAgent" />
          description: definition of the agent to create or update.
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.CreateOrUpdateKnowledgeAgentOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeAgent" />&gt;
  - name: >-
      createOrUpdateKnowledgeSource(string, KnowledgeSource,
      CreateOrUpdateKnowledgeSourceOptions)
    uid: '@azure/search-documents.SearchIndexClient.createOrUpdateKnowledgeSource'
    package: '@azure/search-documents'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateKnowledgeSource(sourceName: string,
        knowledgeSource: KnowledgeSource, options?:
        CreateOrUpdateKnowledgeSourceOptions): Promise<KnowledgeSource>
      parameters:
        - id: sourceName
          type: string
          description: ''
        - id: knowledgeSource
          type: <xref uid="@azure/search-documents.KnowledgeSource" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/search-documents.CreateOrUpdateKnowledgeSourceOptions"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeSource" />&gt;
  - name: createOrUpdateSynonymMap(SynonymMap, CreateOrUpdateSynonymMapOptions)
    uid: '@azure/search-documents.SearchIndexClient.createOrUpdateSynonymMap'
    package: '@azure/search-documents'
    summary: Creates a new SynonymMap or modifies an existing one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSynonymMap(synonymMap: SynonymMap, options?:
        CreateOrUpdateSynonymMapOptions): Promise<SynonymMap>
      parameters:
        - id: synonymMap
          type: <xref uid="@azure/search-documents.SynonymMap" />
          description: The information describing the SynonymMap to be created.
        - id: options
          type: >-
            <xref uid="@azure/search-documents.CreateOrUpdateSynonymMapOptions"
            />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SynonymMap" />&gt;
  - name: createSynonymMap(SynonymMap, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.createSynonymMap'
    package: '@azure/search-documents'
    summary: Creates a new SynonymMap in a search service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createSynonymMap(synonymMap: SynonymMap, options?:
        OperationOptions): Promise<SynonymMap>
      parameters:
        - id: synonymMap
          type: <xref uid="@azure/search-documents.SynonymMap" />
          description: The synonymMap definition to create in a search service.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SynonymMap" />&gt;
  - name: deleteAlias(SearchAlias, DeleteAliasOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteAlias_1'
    package: '@azure/search-documents'
    summary: >-
      Deletes a search alias and its associated mapping to an index. This
      operation is permanent,

      with no recovery option. The mapped index is untouched by this operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAlias(alias: SearchAlias, options?: DeleteAliasOptions):
        Promise<void>
      parameters:
        - id: alias
          type: <xref uid="@azure/search-documents.SearchAlias" />
          description: The alias to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteAliasOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteAlias(string, DeleteAliasOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteAlias'
    package: '@azure/search-documents'
    summary: >-
      Deletes a search alias and its associated mapping to an index. This
      operation is permanent,

      with no recovery option. The mapped index is untouched by this operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAlias(aliasName: string, options?: DeleteAliasOptions):
        Promise<void>
      parameters:
        - id: aliasName
          type: string
          description: Name of the alias to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteAliasOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteIndex(SearchIndex, DeleteIndexOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteIndex_1'
    package: '@azure/search-documents'
    summary: Deletes an existing index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteIndex(index: SearchIndex, options?: DeleteIndexOptions):
        Promise<void>
      parameters:
        - id: index
          type: <xref uid="@azure/search-documents.SearchIndex" />
          description: The index to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteIndexOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteIndex(string, DeleteIndexOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteIndex'
    package: '@azure/search-documents'
    summary: Deletes an existing index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteIndex(indexName: string, options?: DeleteIndexOptions):
        Promise<void>
      parameters:
        - id: indexName
          type: string
          description: Name of the index to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteIndexOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteKnowledgeAgent(KnowledgeAgent, DeleteKnowledgeAgentOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteKnowledgeAgent_1'
    package: '@azure/search-documents'
    summary: Deletes an existing agent.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteKnowledgeAgent(agent: KnowledgeAgent, options?:
        DeleteKnowledgeAgentOptions): Promise<void>
      parameters:
        - id: agent
          type: <xref uid="@azure/search-documents.KnowledgeAgent" />
          description: the agent to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteKnowledgeAgentOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteKnowledgeAgent(string, DeleteKnowledgeAgentOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteKnowledgeAgent'
    package: '@azure/search-documents'
    summary: Deletes an existing agent.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteKnowledgeAgent(agentName: string, options?:
        DeleteKnowledgeAgentOptions): Promise<void>
      parameters:
        - id: agentName
          type: string
          description: name of the agent to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteKnowledgeAgentOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteKnowledgeSource(KnowledgeSource, DeleteKnowledgeSourceOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteKnowledgeSource_1'
    package: '@azure/search-documents'
    summary: Deletes an existing source.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteKnowledgeSource(source: KnowledgeSource, options?:
        DeleteKnowledgeSourceOptions): Promise<void>
      parameters:
        - id: source
          type: <xref uid="@azure/search-documents.KnowledgeSource" />
          description: the knowledge source to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteKnowledgeSourceOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteKnowledgeSource(string, DeleteKnowledgeSourceOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteKnowledgeSource'
    package: '@azure/search-documents'
    summary: Deletes an existing source.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteKnowledgeSource(sourceName: string, options?:
        DeleteKnowledgeSourceOptions): Promise<void>
      parameters:
        - id: sourceName
          type: string
          description: name of the knowledge source to delete.
        - id: options
          type: <xref uid="@azure/search-documents.DeleteKnowledgeSourceOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: deleteSynonymMap(string | SynonymMap, DeleteSynonymMapOptions)
    uid: '@azure/search-documents.SearchIndexClient.deleteSynonymMap'
    package: '@azure/search-documents'
    summary: Deletes an existing SynonymMap.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteSynonymMap(synonymMap: string | SynonymMap, options?:
        DeleteSynonymMapOptions): Promise<void>
      parameters:
        - id: synonymMap
          type: string | <xref uid="@azure/search-documents.SynonymMap" />
          description: ''
        - id: options
          type: <xref uid="@azure/search-documents.DeleteSynonymMapOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: getAlias(string, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.getAlias'
    package: '@azure/search-documents'
    summary: Retrieves an alias definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAlias(aliasName: string, options?: OperationOptions):
        Promise<SearchAlias>
      parameters:
        - id: aliasName
          type: string
          description: The name of the alias to retrieve.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchAlias" />&gt;
  - name: getIndex(string, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.getIndex'
    package: '@azure/search-documents'
    summary: Retrieves information about an index.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getIndex(indexName: string, options?: OperationOptions):
        Promise<SearchIndex>
      parameters:
        - id: indexName
          type: string
          description: The name of the index.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SearchIndex" />&gt;
  - name: getIndexStatistics(string, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.getIndexStatistics'
    package: '@azure/search-documents'
    summary: >-
      Retrieves statistics about an index, such as the count of documents and
      the size

      of index storage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getIndexStatistics(indexName: string, options?:
        OperationOptions): Promise<SearchIndexStatistics>
      parameters:
        - id: indexName
          type: string
          description: The name of the index.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.SearchIndexStatistics"
          />&gt;
  - name: getIndexStatsSummary(GetIndexStatsSummaryOptions)
    uid: '@azure/search-documents.SearchIndexClient.getIndexStatsSummary'
    package: '@azure/search-documents'
    summary: Retrieves a list of existing indexes in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getIndexStatsSummary(options?: GetIndexStatsSummaryOptions):
        IndexStatisticsSummaryIterator
      parameters:
        - id: options
          type: <xref uid="@azure/search-documents.GetIndexStatsSummaryOptions" />
          description: Options to the list index operation.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.IndexStatisticsSummaryIterator" />
  - name: getKnowledgeAgent(string, GetKnowledgeAgentOptions)
    uid: '@azure/search-documents.SearchIndexClient.getKnowledgeAgent'
    package: '@azure/search-documents'
    summary: Retrieves an agent definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getKnowledgeAgent(agentName: string, options?:
        GetKnowledgeAgentOptions): Promise<KnowledgeAgent>
      parameters:
        - id: agentName
          type: string
          description: name of the agent to retrieve.
        - id: options
          type: <xref uid="@azure/search-documents.GetKnowledgeAgentOptions" />
          description: options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeAgent" />&gt;
  - name: getKnowledgeRetrievalClient(string, KnowledgeRetrievalClientOptions)
    uid: '@azure/search-documents.SearchIndexClient.getKnowledgeRetrievalClient'
    package: '@azure/search-documents'
    summary: >-
      Retrieves the KnowledgeRetrievalClient corresponding to this
      SearchIndexClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getKnowledgeRetrievalClient(agentName: string, options?:
        KnowledgeRetrievalClientOptions): KnowledgeRetrievalClient
      parameters:
        - id: agentName
          type: string
          description: Name of the agent
        - id: options
          type: >-
            <xref uid="@azure/search-documents.KnowledgeRetrievalClientOptions"
            />
          description: KnowledgeRetrievalClient Options
      return:
        description: ''
        type: <xref uid="@azure/search-documents.KnowledgeRetrievalClient" />
  - name: getKnowledgeSource(string, GetKnowledgeSourceOptions)
    uid: '@azure/search-documents.SearchIndexClient.getKnowledgeSource'
    package: '@azure/search-documents'
    summary: Retrieves a knowledge source definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getKnowledgeSource(sourceName: string, options?:
        GetKnowledgeSourceOptions): Promise<KnowledgeSource>
      parameters:
        - id: sourceName
          type: string
          description: The name of the knowledge source to retrieve.
        - id: options
          type: <xref uid="@azure/search-documents.GetKnowledgeSourceOptions" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.KnowledgeSource" />&gt;
  - name: getSearchClient<TModel>(string, SearchClientOptions)
    uid: '@azure/search-documents.SearchIndexClient.getSearchClient'
    package: '@azure/search-documents'
    summary: Retrieves the SearchClient corresponding to this SearchIndexClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSearchClient<TModel>(indexName: string, options?:
        SearchClientOptions): SearchClient<TModel>
      parameters:
        - id: indexName
          type: string
          description: Name of the index
        - id: options
          type: <xref uid="@azure/search-documents.SearchClientOptions" />
          description: SearchClient Options
      return:
        description: ''
        type: <xref uid="@azure/search-documents.SearchClient" />&lt;TModel&gt;
  - name: getServiceStatistics(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.getServiceStatistics'
    package: '@azure/search-documents'
    summary: >-
      Retrieves statistics about the service, such as the count of documents,
      index, etc.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getServiceStatistics(options?: OperationOptions):
        Promise<SearchServiceStatistics>
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/search-documents.SearchServiceStatistics"
          />&gt;
  - name: getSynonymMap(string, OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.getSynonymMap'
    package: '@azure/search-documents'
    summary: Retrieves information about a SynonymMap.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSynonymMap(synonymMapName: string, options?:
        OperationOptions): Promise<SynonymMap>
      parameters:
        - id: synonymMapName
          type: string
          description: The name of the SynonymMap.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional optional arguments.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SynonymMap" />&gt;
  - name: listAliases(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.listAliases'
    package: '@azure/search-documents'
    summary: Lists all aliases available for a search service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function listAliases(options?: OperationOptions): AliasIterator'
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: The options parameters.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.AliasIterator" />
  - name: listIndexes(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.listIndexes'
    package: '@azure/search-documents'
    summary: Retrieves a list of existing indexes in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function listIndexes(options?: OperationOptions): IndexIterator'
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Options to the list index operation.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.IndexIterator" />
  - name: listIndexesNames(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.listIndexesNames'
    package: '@azure/search-documents'
    summary: Retrieves a list of names of existing indexes in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function listIndexesNames(options?: OperationOptions): IndexNameIterator'
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Options to the list index operation.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.IndexNameIterator" />
  - name: listKnowledgeAgents(ListKnowledgeAgentsOptions)
    uid: '@azure/search-documents.SearchIndexClient.listKnowledgeAgents'
    package: '@azure/search-documents'
    summary: Retrieves a list of existing KnowledgeAgents in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKnowledgeAgents(options?: ListKnowledgeAgentsOptions):
        KnowledgeAgentIterator
      parameters:
        - id: options
          type: <xref uid="@azure/search-documents.ListKnowledgeAgentsOptions" />
          description: Options to the list knowledge agents operation.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.KnowledgeAgentIterator" />
  - name: listKnowledgeSources(ListKnowledgeSourcesOptions)
    uid: '@azure/search-documents.SearchIndexClient.listKnowledgeSources'
    package: '@azure/search-documents'
    summary: Retrieves a list of existing KnowledgeSources in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKnowledgeSources(options?: ListKnowledgeSourcesOptions):
        KnowledgeSourceIterator
      parameters:
        - id: options
          type: <xref uid="@azure/search-documents.ListKnowledgeSourcesOptions" />
          description: Options to the list knowledge sources operation.
      return:
        description: ''
        type: <xref uid="@azure/search-documents.KnowledgeSourceIterator" />
  - name: listSynonymMaps(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.listSynonymMaps'
    package: '@azure/search-documents'
    summary: Retrieves a list of existing SynonymMaps in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSynonymMaps(options?: OperationOptions):
        Promise<SynonymMap[]>
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Options to the list SynonymMaps operation.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/search-documents.SynonymMap" />[]&gt;
  - name: listSynonymMapsNames(OperationOptions)
    uid: '@azure/search-documents.SearchIndexClient.listSynonymMapsNames'
    package: '@azure/search-documents'
    summary: Retrieves a list of names of existing SynonymMaps in the service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSynonymMapsNames(options?: OperationOptions):
        Promise<string[]>
      parameters:
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Options to the list SynonymMaps operation.
      return:
        description: ''
        type: Promise&lt;string[]&gt;
