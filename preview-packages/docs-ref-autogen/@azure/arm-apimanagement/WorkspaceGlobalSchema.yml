### YamlMime:TSType
name: WorkspaceGlobalSchema
uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema'
package: '@azure/arm-apimanagement'
summary: Interface representing a WorkspaceGlobalSchema.
fullName: WorkspaceGlobalSchema
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string, GlobalSchemaContract,
      WorkspaceGlobalSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.beginCreateOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates new or updates existing specified Schema of the workspace in an
      API Management service

      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, workspaceId: string, schemaId: string, parameters:
        GlobalSchemaContract, options?:
        WorkspaceGlobalSchemaCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<WorkspaceGlobalSchemaCreateOrUpdateResponse>,
        WorkspaceGlobalSchemaCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GlobalSchemaContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaCreateOrUpdateResponse"
          />&gt;, <xref
          uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string,
      GlobalSchemaContract, WorkspaceGlobalSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.beginCreateOrUpdateAndWait'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates new or updates existing specified Schema of the workspace in an
      API Management service

      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serviceName: string, workspaceId: string, schemaId: string, parameters:
        GlobalSchemaContract, options?:
        WorkspaceGlobalSchemaCreateOrUpdateOptionalParams):
        Promise<WorkspaceGlobalSchemaCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GlobalSchemaContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaCreateOrUpdateResponse"
          />&gt;
  - name: >-
      delete(string, string, string, string, string,
      WorkspaceGlobalSchemaDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific Schema.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        workspaceId: string, schemaId: string, ifMatch: string, options?:
        WorkspaceGlobalSchemaDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      get(string, string, string, string,
      WorkspaceGlobalSchemaGetOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the Schema specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string,
        workspaceId: string, schemaId: string, options?:
        WorkspaceGlobalSchemaGetOptionalParams):
        Promise<WorkspaceGlobalSchemaGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string, string,
      WorkspaceGlobalSchemaGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Schema specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        workspaceId: string, schemaId: string, options?:
        WorkspaceGlobalSchemaGetEntityTagOptionalParams):
        Promise<WorkspaceGlobalSchemaGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaGetEntityTagHeaders"
          />&gt;
  - name: >-
      listByService(string, string, string,
      WorkspaceGlobalSchemaListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.WorkspaceGlobalSchema.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of schemas registered with workspace in a service
      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        workspaceId: string, options?:
        WorkspaceGlobalSchemaListByServiceOptionalParams):
        PagedAsyncIterableIterator<GlobalSchemaContract, GlobalSchemaContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: workspaceId
          type: string
          description: >-
            Workspace identifier. Must be unique in the current API Management
            service
                               instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.WorkspaceGlobalSchemaListByServiceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaContract" />, <xref
          uid="@azure/arm-apimanagement.GlobalSchemaContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
