### YamlMime:TSType
name: TagRules
uid: '@azure/arm-newrelicobservability.TagRules'
package: '@azure/arm-newrelicobservability'
summary: Interface representing a TagRules.
fullName: TagRules
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, TagRule,
      TagRulesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.beginCreateOrUpdate'
    package: '@azure/arm-newrelicobservability'
    summary: Create a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, monitorName:
        string, ruleSetName: string, resource: TagRule, options?:
        TagRulesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<TagRule>, TagRule>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: resource
          type: <xref uid="@azure/arm-newrelicobservability.TagRule" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-newrelicobservability.TagRule" />&gt;, <xref
          uid="@azure/arm-newrelicobservability.TagRule" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, TagRule,
      TagRulesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.beginCreateOrUpdateAndWait'
    package: '@azure/arm-newrelicobservability'
    summary: Create a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        monitorName: string, ruleSetName: string, resource: TagRule, options?:
        TagRulesCreateOrUpdateOptionalParams): Promise<TagRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: resource
          type: <xref uid="@azure/arm-newrelicobservability.TagRule" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-newrelicobservability.TagRule" />&gt;
  - name: beginDelete(string, string, string, TagRulesDeleteOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.beginDelete'
    package: '@azure/arm-newrelicobservability'
    summary: Delete a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, monitorName: string,
        ruleSetName: string, options?: TagRulesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, TagRulesDeleteOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.beginDeleteAndWait'
    package: '@azure/arm-newrelicobservability'
    summary: Delete a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, monitorName:
        string, ruleSetName: string, options?: TagRulesDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, TagRulesGetOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.get'
    package: '@azure/arm-newrelicobservability'
    summary: Get a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, monitorName: string,
        ruleSetName: string, options?: TagRulesGetOptionalParams):
        Promise<TagRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-newrelicobservability.TagRule" />&gt;
  - name: >-
      listByNewRelicMonitorResource(string, string,
      TagRulesListByNewRelicMonitorResourceOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.listByNewRelicMonitorResource'
    package: '@azure/arm-newrelicobservability'
    summary: List TagRule resources by NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByNewRelicMonitorResource(resourceGroupName: string,
        monitorName: string, options?:
        TagRulesListByNewRelicMonitorResourceOptionalParams):
        PagedAsyncIterableIterator<TagRule, TagRule[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesListByNewRelicMonitorResourceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.TagRule" />, <xref
          uid="@azure/arm-newrelicobservability.TagRule" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, TagRuleUpdate,
      TagRulesUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.TagRules.update'
    package: '@azure/arm-newrelicobservability'
    summary: Update a TagRule
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, monitorName: string,
        ruleSetName: string, properties: TagRuleUpdate, options?:
        TagRulesUpdateOptionalParams): Promise<TagRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: ruleSetName
          type: string
          description: Name of the TagRule
        - id: properties
          type: <xref uid="@azure/arm-newrelicobservability.TagRuleUpdate" />
          description: The resource properties to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.TagRulesUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-newrelicobservability.TagRule" />&gt;
