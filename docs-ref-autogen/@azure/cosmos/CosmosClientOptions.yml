### YamlMime:TSType
name: CosmosClientOptions
uid: '@azure/cosmos.CosmosClientOptions'
package: '@azure/cosmos'
summary: ''
fullName: CosmosClientOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: aadCredentials
    uid: '@azure/cosmos.CosmosClientOptions.aadCredentials'
    package: '@azure/cosmos'
    summary: >-
      AAD token from `@azure/identity`

      Obtain a credential object by creating an `@azure/identity` credential
      object

      We will then use your credential object and a scope URL (your cosmos db
      endpoint)

      to authenticate requests to Cosmos
    fullName: aadCredentials
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aadCredentials?: TokenCredential'
      return:
        description: ''
        type: <xref uid="@azure/core-auth.TokenCredential" />
  - name: agent
    uid: '@azure/cosmos.CosmosClientOptions.agent'
    package: '@azure/cosmos'
    summary: >-
      An optional custom http(s) Agent to be used in NodeJS environments

      Use an agent such as https://github.com/TooTallNate/node-proxy-agent if
      you need to connect to Cosmos via a proxy
    fullName: agent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'agent?: Agent'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.Agent" />
  - name: clientEncryptionOptions
    uid: '@azure/cosmos.CosmosClientOptions.clientEncryptionOptions'
    package: '@azure/cosmos'
    summary: |-
      encryption policy for operations involving encryption
      must be set on the client if using client-side encryption

      See [ClientEncryptionOptions](xref:@azure/cosmos.ClientEncryptionOptions)
    fullName: clientEncryptionOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'clientEncryptionOptions?: ClientEncryptionOptions'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.ClientEncryptionOptions" />
  - name: connectionPolicy
    uid: '@azure/cosmos.CosmosClientOptions.connectionPolicy'
    package: '@azure/cosmos'
    summary: >-
      An instance of [ConnectionPolicy](xref:@azure/cosmos.ConnectionPolicy)
      class.

      This parameter is optional and the default connectionPolicy will be used
      if omitted.
    fullName: connectionPolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connectionPolicy?: ConnectionPolicy'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.ConnectionPolicy" />
  - name: connectionString
    uid: '@azure/cosmos.CosmosClientOptions.connectionString'
    package: '@azure/cosmos'
    summary: >-
      An optional parameter that represents the connection string. Your database
      connection string can be found in the Azure Portal.
    fullName: connectionString
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connectionString?: string'
      return:
        description: ''
        type: string
  - name: consistencyLevel
    uid: '@azure/cosmos.CosmosClientOptions.consistencyLevel'
    package: '@azure/cosmos'
    summary: >-
      An optional parameter that represents the consistency level.

      It can take any value from
      [ConsistencyLevel](xref:@azure/cosmos.ConsistencyLevel).
    fullName: consistencyLevel
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        consistencyLevel?: "Strong" | "BoundedStaleness" | "Session" |
        "Eventual" | "ConsistentPrefix"
      return:
        description: ''
        type: >-
          "Strong" | "BoundedStaleness" | "Session" | "Eventual" |
          "ConsistentPrefix"
  - name: defaultHeaders
    uid: '@azure/cosmos.CosmosClientOptions.defaultHeaders'
    package: '@azure/cosmos'
    summary: ''
    fullName: defaultHeaders
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'defaultHeaders?: CosmosHeaders_2'
      return:
        description: ''
        type: CosmosHeaders_2
  - name: diagnosticLevel
    uid: '@azure/cosmos.CosmosClientOptions.diagnosticLevel'
    package: '@azure/cosmos'
    summary: ''
    fullName: diagnosticLevel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'diagnosticLevel?: CosmosDbDiagnosticLevel'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosDbDiagnosticLevel" />
  - name: endpoint
    uid: '@azure/cosmos.CosmosClientOptions.endpoint'
    package: '@azure/cosmos'
    summary: The service endpoint to use to create the client.
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint?: string'
      return:
        description: ''
        type: string
  - name: httpClient
    uid: '@azure/cosmos.CosmosClientOptions.httpClient'
    package: '@azure/cosmos'
    summary: >-
      An optional custom `HttpClient` shape to customize how requests are made
      by the HTTP pipeline.

      See `@azure/core-rest-pipeline` for details on how to implement this
      interface.
    fullName: httpClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.HttpClient" />
  - name: key
    uid: '@azure/cosmos.CosmosClientOptions.key'
    package: '@azure/cosmos'
    summary: The account master or readonly key
    fullName: key
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'key?: string'
      return:
        description: ''
        type: string
  - name: permissionFeed
    uid: '@azure/cosmos.CosmosClientOptions.permissionFeed'
    package: '@azure/cosmos'
    summary: An array of [Permission](xref:@azure/cosmos.Permission) objects.
    fullName: permissionFeed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'permissionFeed?: PermissionDefinition[]'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.PermissionDefinition" />[]
  - name: resourceTokens
    uid: '@azure/cosmos.CosmosClientOptions.resourceTokens'
    package: '@azure/cosmos'
    summary: |-
      An object that contains resources tokens.
      Keys for the object are resource Ids and values are the resource tokens.
    fullName: resourceTokens
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceTokens?: {[resourcePath: string]: string}'
      return:
        description: ''
        type: '{[resourcePath: string]: string}'
  - name: throughputBucket
    uid: '@azure/cosmos.CosmosClientOptions.throughputBucket'
    package: '@azure/cosmos'
    summary: >-
      An optional parameter to set throughput bucket number. This value can be
      overridden at request level

      For more information, visit [Cosmos DB throughput
      Bucketing](https://aka.ms/cosmsodb-bucketing).
    fullName: throughputBucket
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'throughputBucket?: number'
      return:
        description: ''
        type: number
  - name: tokenProvider
    uid: '@azure/cosmos.CosmosClientOptions.tokenProvider'
    package: '@azure/cosmos'
    summary: >-
      A user supplied function for resolving header authorization tokens.

      Allows users to generating their own auth tokens, potentially using a
      separate service
    fullName: tokenProvider
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tokenProvider?: TokenProvider'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.TokenProvider" />
  - name: userAgentSuffix
    uid: '@azure/cosmos.CosmosClientOptions.userAgentSuffix'
    package: '@azure/cosmos'
    summary: A custom string to append to the default SDK user agent.
    fullName: userAgentSuffix
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userAgentSuffix?: string'
      return:
        description: ''
        type: string
