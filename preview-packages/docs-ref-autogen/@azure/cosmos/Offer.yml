### YamlMime:TSType
name: Offer
uid: '@azure/cosmos.Offer'
package: '@azure/cosmos'
summary: |-
  Use to read or replace an existing [Offer](xref:@azure/cosmos.Offer) by id.

  See [Offers](xref:@azure/cosmos.Offers) to query or read all offers.
fullName: Offer
remarks: ''
isDeprecated: false
type: class
properties:
  - name: client
    uid: '@azure/cosmos.Offer.client'
    package: '@azure/cosmos'
    summary: ''
    fullName: client
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'client: CosmosClient'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosClient" />
  - name: id
    uid: '@azure/cosmos.Offer.id'
    package: '@azure/cosmos'
    summary: ''
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: url
    uid: '@azure/cosmos.Offer.url'
    package: '@azure/cosmos'
    summary: Returns a reference URL to the resource. Used for linking in Permissions.
    fullName: url
    remarks: ''
    isDeprecated: false
    syntax:
      content: string url
      return:
        description: ''
        type: string
methods:
  - name: read(RequestOptions)
    uid: '@azure/cosmos.Offer.read'
    package: '@azure/cosmos'
    summary: >+
      Read the [OfferDefinition](xref:@azure/cosmos.OfferDefinition) for the
      given [Offer](xref:@azure/cosmos.Offer).


      **Example**


      ```ts snippet:OfferRead

      import { CosmosClient } from "@azure/cosmos";


      const endpoint = "https://your-account.documents.azure.com";

      const key = "<database account masterkey>";

      const client = new CosmosClient({ endpoint, key });


      const { resource: offer } = await client.offer("<offer-id>").read();

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function read(options?: RequestOptions): Promise<OfferResponse>'
      parameters:
        - id: options
          type: <xref uid="@azure/cosmos.RequestOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/cosmos.OfferResponse" />&gt;
  - name: replace(OfferDefinition, RequestOptions)
    uid: '@azure/cosmos.Offer.replace'
    package: '@azure/cosmos'
    summary: >+
      Replace the given [Offer](xref:@azure/cosmos.Offer) with the specified
      [OfferDefinition](xref:@azure/cosmos.OfferDefinition).


      **Example**


      replace offer with a new offer definition with updated throughput

      ```ts snippet:OfferReplace

      import { CosmosClient } from "@azure/cosmos";


      const endpoint = "https://your-account.documents.azure.com";

      const key = "<database account masterkey>";

      const client = new CosmosClient({ endpoint, key });

      const { resource: offer } = await client.offer("<offer-id>").read();

      // @ts-preservewhitespace

      offer.content.offerThroughput = 1000;

      await client.offer("<offer-id>").replace(offer);

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function replace(body: OfferDefinition, options?: RequestOptions):
        Promise<OfferResponse>
      parameters:
        - id: body
          type: <xref uid="@azure/cosmos.OfferDefinition" />
          description: The specified [OfferDefinition](xref:@azure/cosmos.OfferDefinition)
        - id: options
          type: <xref uid="@azure/cosmos.RequestOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/cosmos.OfferResponse" />&gt;
