### YamlMime:TSType
name: LoadBalancers
uid: '@azure/arm-network.LoadBalancers'
package: '@azure/arm-network'
summary: Interface representing a LoadBalancers.
fullName: LoadBalancers
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, LoadBalancer,
      LoadBalancersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginCreateOrUpdate'
    package: '@azure/arm-network'
    summary: Creates or updates a load balancer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        loadBalancerName: string, parameters: LoadBalancer, options?:
        LoadBalancersCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<LoadBalancer>, LoadBalancer>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: parameters
          type: <xref uid="@azure/arm-network.LoadBalancer" />
          description: Parameters supplied to the create or update load balancer operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-network.LoadBalancer" />&gt;, <xref
          uid="@azure/arm-network.LoadBalancer" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, LoadBalancer,
      LoadBalancersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginCreateOrUpdateAndWait'
    package: '@azure/arm-network'
    summary: Creates or updates a load balancer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        loadBalancerName: string, parameters: LoadBalancer, options?:
        LoadBalancersCreateOrUpdateOptionalParams): Promise<LoadBalancer>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: parameters
          type: <xref uid="@azure/arm-network.LoadBalancer" />
          description: Parameters supplied to the create or update load balancer operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-network.LoadBalancer" />&gt;
  - name: beginDelete(string, string, LoadBalancersDeleteOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginDelete'
    package: '@azure/arm-network'
    summary: Deletes the specified load balancer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, loadBalancerName:
        string, options?: LoadBalancersDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: options
          type: <xref uid="@azure/arm-network.LoadBalancersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, LoadBalancersDeleteOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginDeleteAndWait'
    package: '@azure/arm-network'
    summary: Deletes the specified load balancer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, loadBalancerName:
        string, options?: LoadBalancersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: options
          type: <xref uid="@azure/arm-network.LoadBalancersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginListInboundNatRulePortMappings(string, string, string,
      QueryInboundNatRulePortMappingRequest,
      LoadBalancersListInboundNatRulePortMappingsOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginListInboundNatRulePortMappings'
    package: '@azure/arm-network'
    summary: List of inbound NAT rule port mappings.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginListInboundNatRulePortMappings(groupName: string,
        loadBalancerName: string, backendPoolName: string, parameters:
        QueryInboundNatRulePortMappingRequest, options?:
        LoadBalancersListInboundNatRulePortMappingsOptionalParams):
        Promise<SimplePollerLike<OperationState<BackendAddressInboundNatRulePortMappings>,
        BackendAddressInboundNatRulePortMappings>>
      parameters:
        - id: groupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: backendPoolName
          type: string
          description: The name of the load balancer backend address pool.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.QueryInboundNatRulePortMappingRequest"
            />
          description: Query inbound NAT rule port mapping request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersListInboundNatRulePortMappingsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-network.BackendAddressInboundNatRulePortMappings"
          />&gt;, <xref
          uid="@azure/arm-network.BackendAddressInboundNatRulePortMappings"
          />&gt;&gt;
  - name: >-
      beginListInboundNatRulePortMappingsAndWait(string, string, string,
      QueryInboundNatRulePortMappingRequest,
      LoadBalancersListInboundNatRulePortMappingsOptionalParams)
    uid: >-
      @azure/arm-network.LoadBalancers.beginListInboundNatRulePortMappingsAndWait
    package: '@azure/arm-network'
    summary: List of inbound NAT rule port mappings.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginListInboundNatRulePortMappingsAndWait(groupName: string,
        loadBalancerName: string, backendPoolName: string, parameters:
        QueryInboundNatRulePortMappingRequest, options?:
        LoadBalancersListInboundNatRulePortMappingsOptionalParams):
        Promise<BackendAddressInboundNatRulePortMappings>
      parameters:
        - id: groupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: backendPoolName
          type: string
          description: The name of the load balancer backend address pool.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-network.QueryInboundNatRulePortMappingRequest"
            />
          description: Query inbound NAT rule port mapping request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersListInboundNatRulePortMappingsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-network.BackendAddressInboundNatRulePortMappings"
          />&gt;
  - name: >-
      beginSwapPublicIpAddresses(string, LoadBalancerVipSwapRequest,
      LoadBalancersSwapPublicIpAddressesOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginSwapPublicIpAddresses'
    package: '@azure/arm-network'
    summary: Swaps VIPs between two load balancers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSwapPublicIpAddresses(location: string, parameters:
        LoadBalancerVipSwapRequest, options?:
        LoadBalancersSwapPublicIpAddressesOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: location
          type: string
          description: The region where load balancers are located at.
        - id: parameters
          type: <xref uid="@azure/arm-network.LoadBalancerVipSwapRequest" />
          description: Parameters that define which VIPs should be swapped.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersSwapPublicIpAddressesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginSwapPublicIpAddressesAndWait(string, LoadBalancerVipSwapRequest,
      LoadBalancersSwapPublicIpAddressesOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.beginSwapPublicIpAddressesAndWait'
    package: '@azure/arm-network'
    summary: Swaps VIPs between two load balancers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSwapPublicIpAddressesAndWait(location: string, parameters:
        LoadBalancerVipSwapRequest, options?:
        LoadBalancersSwapPublicIpAddressesOptionalParams): Promise<void>
      parameters:
        - id: location
          type: string
          description: The region where load balancers are located at.
        - id: parameters
          type: <xref uid="@azure/arm-network.LoadBalancerVipSwapRequest" />
          description: Parameters that define which VIPs should be swapped.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersSwapPublicIpAddressesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, LoadBalancersGetOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.get'
    package: '@azure/arm-network'
    summary: Gets the specified load balancer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, loadBalancerName: string,
        options?: LoadBalancersGetOptionalParams): Promise<LoadBalancer>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: options
          type: <xref uid="@azure/arm-network.LoadBalancersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-network.LoadBalancer" />&gt;
  - name: list(string, LoadBalancersListOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.list'
    package: '@azure/arm-network'
    summary: Gets all the load balancers in a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        LoadBalancersListOptionalParams):
        PagedAsyncIterableIterator<LoadBalancer, LoadBalancer[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: <xref uid="@azure/arm-network.LoadBalancersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-network.LoadBalancer" />, <xref
          uid="@azure/arm-network.LoadBalancer" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAll(LoadBalancersListAllOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.listAll'
    package: '@azure/arm-network'
    summary: Gets all the load balancers in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options?: LoadBalancersListAllOptionalParams):
        PagedAsyncIterableIterator<LoadBalancer, LoadBalancer[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-network.LoadBalancersListAllOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-network.LoadBalancer" />, <xref
          uid="@azure/arm-network.LoadBalancer" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      migrateToIpBased(string, string,
      LoadBalancersMigrateToIpBasedOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.migrateToIpBased'
    package: '@azure/arm-network'
    summary: Migrate load balancer to IP Based
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function migrateToIpBased(groupName: string, loadBalancerName: string,
        options?: LoadBalancersMigrateToIpBasedOptionalParams):
        Promise<MigratedPools>
      parameters:
        - id: groupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-network.LoadBalancersMigrateToIpBasedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-network.MigratedPools" />&gt;
  - name: >-
      updateTags(string, string, TagsObject,
      LoadBalancersUpdateTagsOptionalParams)
    uid: '@azure/arm-network.LoadBalancers.updateTags'
    package: '@azure/arm-network'
    summary: Updates a load balancer tags.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, loadBalancerName: string,
        parameters: TagsObject, options?:
        LoadBalancersUpdateTagsOptionalParams): Promise<LoadBalancer>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: loadBalancerName
          type: string
          description: The name of the load balancer.
        - id: parameters
          type: <xref uid="@azure/arm-network.TagsObject" />
          description: Parameters supplied to update load balancer tags.
        - id: options
          type: >-
            <xref uid="@azure/arm-network.LoadBalancersUpdateTagsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-network.LoadBalancer" />&gt;
