### YamlMime:TSType
name: BatchJob
uid: '@azure-rest/batch.BatchJob'
package: '@azure-rest/batch'
summary: An Azure Batch Job.
fullName: BatchJob
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: allowTaskPreemption
    uid: '@azure-rest/batch.BatchJob.allowTaskPreemption'
    package: '@azure-rest/batch'
    summary: >-
      Whether Tasks in this job can be preempted by other high priority jobs. If
      the value is set to True, other high priority jobs submitted to the system
      will take precedence and will be able requeue tasks from this job. You can
      update a job's allowTaskPreemption after it has been created using the
      update job API.
    fullName: allowTaskPreemption
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'allowTaskPreemption?: boolean'
      return:
        description: ''
        type: boolean
  - name: constraints
    uid: '@azure-rest/batch.BatchJob.constraints'
    package: '@azure-rest/batch'
    summary: The execution constraints for the Job.
    fullName: constraints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constraints?: BatchJobConstraints'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobConstraints" />
  - name: maxParallelTasks
    uid: '@azure-rest/batch.BatchJob.maxParallelTasks'
    package: '@azure-rest/batch'
    summary: >-
      The maximum number of tasks that can be executed in parallel for the job.
      The value of maxParallelTasks must be -1 or greater than 0 if specified.
      If not specified, the default value is -1, which means there's no limit to
      the number of tasks that can be run at once. You can update a job's
      maxParallelTasks after it has been created using the update job API.
    fullName: maxParallelTasks
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxParallelTasks?: number'
      return:
        description: ''
        type: number
  - name: metadata
    uid: '@azure-rest/batch.BatchJob.metadata'
    package: '@azure-rest/batch'
    summary: >-
      A list of name-value pairs associated with the Job as metadata. The Batch
      service does not assign any meaning to metadata; it is solely for the use
      of user code.
    fullName: metadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'metadata?: BatchMetadataItem[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchMetadataItem" />[]
  - name: onAllTasksComplete
    uid: '@azure-rest/batch.BatchJob.onAllTasksComplete'
    package: '@azure-rest/batch'
    summary: >-
      The action the Batch service should take when all Tasks in the Job are in
      the completed state. The default is noaction.


      Possible values: "noaction", "terminatejob"
    fullName: onAllTasksComplete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        description: ''
        type: string
  - name: poolInfo
    uid: '@azure-rest/batch.BatchJob.poolInfo'
    package: '@azure-rest/batch'
    summary: The Pool settings associated with the Job.
    fullName: poolInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'poolInfo: BatchPoolInfo'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchPoolInfo" />
  - name: priority
    uid: '@azure-rest/batch.BatchJob.priority'
    package: '@azure-rest/batch'
    summary: >-
      The priority of the Job. Priority values can range from -1000 to 1000,
      with -1000 being the lowest priority and 1000 being the highest priority.
      The default value is 0.
    fullName: priority
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'priority?: number'
      return:
        description: ''
        type: number
