### YamlMime:TSType
name: Servers
uid: '@azure/arm-mysql.Servers'
package: '@azure/arm-mysql'
summary: Interface representing a Servers.
fullName: Servers
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, ServerForCreate, ServersCreateOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginCreate'
    package: '@azure/arm-mysql'
    summary: >-
      Creates a new server or updates an existing server. The update action will
      overwrite the existing

      server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, serverName: string,
        parameters: ServerForCreate, options?: ServersCreateOptionalParams):
        Promise<PollerLike<PollOperationState<Server>, Server>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerForCreate" />
          description: The required parameters for creating or updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-mysql.Server" />&gt;, <xref
          uid="@azure/arm-mysql.Server" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, ServerForCreate,
      ServersCreateOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginCreateAndWait'
    package: '@azure/arm-mysql'
    summary: >-
      Creates a new server or updates an existing server. The update action will
      overwrite the existing

      server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, serverName:
        string, parameters: ServerForCreate, options?:
        ServersCreateOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerForCreate" />
          description: The required parameters for creating or updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-mysql.Server" />&gt;
  - name: beginDelete(string, string, ServersDeleteOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginDelete'
    package: '@azure/arm-mysql'
    summary: Deletes a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, serverName: string,
        options?: ServersDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, ServersDeleteOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginDeleteAndWait'
    package: '@azure/arm-mysql'
    summary: Deletes a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, serverName:
        string, options?: ServersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginRestart(string, string, ServersRestartOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginRestart'
    package: '@azure/arm-mysql'
    summary: Restarts a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, serverName: string,
        options?: ServersRestartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersRestartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginRestartAndWait(string, string, ServersRestartOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginRestartAndWait'
    package: '@azure/arm-mysql'
    summary: Restarts a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestartAndWait(resourceGroupName: string, serverName:
        string, options?: ServersRestartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersRestartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStart(string, string, ServersStartOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginStart'
    package: '@azure/arm-mysql'
    summary: Starts a stopped server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, serverName: string,
        options?: ServersStartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStartAndWait(string, string, ServersStartOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginStartAndWait'
    package: '@azure/arm-mysql'
    summary: Starts a stopped server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, serverName:
        string, options?: ServersStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStop(string, string, ServersStopOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginStop'
    package: '@azure/arm-mysql'
    summary: Stops a running server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, serverName: string,
        options?: ServersStopOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStopAndWait(string, string, ServersStopOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginStopAndWait'
    package: '@azure/arm-mysql'
    summary: Stops a running server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, serverName: string,
        options?: ServersStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, ServerUpdateParameters,
      ServersUpdateOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginUpdate'
    package: '@azure/arm-mysql'
    summary: >-
      Updates an existing server. The request body can contain one to many of
      the properties present in

      the normal server definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        parameters: ServerUpdateParameters, options?:
        ServersUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<Server>, Server>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerUpdateParameters" />
          description: The required parameters for updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-mysql.Server" />&gt;, <xref
          uid="@azure/arm-mysql.Server" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ServerUpdateParameters,
      ServersUpdateOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginUpdateAndWait'
    package: '@azure/arm-mysql'
    summary: >-
      Updates an existing server. The request body can contain one to many of
      the properties present in

      the normal server definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, serverName:
        string, parameters: ServerUpdateParameters, options?:
        ServersUpdateOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerUpdateParameters" />
          description: The required parameters for updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-mysql.Server" />&gt;
  - name: >-
      beginUpgrade(string, string, ServerUpgradeParameters,
      ServersUpgradeOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginUpgrade'
    package: '@azure/arm-mysql'
    summary: Upgrade server version.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgrade(resourceGroupName: string, serverName: string,
        parameters: ServerUpgradeParameters, options?:
        ServersUpgradeOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerUpgradeParameters" />
          description: The required parameters for updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersUpgradeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginUpgradeAndWait(string, string, ServerUpgradeParameters,
      ServersUpgradeOptionalParams)
    uid: '@azure/arm-mysql.Servers.beginUpgradeAndWait'
    package: '@azure/arm-mysql'
    summary: Upgrade server version.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeAndWait(resourceGroupName: string, serverName:
        string, parameters: ServerUpgradeParameters, options?:
        ServersUpgradeOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: parameters
          type: <xref uid="@azure/arm-mysql.ServerUpgradeParameters" />
          description: The required parameters for updating a server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersUpgradeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, ServersGetOptionalParams)
    uid: '@azure/arm-mysql.Servers.get'
    package: '@azure/arm-mysql'
    summary: Gets information about a server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string, options?:
        ServersGetOptionalParams): Promise<Server>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-mysql.Server" />&gt;
  - name: list(ServersListOptionalParams)
    uid: '@azure/arm-mysql.Servers.list'
    package: '@azure/arm-mysql'
    summary: List all the servers in a given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ServersListOptionalParams):
        PagedAsyncIterableIterator<Server, Server[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-mysql.ServersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-mysql.Server" />, <xref uid="@azure/arm-mysql.Server"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, ServersListByResourceGroupOptionalParams)
    uid: '@azure/arm-mysql.Servers.listByResourceGroup'
    package: '@azure/arm-mysql'
    summary: List all the servers in a given resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ServersListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Server, Server[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mysql.ServersListByResourceGroupOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-mysql.Server" />, <xref uid="@azure/arm-mysql.Server"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
