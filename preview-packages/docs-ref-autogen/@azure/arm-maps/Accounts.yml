### YamlMime:TSType
name: Accounts
uid: '@azure/arm-maps.Accounts'
package: '@azure/arm-maps'
summary: Interface representing a Accounts.
fullName: Accounts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, MapsAccount,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-maps.Accounts.createOrUpdate'
    package: '@azure/arm-maps'
    summary: >-
      Create or update a Maps Account. A Maps Account holds the keys which allow
      access to the Maps REST

      APIs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, accountName: string,
        mapsAccount: MapsAccount, options?:
        AccountsCreateOrUpdateOptionalParams): Promise<MapsAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccount
          type: <xref uid="@azure/arm-maps.MapsAccount" />
          description: The new or updated parameters for the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
  - name: delete(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-maps.Accounts.delete'
    package: '@azure/arm-maps'
    summary: Delete a Maps Account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, accountName: string,
        options?: AccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, AccountsGetOptionalParams)
    uid: '@azure/arm-maps.Accounts.get'
    package: '@azure/arm-maps'
    summary: Get a Maps Account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        AccountsGetOptionalParams): Promise<MapsAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
  - name: listByResourceGroup(string, AccountsListByResourceGroupOptionalParams)
    uid: '@azure/arm-maps.Accounts.listByResourceGroup'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Resource Group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        AccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<MapsAccount, MapsAccount[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-maps.AccountsListByResourceGroupOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-maps.MapsAccount" />, <xref
          uid="@azure/arm-maps.MapsAccount" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(AccountsListBySubscriptionOptionalParams)
    uid: '@azure/arm-maps.Accounts.listBySubscription'
    package: '@azure/arm-maps'
    summary: Get all Maps Accounts in a Subscription
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        AccountsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<MapsAccount, MapsAccount[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-maps.AccountsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-maps.MapsAccount" />, <xref
          uid="@azure/arm-maps.MapsAccount" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, AccountsListKeysOptionalParams)
    uid: '@azure/arm-maps.Accounts.listKeys'
    package: '@azure/arm-maps'
    summary: >-
      Get the keys to use with the Maps APIs. A key is used to authenticate and
      authorize access to the

      Maps REST APIs. Only one key is needed at a time; two are given to provide
      seamless key

      regeneration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: AccountsListKeysOptionalParams): Promise<MapsAccountKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsListKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccountKeys" />&gt;
  - name: >-
      listSas(string, string, AccountSasParameters,
      AccountsListSasOptionalParams)
    uid: '@azure/arm-maps.Accounts.listSas'
    package: '@azure/arm-maps'
    summary: >-
      Create and list an account shared access signature token. Use this SAS
      token for authentication to

      Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to
      create a SAS Token.


      Prerequisites:

      1. Create or have an existing User Assigned Managed Identity in the same
      Azure region as the

      account.

      2. Create or update an Azure Map account with the same Azure region as the
      User Assigned Managed

      Identity is placed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSas(resourceGroupName: string, accountName: string,
        mapsAccountSasParameters: AccountSasParameters, options?:
        AccountsListSasOptionalParams): Promise<MapsAccountSasToken>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountSasParameters
          type: <xref uid="@azure/arm-maps.AccountSasParameters" />
          description: The updated parameters for the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsListSasOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccountSasToken" />&gt;
  - name: >-
      regenerateKeys(string, string, MapsKeySpecification,
      AccountsRegenerateKeysOptionalParams)
    uid: '@azure/arm-maps.Accounts.regenerateKeys'
    package: '@azure/arm-maps'
    summary: >-
      Regenerate either the primary or secondary key for use with the Maps APIs.
      The old key will stop

      working immediately.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKeys(resourceGroupName: string, accountName: string,
        keySpecification: MapsKeySpecification, options?:
        AccountsRegenerateKeysOptionalParams): Promise<MapsAccountKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: keySpecification
          type: <xref uid="@azure/arm-maps.MapsKeySpecification" />
          description: 'Which key to regenerate:  primary or secondary.'
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsRegenerateKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccountKeys" />&gt;
  - name: >-
      update(string, string, MapsAccountUpdateParameters,
      AccountsUpdateOptionalParams)
    uid: '@azure/arm-maps.Accounts.update'
    package: '@azure/arm-maps'
    summary: >-
      Updates a Maps Account. Only a subset of the parameters may be updated
      after creation, such as Sku,

      Tags, Properties.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        mapsAccountUpdateParameters: MapsAccountUpdateParameters, options?:
        AccountsUpdateOptionalParams): Promise<MapsAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the Maps Account.
        - id: mapsAccountUpdateParameters
          type: <xref uid="@azure/arm-maps.MapsAccountUpdateParameters" />
          description: The updated parameters for the Maps Account.
        - id: options
          type: <xref uid="@azure/arm-maps.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-maps.MapsAccount" />&gt;
