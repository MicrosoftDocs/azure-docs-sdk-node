### YamlMime:TSType
name: CallAdapterDeviceManagement
uid: '@azure/communication-react.CallAdapterDeviceManagement'
package: '@azure/communication-react'
summary: Functionality for managing devices within a call.
fullName: CallAdapterDeviceManagement
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: askDevicePermission(PermissionConstraints)
    uid: '@azure/communication-react.CallAdapterDeviceManagement.askDevicePermission'
    package: '@azure/communication-react'
    summary: Ask for permissions of devices.
    remarks: Browser permission window will pop up if permissions are not granted yet
    isDeprecated: false
    syntax:
      content: >-
        function askDevicePermission(constrain: PermissionConstraints):
        Promise<DeviceAccess>
      parameters:
        - id: constrain
          type: <xref uid="@azure/communication-calling.PermissionConstraints" />
          description: >-
            Define constraints for accessing local devices
            <xref:@azure/communication-calling#PermissionConstraints>
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.DeviceAccess"
          />&gt;
  - name: queryCameras()
    uid: '@azure/communication-react.CallAdapterDeviceManagement.queryCameras'
    package: '@azure/communication-react'
    summary: Query for available camera devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryCameras(): Promise<VideoDeviceInfo[]>'
      return:
        description: >-
          An array of video device information entities
          <xref:@azure/communication-calling#VideoDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.VideoDeviceInfo"
          />[]&gt;
  - name: queryMicrophones()
    uid: '@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryMicrophones(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:@azure/communication-calling#AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
  - name: querySpeakers()
    uid: '@azure/communication-react.CallAdapterDeviceManagement.querySpeakers'
    package: '@azure/communication-react'
    summary: Query for available speaker devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function querySpeakers(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:@azure/communication-calling#AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
  - name: setCamera(VideoDeviceInfo, VideoStreamOptions)
    uid: '@azure/communication-react.CallAdapterDeviceManagement.setCamera'
    package: '@azure/communication-react'
    summary: Set the camera to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(sourceInfo: VideoDeviceInfo, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.VideoDeviceInfo" />
          description: >-
            Camera device to choose, pick one returned by 
            [queryCameras](xref:@azure/communication-react.CallAdapterDeviceManagement.queryCameras)
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how the camera stream is rendered
            <xref:@azure/communication-calling#VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CallAdapterDeviceManagement.setMicrophone'
    package: '@azure/communication-react'
    summary: Set the microphone to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Microphone device to choose, pick one returned by
            [queryMicrophones](xref:@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones)
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CallAdapterDeviceManagement.setSpeaker'
    package: '@azure/communication-react'
    summary: Set the speaker to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Speaker device to choose, pick one returned by
            [querySpeakers](xref:@azure/communication-react.CallAdapterDeviceManagement.querySpeakers)
      return:
        description: ''
        type: Promise&lt;void&gt;
