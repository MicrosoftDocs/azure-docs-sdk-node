### YamlMime:TSType
name: Redis
uid: '@azure/arm-rediscache.Redis'
package: '@azure/arm-rediscache'
summary: Interface representing a Redis.
fullName: Redis
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, RedisCreateParameters,
      RedisCreateOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginCreate'
    package: '@azure/arm-rediscache'
    summary: >-
      Create or replace (overwrite/recreate, with potential downtime) an
      existing Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, name: string,
        parameters: RedisCreateParameters, options?: RedisCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<RedisResource>, RedisResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCreateParameters" />
          description: Parameters supplied to the Create Redis operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-rediscache.RedisResource" />&gt;, <xref
          uid="@azure/arm-rediscache.RedisResource" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, RedisCreateParameters,
      RedisCreateOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginCreateAndWait'
    package: '@azure/arm-rediscache'
    summary: >-
      Create or replace (overwrite/recreate, with potential downtime) an
      existing Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, name: string,
        parameters: RedisCreateParameters, options?: RedisCreateOptionalParams):
        Promise<RedisResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisCreateParameters" />
          description: Parameters supplied to the Create Redis operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-rediscache.RedisResource" />&gt;
  - name: beginDelete(string, string, RedisDeleteOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginDelete'
    package: '@azure/arm-rediscache'
    summary: Deletes a Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, name: string, options?:
        RedisDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, RedisDeleteOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginDeleteAndWait'
    package: '@azure/arm-rediscache'
    summary: Deletes a Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, name: string,
        options?: RedisDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginExportData(string, string, ExportRDBParameters,
      RedisExportDataOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginExportData'
    package: '@azure/arm-rediscache'
    summary: Export data from the redis cache to blobs in a container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginExportData(resourceGroupName: string, name: string,
        parameters: ExportRDBParameters, options?:
        RedisExportDataOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ExportRDBParameters" />
          description: Parameters for Redis export operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisExportDataOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginExportDataAndWait(string, string, ExportRDBParameters,
      RedisExportDataOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginExportDataAndWait'
    package: '@azure/arm-rediscache'
    summary: Export data from the redis cache to blobs in a container.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginExportDataAndWait(resourceGroupName: string, name: string,
        parameters: ExportRDBParameters, options?:
        RedisExportDataOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ExportRDBParameters" />
          description: Parameters for Redis export operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisExportDataOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginFlushCache(string, string, RedisFlushCacheOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginFlushCache'
    package: '@azure/arm-rediscache'
    summary: Deletes all of the keys in a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushCache(resourceGroupName: string, cacheName: string,
        options?: RedisFlushCacheOptionalParams):
        Promise<SimplePollerLike<OperationState<RedisFlushCacheResponse>,
        RedisFlushCacheResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisFlushCacheOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-rediscache.RedisFlushCacheResponse" />&gt;, <xref
          uid="@azure/arm-rediscache.RedisFlushCacheResponse" />&gt;&gt;
  - name: beginFlushCacheAndWait(string, string, RedisFlushCacheOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginFlushCacheAndWait'
    package: '@azure/arm-rediscache'
    summary: Deletes all of the keys in a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushCacheAndWait(resourceGroupName: string, cacheName:
        string, options?: RedisFlushCacheOptionalParams):
        Promise<RedisFlushCacheResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisFlushCacheOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-rediscache.RedisFlushCacheResponse"
          />&gt;
  - name: >-
      beginImportData(string, string, ImportRDBParameters,
      RedisImportDataOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginImportData'
    package: '@azure/arm-rediscache'
    summary: Import data into Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportData(resourceGroupName: string, name: string,
        parameters: ImportRDBParameters, options?:
        RedisImportDataOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ImportRDBParameters" />
          description: Parameters for Redis import operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisImportDataOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginImportDataAndWait(string, string, ImportRDBParameters,
      RedisImportDataOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginImportDataAndWait'
    package: '@azure/arm-rediscache'
    summary: Import data into Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportDataAndWait(resourceGroupName: string, name: string,
        parameters: ImportRDBParameters, options?:
        RedisImportDataOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.ImportRDBParameters" />
          description: Parameters for Redis import operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisImportDataOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, RedisUpdateParameters,
      RedisUpdateOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginUpdate'
    package: '@azure/arm-rediscache'
    summary: Update an existing Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, name: string,
        parameters: RedisUpdateParameters, options?: RedisUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<RedisResource>, RedisResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisUpdateParameters" />
          description: Parameters supplied to the Update Redis operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-rediscache.RedisResource" />&gt;, <xref
          uid="@azure/arm-rediscache.RedisResource" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, RedisUpdateParameters,
      RedisUpdateOptionalParams)
    uid: '@azure/arm-rediscache.Redis.beginUpdateAndWait'
    package: '@azure/arm-rediscache'
    summary: Update an existing Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, name: string,
        parameters: RedisUpdateParameters, options?: RedisUpdateOptionalParams):
        Promise<RedisResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisUpdateParameters" />
          description: Parameters supplied to the Update Redis operation.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-rediscache.RedisResource" />&gt;
  - name: >-
      checkNameAvailability(CheckNameAvailabilityParameters,
      RedisCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-rediscache.Redis.checkNameAvailability'
    package: '@azure/arm-rediscache'
    summary: Checks that the redis cache name is valid and is not already in use.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(parameters:
        CheckNameAvailabilityParameters, options?:
        RedisCheckNameAvailabilityOptionalParams): Promise<void>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.CheckNameAvailabilityParameters" />
          description: >-
            Parameters supplied to the CheckNameAvailability Redis operation.
            The only
                              supported resource type is 'Microsoft.Cache/redis'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.RedisCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      forceReboot(string, string, RedisRebootParameters,
      RedisForceRebootOptionalParams)
    uid: '@azure/arm-rediscache.Redis.forceReboot'
    package: '@azure/arm-rediscache'
    summary: >-
      Reboot specified Redis node(s). This operation requires write permission
      to the cache resource.

      There can be potential data loss.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function forceReboot(resourceGroupName: string, name: string,
        parameters: RedisRebootParameters, options?:
        RedisForceRebootOptionalParams): Promise<RedisForceRebootResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisRebootParameters" />
          description: Specifies which Redis node(s) to reboot.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisForceRebootOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-rediscache.RedisForceRebootResponse"
          />&gt;
  - name: get(string, string, RedisGetOptionalParams)
    uid: '@azure/arm-rediscache.Redis.get'
    package: '@azure/arm-rediscache'
    summary: Gets a Redis cache (resource description).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        RedisGetOptionalParams): Promise<RedisResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-rediscache.RedisResource" />&gt;
  - name: listByResourceGroup(string, RedisListByResourceGroupOptionalParams)
    uid: '@azure/arm-rediscache.Redis.listByResourceGroup'
    package: '@azure/arm-rediscache'
    summary: Lists all Redis caches in a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        RedisListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<RedisResource, RedisResource[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.RedisListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-rediscache.RedisResource" />, <xref
          uid="@azure/arm-rediscache.RedisResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(RedisListBySubscriptionOptionalParams)
    uid: '@azure/arm-rediscache.Redis.listBySubscription'
    package: '@azure/arm-rediscache'
    summary: Gets all Redis caches in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        RedisListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<RedisResource, RedisResource[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.RedisListBySubscriptionOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-rediscache.RedisResource" />, <xref
          uid="@azure/arm-rediscache.RedisResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, RedisListKeysOptionalParams)
    uid: '@azure/arm-rediscache.Redis.listKeys'
    package: '@azure/arm-rediscache'
    summary: >-
      Retrieve a Redis cache's access keys. This operation requires write
      permission to the cache

      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, name: string, options?:
        RedisListKeysOptionalParams): Promise<RedisAccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: options
          type: <xref uid="@azure/arm-rediscache.RedisListKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys" />&gt;
  - name: >-
      listUpgradeNotifications(string, string, number,
      RedisListUpgradeNotificationsOptionalParams)
    uid: '@azure/arm-rediscache.Redis.listUpgradeNotifications'
    package: '@azure/arm-rediscache'
    summary: Gets any upgrade notifications for a Redis cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listUpgradeNotifications(resourceGroupName: string, name:
        string, history: number, options?:
        RedisListUpgradeNotificationsOptionalParams):
        PagedAsyncIterableIterator<UpgradeNotification, UpgradeNotification[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: history
          type: number
          description: how many minutes in past to look for upgrade notifications
        - id: options
          type: >-
            <xref
            uid="@azure/arm-rediscache.RedisListUpgradeNotificationsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-rediscache.UpgradeNotification" />, <xref
          uid="@azure/arm-rediscache.UpgradeNotification" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      regenerateKey(string, string, RedisRegenerateKeyParameters,
      RedisRegenerateKeyOptionalParams)
    uid: '@azure/arm-rediscache.Redis.regenerateKey'
    package: '@azure/arm-rediscache'
    summary: >-
      Regenerate Redis cache's access keys. This operation requires write
      permission to the cache

      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, name: string,
        parameters: RedisRegenerateKeyParameters, options?:
        RedisRegenerateKeyOptionalParams): Promise<RedisAccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: The name of the Redis cache.
        - id: parameters
          type: <xref uid="@azure/arm-rediscache.RedisRegenerateKeyParameters" />
          description: Specifies which key to regenerate.
        - id: options
          type: >-
            <xref uid="@azure/arm-rediscache.RedisRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-rediscache.RedisAccessKeys" />&gt;
