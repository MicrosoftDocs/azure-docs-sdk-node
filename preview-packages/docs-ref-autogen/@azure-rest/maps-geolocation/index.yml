### YamlMime:TSPackage
uid: '@azure-rest/maps-geolocation'
name: '@azure-rest/maps-geolocation'
summary: ''
type: package
interfaces:
  - '@azure-rest/maps-geolocation.CountryRegionOutput'
  - '@azure-rest/maps-geolocation.ErrorAdditionalInfoOutput'
  - '@azure-rest/maps-geolocation.ErrorDetailOutput'
  - '@azure-rest/maps-geolocation.ErrorResponseOutput'
  - '@azure-rest/maps-geolocation.GeolocationGetLocation200Response'
  - '@azure-rest/maps-geolocation.GeolocationGetLocationDefaultResponse'
  - '@azure-rest/maps-geolocation.GeolocationGetLocationQueryParam'
  - '@azure-rest/maps-geolocation.GeolocationGetLocationQueryParamProperties'
  - '@azure-rest/maps-geolocation.GetLocation'
  - '@azure-rest/maps-geolocation.IpAddressToLocationResultOutput'
  - '@azure-rest/maps-geolocation.MapsGeolocationClientOptions'
  - '@azure-rest/maps-geolocation.Routes'
typeAliases:
  - '@azure-rest/maps-geolocation.GeolocationGetLocationParameters'
  - '@azure-rest/maps-geolocation.MapsGeolocationClient'
functions:
  - name: default(AzureKeyCredential, ClientOptions)
    uid: '@azure-rest/maps-geolocation.default'
    package: '@azure-rest/maps-geolocation'
    summary: |+
      Creates an instance of MapsGeolocationClient from a subscription key.

      **Example**

      ```ts snippet:ReadmeSampleCreateClient_SubscriptionKey
      import { AzureKeyCredential } from "@azure/core-auth";
      import MapsGeolocation from "@azure-rest/maps-geolocation";

      const credential = new AzureKeyCredential("<subscription-key>");
      const client = MapsGeolocation(credential);
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureKeyCredential, options?:
        ClientOptions): MapsGeolocationClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureKeyCredential" />
          description: >-
            An AzureKeyCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Geolocation Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-geolocation.MapsGeolocationClient" />
  - name: default(TokenCredential, string, ClientOptions)
    uid: '@azure-rest/maps-geolocation.default_1'
    package: '@azure-rest/maps-geolocation'
    summary: >+
      Creates an instance of MapsGeolocation from an Azure Identity
      `TokenCredential`.


      **Example**


      ```ts snippet:ReadmeSampleCreateClient_TokenCredential

      import { DefaultAzureCredential } from "@azure/identity";

      import MapsGeolocation from "@azure-rest/maps-geolocation";


      const credential = new DefaultAzureCredential();

      const client = MapsGeolocation(credential, "<maps-account-client-id>");

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: TokenCredential, mapsAccountClientId:
        string, options?: ClientOptions): MapsGeolocationClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            An TokenCredential instance used to authenticate requests to the
            service
        - id: mapsAccountClientId
          type: string
          description: The Azure Maps client id of a specific map resource
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Route Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-geolocation.MapsGeolocationClient" />
  - name: default(AzureSASCredential, ClientOptions)
    uid: '@azure-rest/maps-geolocation.default_2'
    package: '@azure-rest/maps-geolocation'
    summary: >+
      Creates an instance of MapsGeolocation from an Azure Identity
      `AzureSASCredential`.


      **Example**


      ```ts snippet:ReadmeSampleCreateClient_SASToken

      import { AzureSASCredential } from "@azure/core-auth";

      import MapsGeolocation from "@azure-rest/maps-geolocation";


      const credential = new AzureSASCredential("<SAS Token>");

      const client = MapsGeolocation(credential);

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureSASCredential, options?:
        ClientOptions): MapsGeolocationClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureSASCredential" />
          description: >-
            An AzureSASCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Geolocation Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-geolocation.MapsGeolocationClient" />
  - name: >-
      isUnexpected(GeolocationGetLocation200Response |
      GeolocationGetLocationDefaultResponse)
    uid: '@azure-rest/maps-geolocation.isUnexpected'
    package: '@azure-rest/maps-geolocation'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GeolocationGetLocation200Response |
        GeolocationGetLocationDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-geolocation.GeolocationGetLocation200Response"
            /> | <xref
            uid="@azure-rest/maps-geolocation.GeolocationGetLocationDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
