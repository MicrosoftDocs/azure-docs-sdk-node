### YamlMime:TSType
name: VideoGalleryProps
uid: '@azure/communication-react.VideoGalleryProps'
package: '@azure/communication-react'
summary: Props for [VideoGallery](xref:@azure/communication-react.VideoGallery).
fullName: VideoGalleryProps
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: dominantSpeakers
    uid: '@azure/communication-react.VideoGalleryProps.dominantSpeakers'
    package: '@azure/communication-react'
    summary: >-
      List of dominant speaker userIds in the order of their dominance. 0th
      index is the most dominant.
    fullName: dominantSpeakers
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dominantSpeakers?: string[]'
      return:
        description: ''
        type: string[]
  - name: layout
    uid: '@azure/communication-react.VideoGalleryProps.layout'
    package: '@azure/communication-react'
    summary: Layout of the video tiles.
    fullName: layout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'layout?: VideoGalleryLayout'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryLayout" />
  - name: localParticipant
    uid: '@azure/communication-react.VideoGalleryProps.localParticipant'
    package: '@azure/communication-react'
    summary: Local video particpant
    fullName: localParticipant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'localParticipant: VideoGalleryLocalParticipant'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryLocalParticipant" />
  - name: localScreenShareView
    uid: '@azure/communication-react.VideoGalleryProps.localScreenShareView'
    package: '@azure/communication-react'
    summary: Controls the view of the local screenshare stream in the gallery
    fullName: localScreenShareView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'localScreenShareView?: LocalScreenShareView'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.LocalScreenShareView" />
  - name: localVideoCameraCycleButtonProps
    uid: >-
      @azure/communication-react.VideoGalleryProps.localVideoCameraCycleButtonProps
    package: '@azure/communication-react'
    summary: Camera control information for button to switch cameras.
    fullName: localVideoCameraCycleButtonProps
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'localVideoCameraCycleButtonProps?: LocalVideoCameraCycleButtonProps'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/communication-react.LocalVideoCameraCycleButtonProps" />
  - name: localVideoTileSize
    uid: '@azure/communication-react.VideoGalleryProps.localVideoTileSize'
    package: '@azure/communication-react'
    summary: Determines the aspect ratio of local video tile in the video gallery.
    fullName: localVideoTileSize
    remarks: >-
      'followDeviceOrientation' will be responsive to the screen orientation and
      will change between 9:16 (portrait) and

      16:9 (landscape) aspect ratios.
    isDeprecated: false
    syntax:
      content: 'localVideoTileSize?: LocalVideoTileSize'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.LocalVideoTileSize" />
  - name: localVideoViewOptions
    uid: '@azure/communication-react.VideoGalleryProps.localVideoViewOptions'
    package: '@azure/communication-react'
    summary: Local video view options
    fullName: localVideoViewOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'localVideoViewOptions?: VideoStreamOptions'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoStreamOptions" />
  - name: maxParticipantsToSpotlight
    uid: '@azure/communication-react.VideoGalleryProps.maxParticipantsToSpotlight'
    package: '@azure/communication-react'
    summary: Maximum participants that can be spotlighted
    fullName: maxParticipantsToSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxParticipantsToSpotlight?: number'
      return:
        description: ''
        type: number
  - name: maxRemoteVideoStreams
    uid: '@azure/communication-react.VideoGalleryProps.maxRemoteVideoStreams'
    package: '@azure/communication-react'
    summary: Maximum number of participant remote video streams that is rendered.
    fullName: maxRemoteVideoStreams
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxRemoteVideoStreams?: number'
      return:
        description: ''
        type: number
  - name: onCreateLocalStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onCreateLocalStreamView'
    package: '@azure/communication-react'
    summary: Callback to create the local video stream view
    fullName: onCreateLocalStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onCreateLocalStreamView?: (options?: VideoStreamOptions) => Promise<void
        | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onCreateRemoteStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onCreateRemoteStreamView'
    package: '@azure/communication-react'
    summary: Callback to create a remote video stream view
    fullName: onCreateRemoteStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onCreateRemoteStreamView?: (userId: string, options?:
        VideoStreamOptions) => Promise<void | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (userId: string, options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onDisposeLocalScreenShareStreamView
    uid: >-
      @azure/communication-react.VideoGalleryProps.onDisposeLocalScreenShareStreamView
    package: '@azure/communication-react'
    summary: Callback to dispose a local screen share stream view
    fullName: onDisposeLocalScreenShareStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeLocalScreenShareStreamView?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onDisposeLocalStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onDisposeLocalStreamView'
    package: '@azure/communication-react'
    summary: Callback to dispose of the local video stream view
    fullName: onDisposeLocalStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeLocalStreamView?: () => void'
      return:
        description: ''
        type: () =&gt; void
  - name: onDisposeRemoteScreenShareStreamView
    uid: >-
      @azure/communication-react.VideoGalleryProps.onDisposeRemoteScreenShareStreamView
    package: '@azure/communication-react'
    summary: Callback to dispose a remote screen share stream view
    fullName: onDisposeRemoteScreenShareStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeRemoteScreenShareStreamView?: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onDisposeRemoteStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onDisposeRemoteStreamView'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeRemoteStreamView
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      use
      [onDisposeRemoteVideoStreamView](xref:@azure/communication-react.VideoGalleryProps.onDisposeRemoteVideoStreamView)
      and
      [onDisposeRemoteScreenShareStreamView](xref:@azure/communication-react.VideoGalleryProps.onDisposeRemoteScreenShareStreamView)
      instead


      Callback to dispose a remote video stream view
    syntax:
      content: 'onDisposeRemoteStreamView?: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onDisposeRemoteVideoStreamView
    uid: >-
      @azure/communication-react.VideoGalleryProps.onDisposeRemoteVideoStreamView
    package: '@azure/communication-react'
    summary: Callback to dispose a remote video stream view
    fullName: onDisposeRemoteVideoStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeRemoteVideoStreamView?: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onForbidAudio
    uid: '@azure/communication-react.VideoGalleryProps.onForbidAudio'
    package: '@azure/communication-react'
    summary: This callback is to forbid audio for remote participant(s)
    fullName: onForbidAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidAudio?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onForbidVideo
    uid: '@azure/communication-react.VideoGalleryProps.onForbidVideo'
    package: '@azure/communication-react'
    summary: This callback is to forbid video for remote participant(s)
    fullName: onForbidVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidVideo?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onMuteParticipant
    uid: '@azure/communication-react.VideoGalleryProps.onMuteParticipant'
    package: '@azure/communication-react'
    summary: This callback is to mute a remote participant
    fullName: onMuteParticipant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMuteParticipant?: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onPermitAudio
    uid: '@azure/communication-react.VideoGalleryProps.onPermitAudio'
    package: '@azure/communication-react'
    summary: This callback is to permit audio for remote participant(s)
    fullName: onPermitAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitAudio?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onPermitVideo
    uid: '@azure/communication-react.VideoGalleryProps.onPermitVideo'
    package: '@azure/communication-react'
    summary: This callback is to permit video for remote participant(s)
    fullName: onPermitVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitVideo?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onPinParticipant
    uid: '@azure/communication-react.VideoGalleryProps.onPinParticipant'
    package: '@azure/communication-react'
    summary: This callback will be called when a participant video tile is pinned.
    fullName: onPinParticipant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPinParticipant?: (userId: string) => void'
      return:
        description: ''
        type: '(userId: string) =&gt; void'
  - name: onRenderAvatar
    uid: '@azure/communication-react.VideoGalleryProps.onRenderAvatar'
    package: '@azure/communication-react'
    summary: Callback to render a participant avatar
    fullName: onRenderAvatar
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRenderAvatar?: OnRenderAvatarCallback'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.OnRenderAvatarCallback" />
  - name: onRenderLocalVideoTile
    uid: '@azure/communication-react.VideoGalleryProps.onRenderLocalVideoTile'
    package: '@azure/communication-react'
    summary: Callback to render the local video tile
    fullName: onRenderLocalVideoTile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onRenderLocalVideoTile?: (localParticipant:
        VideoGalleryLocalParticipant) => Element
      return:
        description: ''
        type: '(localParticipant: VideoGalleryLocalParticipant) =&gt; Element'
  - name: onRenderRemoteVideoTile
    uid: '@azure/communication-react.VideoGalleryProps.onRenderRemoteVideoTile'
    package: '@azure/communication-react'
    summary: Callback to render a remote video tile
    fullName: onRenderRemoteVideoTile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onRenderRemoteVideoTile?: (remoteParticipant:
        VideoGalleryRemoteParticipant) => Element
      return:
        description: ''
        type: '(remoteParticipant: VideoGalleryRemoteParticipant) =&gt; Element'
  - name: onStartLocalSpotlight
    uid: '@azure/communication-react.VideoGalleryProps.onStartLocalSpotlight'
    package: '@azure/communication-react'
    summary: This callback is to start spotlight for local participant video tile.
    fullName: onStartLocalSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartLocalSpotlight?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStartRemoteSpotlight
    uid: '@azure/communication-react.VideoGalleryProps.onStartRemoteSpotlight'
    package: '@azure/communication-react'
    summary: This callback is to stop spotlight for local participant video tile.
    fullName: onStartRemoteSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartRemoteSpotlight?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onStopLocalSpotlight
    uid: '@azure/communication-react.VideoGalleryProps.onStopLocalSpotlight'
    package: '@azure/communication-react'
    summary: This callback is to start spotlight for remote participant video tiles.
    fullName: onStopLocalSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopLocalSpotlight?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopRemoteSpotlight
    uid: '@azure/communication-react.VideoGalleryProps.onStopRemoteSpotlight'
    package: '@azure/communication-react'
    summary: This callback is to stop spotlight for remote participant video tiles.
    fullName: onStopRemoteSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopRemoteSpotlight?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onUnpinParticipant
    uid: '@azure/communication-react.VideoGalleryProps.onUnpinParticipant'
    package: '@azure/communication-react'
    summary: This callback will be called when a participant video tile is un-pinned.
    fullName: onUnpinParticipant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onUnpinParticipant?: (userId: string) => void'
      return:
        description: ''
        type: '(userId: string) =&gt; void'
  - name: overflowGalleryPosition
    uid: '@azure/communication-react.VideoGalleryProps.overflowGalleryPosition'
    package: '@azure/communication-react'
    summary: Determines the layout of the overflowGallery inside the VideoGallery.
    fullName: overflowGalleryPosition
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'overflowGalleryPosition?: OverflowGalleryPosition'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.OverflowGalleryPosition" />
  - name: pinnedParticipants
    uid: '@azure/communication-react.VideoGalleryProps.pinnedParticipants'
    package: '@azure/communication-react'
    summary: List of pinned participant userIds.
    fullName: pinnedParticipants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'pinnedParticipants?: string[]'
      return:
        description: ''
        type: string[]
  - name: reactionResources
    uid: '@azure/communication-react.VideoGalleryProps.reactionResources'
    package: '@azure/communication-react'
    summary: Reaction resources for like, heart, laugh, applause and surprised.
    fullName: reactionResources
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'reactionResources?: ReactionResources'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.ReactionResources" />
  - name: remoteParticipants
    uid: '@azure/communication-react.VideoGalleryProps.remoteParticipants'
    package: '@azure/communication-react'
    summary: List of remote video particpants
    fullName: remoteParticipants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'remoteParticipants?: VideoGalleryRemoteParticipant[]'
      return:
        description: ''
        type: >-
          <xref uid="@azure/communication-react.VideoGalleryRemoteParticipant"
          />[]
  - name: remoteVideoTileMenu
    uid: '@azure/communication-react.VideoGalleryProps.remoteVideoTileMenu'
    package: '@azure/communication-react'
    summary: Options for showing the remote video tile menu.
    fullName: remoteVideoTileMenu
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        remoteVideoTileMenu?: false | VideoTileContextualMenuProps |
        VideoTileDrawerMenuProps
      return:
        description: ''
        type: >-
          false | <xref
          uid="@azure/communication-react.VideoTileContextualMenuProps" /> |
          <xref uid="@azure/communication-react.VideoTileDrawerMenuProps" />
  - name: remoteVideoViewOptions
    uid: '@azure/communication-react.VideoGalleryProps.remoteVideoViewOptions'
    package: '@azure/communication-react'
    summary: Remote videos view options
    fullName: remoteVideoViewOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'remoteVideoViewOptions?: VideoStreamOptions'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoStreamOptions" />
  - name: showCameraSwitcherInLocalPreview
    uid: >-
      @azure/communication-react.VideoGalleryProps.showCameraSwitcherInLocalPreview
    package: '@azure/communication-react'
    summary: Whether to display the local video camera switcher button
    fullName: showCameraSwitcherInLocalPreview
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'showCameraSwitcherInLocalPreview?: boolean'
      return:
        description: ''
        type: boolean
  - name: showMuteIndicator
    uid: '@azure/communication-react.VideoGalleryProps.showMuteIndicator'
    package: '@azure/communication-react'
    summary: Whether to display a mute icon beside the user's display name.
    fullName: showMuteIndicator
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'showMuteIndicator?: boolean'
      return:
        description: ''
        type: boolean
  - name: spotlightedParticipants
    uid: '@azure/communication-react.VideoGalleryProps.spotlightedParticipants'
    package: '@azure/communication-react'
    summary: List of spotlighted participant userIds.
    fullName: spotlightedParticipants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'spotlightedParticipants?: string[]'
      return:
        description: ''
        type: string[]
  - name: strings
    uid: '@azure/communication-react.VideoGalleryProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strings?: Partial<VideoGalleryStrings>'
      return:
        description: ''
        type: >-
          Partial&lt;<xref uid="@azure/communication-react.VideoGalleryStrings"
          />&gt;
  - name: styles
    uid: '@azure/communication-react.VideoGalleryProps.styles'
    package: '@azure/communication-react'
    summary: >-
      Allows users to pass an object containing custom CSS styles for the
      gallery container.
    fullName: styles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'styles?: VideoGalleryStyles'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryStyles" />
  - name: videoTilesOptions
    uid: '@azure/communication-react.VideoGalleryProps.videoTilesOptions'
    package: '@azure/communication-react'
    summary: Additional Options for Video Tiles
    fullName: videoTilesOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'videoTilesOptions?: VideoTilesOptions'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoTilesOptions" />
