### YamlMime:TSType
name: Vaults
uid: '@azure/arm-recoveryservices.Vaults'
package: '@azure/arm-recoveryservices'
summary: Interface representing a Vaults.
fullName: Vaults
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Vault,
      VaultsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginCreateOrUpdate'
    package: '@azure/arm-recoveryservices'
    summary: Creates or updates a Recovery Services vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, vault: Vault, options?: VaultsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Vault>, Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: vault
          type: <xref uid="@azure/arm-recoveryservices.Vault" />
          description: Recovery Services Vault to be created.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservices.VaultsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-recoveryservices.Vault" />&gt;, <xref
          uid="@azure/arm-recoveryservices.Vault" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Vault,
      VaultsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginCreateOrUpdateAndWait'
    package: '@azure/arm-recoveryservices'
    summary: Creates or updates a Recovery Services vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        vaultName: string, vault: Vault, options?:
        VaultsCreateOrUpdateOptionalParams): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: vault
          type: <xref uid="@azure/arm-recoveryservices.Vault" />
          description: Recovery Services Vault to be created.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservices.VaultsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-recoveryservices.Vault" />&gt;
  - name: beginDelete(string, string, VaultsDeleteOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginDelete'
    package: '@azure/arm-recoveryservices'
    summary: Deletes a vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, vaultName: string,
        options?: VaultsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<VaultsDeleteHeaders>,
        VaultsDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: options
          type: >-
            <xref uid="@azure/arm-recoveryservices.VaultsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-recoveryservices.VaultsDeleteHeaders" />&gt;, <xref
          uid="@azure/arm-recoveryservices.VaultsDeleteHeaders" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, VaultsDeleteOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginDeleteAndWait'
    package: '@azure/arm-recoveryservices'
    summary: Deletes a vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, vaultName:
        string, options?: VaultsDeleteOptionalParams):
        Promise<VaultsDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: options
          type: >-
            <xref uid="@azure/arm-recoveryservices.VaultsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-recoveryservices.VaultsDeleteHeaders"
          />&gt;
  - name: beginUpdate(string, string, PatchVault, VaultsUpdateOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginUpdate'
    package: '@azure/arm-recoveryservices'
    summary: Updates the vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vaultName: string,
        vault: PatchVault, options?: VaultsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Vault>, Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: vault
          type: <xref uid="@azure/arm-recoveryservices.PatchVault" />
          description: Recovery Services Vault to be created.
        - id: options
          type: >-
            <xref uid="@azure/arm-recoveryservices.VaultsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-recoveryservices.Vault" />&gt;, <xref
          uid="@azure/arm-recoveryservices.Vault" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, PatchVault, VaultsUpdateOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.beginUpdateAndWait'
    package: '@azure/arm-recoveryservices'
    summary: Updates the vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, vaultName:
        string, vault: PatchVault, options?: VaultsUpdateOptionalParams):
        Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: vault
          type: <xref uid="@azure/arm-recoveryservices.PatchVault" />
          description: Recovery Services Vault to be created.
        - id: options
          type: >-
            <xref uid="@azure/arm-recoveryservices.VaultsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-recoveryservices.Vault" />&gt;
  - name: get(string, string, VaultsGetOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.get'
    package: '@azure/arm-recoveryservices'
    summary: Get the Vault details.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?:
        VaultsGetOptionalParams): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The name of the recovery services vault.
        - id: options
          type: <xref uid="@azure/arm-recoveryservices.VaultsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-recoveryservices.Vault" />&gt;
  - name: listByResourceGroup(string, VaultsListByResourceGroupOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.listByResourceGroup'
    package: '@azure/arm-recoveryservices'
    summary: Retrieve a list of Vaults.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        VaultsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Vault, Vault[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservices.VaultsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-recoveryservices.Vault" />, <xref
          uid="@azure/arm-recoveryservices.Vault" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscriptionId(VaultsListBySubscriptionIdOptionalParams)
    uid: '@azure/arm-recoveryservices.Vaults.listBySubscriptionId'
    package: '@azure/arm-recoveryservices'
    summary: Fetches all the resources of the specified type in the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        VaultsListBySubscriptionIdOptionalParams):
        PagedAsyncIterableIterator<Vault, Vault[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservices.VaultsListBySubscriptionIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-recoveryservices.Vault" />, <xref
          uid="@azure/arm-recoveryservices.Vault" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
