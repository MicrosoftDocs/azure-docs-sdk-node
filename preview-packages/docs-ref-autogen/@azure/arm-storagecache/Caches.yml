### YamlMime:TSType
name: Caches
uid: '@azure/arm-storagecache.Caches'
package: '@azure/arm-storagecache'
summary: Interface representing a Caches.
fullName: Caches
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Cache,
      CachesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginCreateOrUpdate'
    package: '@azure/arm-storagecache'
    summary: Create or update a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, cache: Cache, options?: CachesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Cache>, Cache>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: cache
          type: <xref uid="@azure/arm-storagecache.Cache" />
          description: >-
            Object containing the user-selectable properties of the new cache.
            If read-only
                         properties are included, they must match the existing values of those properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.Cache" />&gt;, <xref
          uid="@azure/arm-storagecache.Cache" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Cache,
      CachesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginCreateOrUpdateAndWait'
    package: '@azure/arm-storagecache'
    summary: Create or update a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        cacheName: string, cache: Cache, options?:
        CachesCreateOrUpdateOptionalParams): Promise<Cache>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: cache
          type: <xref uid="@azure/arm-storagecache.Cache" />
          description: >-
            Object containing the user-selectable properties of the new cache.
            If read-only
                         properties are included, they must match the existing values of those properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
  - name: beginDebugInfo(string, string, CachesDebugInfoOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginDebugInfo'
    package: '@azure/arm-storagecache'
    summary: Tells a cache to write generate debug info for support to process.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDebugInfo(resourceGroupName: string, cacheName: string,
        options?: CachesDebugInfoOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDebugInfoOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDebugInfoAndWait(string, string, CachesDebugInfoOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginDebugInfoAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a cache to write generate debug info for support to process.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDebugInfoAndWait(resourceGroupName: string, cacheName:
        string, options?: CachesDebugInfoOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDebugInfoOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginDelete(string, string, CachesDeleteOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginDelete'
    package: '@azure/arm-storagecache'
    summary: Schedules a cache for deletion.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, cacheName: string,
        options?: CachesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, CachesDeleteOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginDeleteAndWait'
    package: '@azure/arm-storagecache'
    summary: Schedules a cache for deletion.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, cacheName:
        string, options?: CachesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginFlush(string, string, CachesFlushOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginFlush'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a cache to write all dirty data to the Storage Target(s). During the
      flush, clients will see

      errors returned until the flush is complete.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(resourceGroupName: string, cacheName: string,
        options?: CachesFlushOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesFlushOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginFlushAndWait(string, string, CachesFlushOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginFlushAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells a cache to write all dirty data to the Storage Target(s). During the
      flush, clients will see

      errors returned until the flush is complete.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesFlushOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesFlushOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginPausePrimingJob(string, string, CachesPausePrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginPausePrimingJob'
    package: '@azure/arm-storagecache'
    summary: Schedule a priming job to be paused.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPausePrimingJob(resourceGroupName: string, cacheName:
        string, options?: CachesPausePrimingJobOptionalParams):
        Promise<SimplePollerLike<OperationState<CachesPausePrimingJobHeaders>,
        CachesPausePrimingJobHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesPausePrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.CachesPausePrimingJobHeaders" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesPausePrimingJobHeaders"
          />&gt;&gt;
  - name: >-
      beginPausePrimingJobAndWait(string, string,
      CachesPausePrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginPausePrimingJobAndWait'
    package: '@azure/arm-storagecache'
    summary: Schedule a priming job to be paused.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPausePrimingJobAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesPausePrimingJobOptionalParams):
        Promise<CachesPausePrimingJobHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesPausePrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesPausePrimingJobHeaders" />&gt;
  - name: >-
      beginResumePrimingJob(string, string,
      CachesResumePrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginResumePrimingJob'
    package: '@azure/arm-storagecache'
    summary: Resumes a paused priming job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginResumePrimingJob(resourceGroupName: string, cacheName:
        string, options?: CachesResumePrimingJobOptionalParams):
        Promise<SimplePollerLike<OperationState<CachesResumePrimingJobHeaders>,
        CachesResumePrimingJobHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesResumePrimingJobOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.CachesResumePrimingJobHeaders" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesResumePrimingJobHeaders"
          />&gt;&gt;
  - name: >-
      beginResumePrimingJobAndWait(string, string,
      CachesResumePrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginResumePrimingJobAndWait'
    package: '@azure/arm-storagecache'
    summary: Resumes a paused priming job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginResumePrimingJobAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesResumePrimingJobOptionalParams):
        Promise<CachesResumePrimingJobHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesResumePrimingJobOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesResumePrimingJobHeaders" />&gt;
  - name: beginSpaceAllocation(string, string, CachesSpaceAllocationOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginSpaceAllocation'
    package: '@azure/arm-storagecache'
    summary: Update cache space allocation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSpaceAllocation(resourceGroupName: string, cacheName:
        string, options?: CachesSpaceAllocationOptionalParams):
        Promise<SimplePollerLike<OperationState<CachesSpaceAllocationHeaders>,
        CachesSpaceAllocationHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesSpaceAllocationOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.CachesSpaceAllocationHeaders" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesSpaceAllocationHeaders"
          />&gt;&gt;
  - name: >-
      beginSpaceAllocationAndWait(string, string,
      CachesSpaceAllocationOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginSpaceAllocationAndWait'
    package: '@azure/arm-storagecache'
    summary: Update cache space allocation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSpaceAllocationAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesSpaceAllocationOptionalParams):
        Promise<CachesSpaceAllocationHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesSpaceAllocationOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesSpaceAllocationHeaders" />&gt;
  - name: beginStart(string, string, CachesStartOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStart'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state cache to transition to Active state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, cacheName: string,
        options?: CachesStartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStartAndWait(string, string, CachesStartOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStartAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a Stopped state cache to transition to Active state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStartPrimingJob(string, string, CachesStartPrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStartPrimingJob'
    package: '@azure/arm-storagecache'
    summary: >-
      Create a priming job. This operation is only allowed when the cache is
      healthy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartPrimingJob(resourceGroupName: string, cacheName:
        string, options?: CachesStartPrimingJobOptionalParams):
        Promise<SimplePollerLike<OperationState<CachesStartPrimingJobHeaders>,
        CachesStartPrimingJobHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesStartPrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.CachesStartPrimingJobHeaders" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesStartPrimingJobHeaders"
          />&gt;&gt;
  - name: >-
      beginStartPrimingJobAndWait(string, string,
      CachesStartPrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStartPrimingJobAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Create a priming job. This operation is only allowed when the cache is
      healthy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartPrimingJobAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesStartPrimingJobOptionalParams):
        Promise<CachesStartPrimingJobHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesStartPrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesStartPrimingJobHeaders" />&gt;
  - name: beginStop(string, string, CachesStopOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStop'
    package: '@azure/arm-storagecache'
    summary: Tells an Active cache to transition to Stopped state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, cacheName: string,
        options?: CachesStopOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStopAndWait(string, string, CachesStopOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStopAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells an Active cache to transition to Stopped state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, cacheName: string,
        options?: CachesStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStopPrimingJob(string, string, CachesStopPrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStopPrimingJob'
    package: '@azure/arm-storagecache'
    summary: Schedule a priming job for deletion.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStopPrimingJob(resourceGroupName: string, cacheName:
        string, options?: CachesStopPrimingJobOptionalParams):
        Promise<SimplePollerLike<OperationState<CachesStopPrimingJobHeaders>,
        CachesStopPrimingJobHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesStopPrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.CachesStopPrimingJobHeaders" />&gt;,
          <xref uid="@azure/arm-storagecache.CachesStopPrimingJobHeaders"
          />&gt;&gt;
  - name: >-
      beginStopPrimingJobAndWait(string, string,
      CachesStopPrimingJobOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginStopPrimingJobAndWait'
    package: '@azure/arm-storagecache'
    summary: Schedule a priming job for deletion.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStopPrimingJobAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesStopPrimingJobOptionalParams):
        Promise<CachesStopPrimingJobHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesStopPrimingJobOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagecache.CachesStopPrimingJobHeaders" />&gt;
  - name: beginUpdate(string, string, CachesUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginUpdate'
    package: '@azure/arm-storagecache'
    summary: Update a cache instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, cacheName: string,
        options?: CachesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Cache>, Cache>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-storagecache.Cache" />&gt;, <xref
          uid="@azure/arm-storagecache.Cache" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, CachesUpdateOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginUpdateAndWait'
    package: '@azure/arm-storagecache'
    summary: Update a cache instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, cacheName:
        string, options?: CachesUpdateOptionalParams): Promise<Cache>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
  - name: beginUpgradeFirmware(string, string, CachesUpgradeFirmwareOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginUpgradeFirmware'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a cache's firmware if a new version is available. Otherwise, this
      operation has no effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeFirmware(resourceGroupName: string, cacheName:
        string, options?: CachesUpgradeFirmwareOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesUpgradeFirmwareOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginUpgradeFirmwareAndWait(string, string,
      CachesUpgradeFirmwareOptionalParams)
    uid: '@azure/arm-storagecache.Caches.beginUpgradeFirmwareAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Upgrade a cache's firmware if a new version is available. Otherwise, this
      operation has no effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeFirmwareAndWait(resourceGroupName: string,
        cacheName: string, options?: CachesUpgradeFirmwareOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesUpgradeFirmwareOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, CachesGetOptionalParams)
    uid: '@azure/arm-storagecache.Caches.get'
    package: '@azure/arm-storagecache'
    summary: Returns a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string, options?:
        CachesGetOptionalParams): Promise<Cache>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-storagecache.Cache" />&gt;
  - name: list(CachesListOptionalParams)
    uid: '@azure/arm-storagecache.Caches.list'
    package: '@azure/arm-storagecache'
    summary: Returns all caches the user has access to under a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: CachesListOptionalParams):
        PagedAsyncIterableIterator<Cache, Cache[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-storagecache.CachesListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-storagecache.Cache" />, <xref
          uid="@azure/arm-storagecache.Cache" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, CachesListByResourceGroupOptionalParams)
    uid: '@azure/arm-storagecache.Caches.listByResourceGroup'
    package: '@azure/arm-storagecache'
    summary: Returns all caches the user has access to under a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        CachesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Cache, Cache[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.CachesListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-storagecache.Cache" />, <xref
          uid="@azure/arm-storagecache.Cache" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
