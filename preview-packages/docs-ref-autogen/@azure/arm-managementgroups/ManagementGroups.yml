### YamlMime:TSType
name: ManagementGroups
uid: '@azure/arm-managementgroups.ManagementGroups'
package: '@azure/arm-managementgroups'
summary: Interface representing a ManagementGroups.
fullName: ManagementGroups
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, CreateManagementGroupRequest,
      ManagementGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.beginCreateOrUpdate'
    package: '@azure/arm-managementgroups'
    summary: >-
      Create or update a management group.

      If a management group is already created and a subsequent create request
      is issued with different

      properties, the management group properties will be updated.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(groupId: string,
        createManagementGroupRequest: CreateManagementGroupRequest, options?:
        ManagementGroupsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ManagementGroup>,
        ManagementGroup>>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: createManagementGroupRequest
          type: >-
            <xref uid="@azure/arm-managementgroups.CreateManagementGroupRequest"
            />
          description: Management group creation parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-managementgroups.ManagementGroup" />&gt;, <xref
          uid="@azure/arm-managementgroups.ManagementGroup" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, CreateManagementGroupRequest,
      ManagementGroupsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.beginCreateOrUpdateAndWait'
    package: '@azure/arm-managementgroups'
    summary: >-
      Create or update a management group.

      If a management group is already created and a subsequent create request
      is issued with different

      properties, the management group properties will be updated.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(groupId: string,
        createManagementGroupRequest: CreateManagementGroupRequest, options?:
        ManagementGroupsCreateOrUpdateOptionalParams): Promise<ManagementGroup>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: createManagementGroupRequest
          type: >-
            <xref uid="@azure/arm-managementgroups.CreateManagementGroupRequest"
            />
          description: Management group creation parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-managementgroups.ManagementGroup"
          />&gt;
  - name: beginDelete(string, ManagementGroupsDeleteOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.beginDelete'
    package: '@azure/arm-managementgroups'
    summary: |-
      Delete management group.
      If a management group contains child resources, the request will fail.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(groupId: string, options?:
        ManagementGroupsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<ManagementGroupsDeleteResponse>,
        ManagementGroupsDeleteResponse>>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-managementgroups.ManagementGroupsDeleteResponse"
          />&gt;, <xref
          uid="@azure/arm-managementgroups.ManagementGroupsDeleteResponse"
          />&gt;&gt;
  - name: beginDeleteAndWait(string, ManagementGroupsDeleteOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.beginDeleteAndWait'
    package: '@azure/arm-managementgroups'
    summary: |-
      Delete management group.
      If a management group contains child resources, the request will fail.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(groupId: string, options?:
        ManagementGroupsDeleteOptionalParams):
        Promise<ManagementGroupsDeleteResponse>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-managementgroups.ManagementGroupsDeleteResponse"
          />&gt;
  - name: get(string, ManagementGroupsGetOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.get'
    package: '@azure/arm-managementgroups'
    summary: Get the details of the management group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(groupId: string, options?:
        ManagementGroupsGetOptionalParams): Promise<ManagementGroup>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-managementgroups.ManagementGroup"
          />&gt;
  - name: list(ManagementGroupsListOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.list'
    package: '@azure/arm-managementgroups'
    summary: List management groups for the authenticated user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ManagementGroupsListOptionalParams):
        PagedAsyncIterableIterator<ManagementGroupInfo, ManagementGroupInfo[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-managementgroups.ManagementGroupInfo" />, <xref
          uid="@azure/arm-managementgroups.ManagementGroupInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listDescendants(string, ManagementGroupsGetDescendantsOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.listDescendants'
    package: '@azure/arm-managementgroups'
    summary: List all entities that descend from a management group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listDescendants(groupId: string, options?:
        ManagementGroupsGetDescendantsOptionalParams):
        PagedAsyncIterableIterator<DescendantInfo, DescendantInfo[],
        PageSettings>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsGetDescendantsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-managementgroups.DescendantInfo" />, <xref
          uid="@azure/arm-managementgroups.DescendantInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, PatchManagementGroupRequest,
      ManagementGroupsUpdateOptionalParams)
    uid: '@azure/arm-managementgroups.ManagementGroups.update'
    package: '@azure/arm-managementgroups'
    summary: Update a management group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(groupId: string, patchGroupRequest:
        PatchManagementGroupRequest, options?:
        ManagementGroupsUpdateOptionalParams): Promise<ManagementGroup>
      parameters:
        - id: groupId
          type: string
          description: Management Group ID.
        - id: patchGroupRequest
          type: >-
            <xref uid="@azure/arm-managementgroups.PatchManagementGroupRequest"
            />
          description: Management group patch parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-managementgroups.ManagementGroupsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-managementgroups.ManagementGroup"
          />&gt;
