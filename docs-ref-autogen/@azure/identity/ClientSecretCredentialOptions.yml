### YamlMime:TSType
name: ClientSecretCredentialOptions
uid: '@azure/identity.ClientSecretCredentialOptions'
package: '@azure/identity'
summary: >-
  Optional parameters for the
  [ClientSecretCredential](xref:@azure/identity.ClientSecretCredential) class.
fullName: ClientSecretCredentialOptions
remarks: ''
isDeprecated: false
type: interface
inheritedProperties:
  - name: additionallyAllowedTenants
    uid: '@azure/identity.ClientSecretCredentialOptions.additionallyAllowedTenants'
    package: '@azure/identity'
    summary: >-
      For multi-tenant applications, specifies additional tenants for which the
      credential may acquire tokens.

      Add the wildcard value "*" to allow the credential to acquire tokens for
      any tenant the application is installed.
    fullName: additionallyAllowedTenants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'additionallyAllowedTenants?: string[]'
      return:
        description: ''
        type: string[]
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.additionallyAllowedTenants](xref:@azure/identity.MultiTenantTokenCredentialOptions.additionallyAllowedTenants)
  - name: additionalPolicies
    uid: '@azure/identity.ClientSecretCredentialOptions.additionalPolicies'
    package: '@azure/identity'
    summary: Additional policies to include in the HTTP pipeline.
    fullName: additionalPolicies
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'additionalPolicies?: AdditionalPolicyConfig[]'
      return:
        description: ''
        type: <xref uid="@azure/core-client.AdditionalPolicyConfig" />[]
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.additionalPolicies](xref:@azure/identity.MultiTenantTokenCredentialOptions.additionalPolicies)
  - name: agent
    uid: '@azure/identity.ClientSecretCredentialOptions.agent'
    package: '@azure/identity'
    summary: Options for configuring Agent instance for outgoing requests
    fullName: agent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'agent?: Agent'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.Agent" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.agent](xref:@azure/identity.MultiTenantTokenCredentialOptions.agent)
  - name: allowInsecureConnection
    uid: '@azure/identity.ClientSecretCredentialOptions.allowInsecureConnection'
    package: '@azure/identity'
    summary: Set to true if the request is sent over HTTP instead of HTTPS
    fullName: allowInsecureConnection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'allowInsecureConnection?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.allowInsecureConnection](xref:@azure/identity.MultiTenantTokenCredentialOptions.allowInsecureConnection)
  - name: authorityHost
    uid: '@azure/identity.ClientSecretCredentialOptions.authorityHost'
    package: '@azure/identity'
    summary: >-
      The authority host to use for authentication requests.

      Possible values are available through
      [AzureAuthorityHosts](xref:@azure/identity.AzureAuthorityHosts).

      The default is "https://login.microsoftonline.com".
    fullName: authorityHost
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'authorityHost?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.authorityHost](xref:@azure/identity.MultiTenantTokenCredentialOptions.authorityHost)
  - name: disableInstanceDiscovery
    uid: '@azure/identity.ClientSecretCredentialOptions.disableInstanceDiscovery'
    package: '@azure/identity'
    summary: >-
      The field determines whether instance discovery is performed when
      attempting to authenticate.

      Setting this to `true` will completely disable both instance discovery and
      authority validation.

      As a result, it's crucial to ensure that the configured authority host is
      valid and trustworthy.

      This functionality is intended for use in scenarios where the metadata
      endpoint cannot be reached, such as in private clouds or Azure Stack.

      The process of instance discovery entails retrieving authority metadata
      from https://login.microsoft.com/ to validate the authority.
    fullName: disableInstanceDiscovery
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disableInstanceDiscovery?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AuthorityValidationOptions.disableInstanceDiscovery](xref:@azure/identity.AuthorityValidationOptions.disableInstanceDiscovery)
  - name: httpClient
    uid: '@azure/identity.ClientSecretCredentialOptions.httpClient'
    package: '@azure/identity'
    summary: The HttpClient that will be used to send HTTP requests.
    fullName: httpClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.HttpClient" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.httpClient](xref:@azure/identity.MultiTenantTokenCredentialOptions.httpClient)
  - name: loggingOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.loggingOptions'
    package: '@azure/identity'
    summary: >-
      Allows users to configure settings for logging policy options, allow
      logging account information and personally identifiable information for
      customer support.
    fullName: loggingOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        loggingOptions?: LogPolicyOptions & { allowLoggingAccountIdentifiers?:
        boolean, enableUnsafeSupportLogging?: boolean }
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-rest-pipeline.LogPolicyOptions" /> & {
          allowLoggingAccountIdentifiers?: boolean, enableUnsafeSupportLogging?:
          boolean }
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.loggingOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.loggingOptions)
  - name: proxyOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.proxyOptions'
    package: '@azure/identity'
    summary: Options to configure a proxy for outgoing requests.
    fullName: proxyOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'proxyOptions?: ProxySettings'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.ProxySettings" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.proxyOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.proxyOptions)
  - name: redirectOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.redirectOptions'
    package: '@azure/identity'
    summary: Options for how redirect responses are handled.
    fullName: redirectOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'redirectOptions?: RedirectPolicyOptions'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.RedirectPolicyOptions" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.redirectOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.redirectOptions)
  - name: retryOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.retryOptions'
    package: '@azure/identity'
    summary: Options that control how to retry failed requests.
    fullName: retryOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryOptions?: PipelineRetryOptions'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelineRetryOptions" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.retryOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.retryOptions)
  - name: telemetryOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.telemetryOptions'
    package: '@azure/identity'
    summary: >-
      Options for setting common telemetry and tracing info to outgoing
      requests.
    fullName: telemetryOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'telemetryOptions?: TelemetryOptions'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.TelemetryOptions" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.telemetryOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.telemetryOptions)
  - name: tlsOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.tlsOptions'
    package: '@azure/identity'
    summary: Options for configuring TLS authentication
    fullName: tlsOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tlsOptions?: TlsSettings'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.TlsSettings" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.tlsOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.tlsOptions)
  - name: tokenCachePersistenceOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.tokenCachePersistenceOptions'
    package: '@azure/identity'
    summary: |-
      Options to provide to the persistence layer (if one is available) when
      storing credentials.

      You must first register a persistence provider plugin. See the
      `@azure/identity-cache-persistence` package on NPM.

      Example:

      ```ts snippet:credential_persistence_options_example
      import { useIdentityPlugin, DeviceCodeCredential } from "@azure/identity";

      useIdentityPlugin(cachePersistencePlugin);

      const credential = new DeviceCodeCredential({
        tokenCachePersistenceOptions: {
          enabled: true,
        },
      });
      ```
    fullName: tokenCachePersistenceOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tokenCachePersistenceOptions?: TokenCachePersistenceOptions'
      return:
        description: ''
        type: <xref uid="@azure/identity.TokenCachePersistenceOptions" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CredentialPersistenceOptions.tokenCachePersistenceOptions](xref:@azure/identity.CredentialPersistenceOptions.tokenCachePersistenceOptions)
  - name: userAgentOptions
    uid: '@azure/identity.ClientSecretCredentialOptions.userAgentOptions'
    package: '@azure/identity'
    summary: Options for adding user agent details to outgoing requests.
    fullName: userAgentOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userAgentOptions?: UserAgentPolicyOptions'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.UserAgentPolicyOptions" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [MultiTenantTokenCredentialOptions.userAgentOptions](xref:@azure/identity.MultiTenantTokenCredentialOptions.userAgentOptions)
extends: >-
  <xref uid="@azure/identity.MultiTenantTokenCredentialOptions" />,<xref
  uid="@azure/identity.CredentialPersistenceOptions" />,<xref
  uid="@azure/identity.AuthorityValidationOptions" />
