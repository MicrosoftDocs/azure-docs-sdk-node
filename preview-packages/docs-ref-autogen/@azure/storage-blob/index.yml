### YamlMime:TSPackage
uid: '@azure/storage-blob'
name: '@azure/storage-blob'
summary: ''
type: package
enums:
  - '@azure/storage-blob.BlockBlobTier'
  - '@azure/storage-blob.KnownEncryptionAlgorithmType'
  - '@azure/storage-blob.PremiumPageBlobTier'
  - '@azure/storage-blob.SASProtocol'
  - '@azure/storage-blob.StorageBlobAudience'
  - '@azure/storage-blob.StorageRetryPolicyType'
classes:
  - '@azure/storage-blob.AccountSASPermissions'
  - '@azure/storage-blob.AccountSASResourceTypes'
  - '@azure/storage-blob.AccountSASServices'
  - '@azure/storage-blob.AnonymousCredential'
  - '@azure/storage-blob.AnonymousCredentialPolicy'
  - '@azure/storage-blob.AppendBlobClient'
  - '@azure/storage-blob.BaseRequestPolicy'
  - '@azure/storage-blob.BlobBatch'
  - '@azure/storage-blob.BlobBatchClient'
  - '@azure/storage-blob.BlobClient'
  - '@azure/storage-blob.BlobLeaseClient'
  - '@azure/storage-blob.BlobSASPermissions'
  - '@azure/storage-blob.BlobServiceClient'
  - '@azure/storage-blob.BlockBlobClient'
  - '@azure/storage-blob.ContainerClient'
  - '@azure/storage-blob.ContainerSASPermissions'
  - '@azure/storage-blob.Credential'
  - '@azure/storage-blob.CredentialPolicy'
  - '@azure/storage-blob.PageBlobClient'
  - '@azure/storage-blob.Pipeline'
  - '@azure/storage-blob.SASQueryParameters'
  - '@azure/storage-blob.StorageBrowserPolicy'
  - '@azure/storage-blob.StorageBrowserPolicyFactory'
  - '@azure/storage-blob.StorageRetryPolicy'
  - '@azure/storage-blob.StorageRetryPolicyFactory'
  - '@azure/storage-blob.StorageSharedKeyCredential'
  - '@azure/storage-blob.StorageSharedKeyCredentialPolicy'
interfaces:
  - '@azure/storage-blob.AccessPolicy'
  - '@azure/storage-blob.AccountSASPermissionsLike'
  - '@azure/storage-blob.AccountSASSignatureValues'
  - '@azure/storage-blob.AppendBlobAppendBlockFromURLOptions'
  - '@azure/storage-blob.AppendBlobAppendBlockFromUrlHeaders'
  - '@azure/storage-blob.AppendBlobAppendBlockHeaders'
  - '@azure/storage-blob.AppendBlobAppendBlockOptions'
  - '@azure/storage-blob.AppendBlobCreateHeaders'
  - '@azure/storage-blob.AppendBlobCreateIfNotExistsOptions'
  - '@azure/storage-blob.AppendBlobCreateIfNotExistsResponse'
  - '@azure/storage-blob.AppendBlobCreateOptions'
  - '@azure/storage-blob.AppendBlobRequestConditions'
  - '@azure/storage-blob.AppendBlobSealOptions'
  - '@azure/storage-blob.AppendPositionAccessConditions'
  - '@azure/storage-blob.BatchSubRequest'
  - '@azure/storage-blob.BatchSubResponse'
  - '@azure/storage-blob.BlobAbortCopyFromURLHeaders'
  - '@azure/storage-blob.BlobAbortCopyFromURLOptions'
  - '@azure/storage-blob.BlobAcquireLeaseOptions'
  - '@azure/storage-blob.BlobBatchSubmitBatchOptionalParams'
  - '@azure/storage-blob.BlobBeginCopyFromURLOptions'
  - '@azure/storage-blob.BlobBeginCopyFromURLResponse'
  - '@azure/storage-blob.BlobBeginCopyFromUrlPollState'
  - '@azure/storage-blob.BlobBreakLeaseOptions'
  - '@azure/storage-blob.BlobChangeLeaseOptions'
  - '@azure/storage-blob.BlobCopyFromURLHeaders'
  - '@azure/storage-blob.BlobCreateSnapshotHeaders'
  - '@azure/storage-blob.BlobCreateSnapshotOptions'
  - '@azure/storage-blob.BlobDeleteHeaders'
  - '@azure/storage-blob.BlobDeleteIfExistsResponse'
  - '@azure/storage-blob.BlobDeleteImmutabilityPolicyHeaders'
  - '@azure/storage-blob.BlobDeleteImmutabilityPolicyOptions'
  - '@azure/storage-blob.BlobDeleteOptions'
  - '@azure/storage-blob.BlobDownloadHeaders'
  - '@azure/storage-blob.BlobDownloadOptionalParams'
  - '@azure/storage-blob.BlobDownloadOptions'
  - '@azure/storage-blob.BlobDownloadResponseParsed'
  - '@azure/storage-blob.BlobDownloadToBufferOptions'
  - '@azure/storage-blob.BlobExistsOptions'
  - '@azure/storage-blob.BlobFlatListSegment'
  - '@azure/storage-blob.BlobFlatListSegmentModel'
  - '@azure/storage-blob.BlobGenerateSasUrlOptions'
  - '@azure/storage-blob.BlobGetAccountInfoHeaders'
  - '@azure/storage-blob.BlobGetAccountInfoOptions'
  - '@azure/storage-blob.BlobGetPropertiesHeaders'
  - '@azure/storage-blob.BlobGetPropertiesOptions'
  - '@azure/storage-blob.BlobGetPropertiesResponse'
  - '@azure/storage-blob.BlobGetTagsHeaders'
  - '@azure/storage-blob.BlobGetTagsOptions'
  - '@azure/storage-blob.BlobHTTPHeaders'
  - '@azure/storage-blob.BlobHierarchyListSegment'
  - '@azure/storage-blob.BlobHierarchyListSegmentModel'
  - '@azure/storage-blob.BlobImmutabilityPolicy'
  - '@azure/storage-blob.BlobItem'
  - '@azure/storage-blob.BlobItemInternal'
  - '@azure/storage-blob.BlobPrefix'
  - '@azure/storage-blob.BlobProperties'
  - '@azure/storage-blob.BlobQueryArrowConfiguration'
  - '@azure/storage-blob.BlobQueryArrowField'
  - '@azure/storage-blob.BlobQueryCsvTextConfiguration'
  - '@azure/storage-blob.BlobQueryError'
  - '@azure/storage-blob.BlobQueryHeaders'
  - '@azure/storage-blob.BlobQueryJsonTextConfiguration'
  - '@azure/storage-blob.BlobQueryParquetConfiguration'
  - '@azure/storage-blob.BlobReleaseLeaseOptions'
  - '@azure/storage-blob.BlobRenewLeaseOptions'
  - '@azure/storage-blob.BlobRequestConditions'
  - '@azure/storage-blob.BlobSASPermissionsLike'
  - '@azure/storage-blob.BlobSASSignatureValues'
  - '@azure/storage-blob.BlobServiceProperties'
  - '@azure/storage-blob.BlobServiceStatistics'
  - '@azure/storage-blob.BlobSetHTTPHeadersHeaders'
  - '@azure/storage-blob.BlobSetHTTPHeadersOptions'
  - '@azure/storage-blob.BlobSetImmutabilityPolicyHeaders'
  - '@azure/storage-blob.BlobSetImmutabilityPolicyOptions'
  - '@azure/storage-blob.BlobSetLegalHoldHeaders'
  - '@azure/storage-blob.BlobSetLegalHoldOptions'
  - '@azure/storage-blob.BlobSetMetadataHeaders'
  - '@azure/storage-blob.BlobSetMetadataOptions'
  - '@azure/storage-blob.BlobSetTagsHeaders'
  - '@azure/storage-blob.BlobSetTagsOptions'
  - '@azure/storage-blob.BlobSetTierHeaders'
  - '@azure/storage-blob.BlobSetTierOptions'
  - '@azure/storage-blob.BlobStartCopyFromURLHeaders'
  - '@azure/storage-blob.BlobStartCopyFromURLOptions'
  - '@azure/storage-blob.BlobSyncCopyFromURLOptions'
  - '@azure/storage-blob.BlobTag'
  - '@azure/storage-blob.BlobTags'
  - '@azure/storage-blob.BlobUndeleteHeaders'
  - '@azure/storage-blob.BlobUndeleteOptions'
  - '@azure/storage-blob.Block'
  - '@azure/storage-blob.BlockBlobCommitBlockListHeaders'
  - '@azure/storage-blob.BlockBlobCommitBlockListOptions'
  - '@azure/storage-blob.BlockBlobGetBlockListHeaders'
  - '@azure/storage-blob.BlockBlobGetBlockListOptions'
  - '@azure/storage-blob.BlockBlobParallelUploadOptions'
  - '@azure/storage-blob.BlockBlobPutBlobFromUrlHeaders'
  - '@azure/storage-blob.BlockBlobQueryOptions'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLHeaders'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLOptions'
  - '@azure/storage-blob.BlockBlobStageBlockHeaders'
  - '@azure/storage-blob.BlockBlobStageBlockOptions'
  - '@azure/storage-blob.BlockBlobSyncUploadFromURLOptions'
  - '@azure/storage-blob.BlockBlobUploadHeaders'
  - '@azure/storage-blob.BlockBlobUploadOptions'
  - '@azure/storage-blob.BlockBlobUploadStreamOptions'
  - '@azure/storage-blob.BlockList'
  - '@azure/storage-blob.ClearRange'
  - '@azure/storage-blob.CommonGenerateSasUrlOptions'
  - '@azure/storage-blob.CommonOptions'
  - '@azure/storage-blob.ContainerAcquireLeaseOptions'
  - '@azure/storage-blob.ContainerBreakLeaseOptionalParams'
  - '@azure/storage-blob.ContainerBreakLeaseOptions'
  - '@azure/storage-blob.ContainerChangeLeaseOptions'
  - '@azure/storage-blob.ContainerCreateHeaders'
  - '@azure/storage-blob.ContainerCreateIfNotExistsResponse'
  - '@azure/storage-blob.ContainerCreateOptions'
  - '@azure/storage-blob.ContainerDeleteBlobOptions'
  - '@azure/storage-blob.ContainerDeleteHeaders'
  - '@azure/storage-blob.ContainerDeleteIfExistsResponse'
  - '@azure/storage-blob.ContainerDeleteMethodOptions'
  - '@azure/storage-blob.ContainerEncryptionScope'
  - '@azure/storage-blob.ContainerExistsOptions'
  - '@azure/storage-blob.ContainerFilterBlobsHeaders'
  - '@azure/storage-blob.ContainerFindBlobByTagsOptions'
  - '@azure/storage-blob.ContainerGenerateSasUrlOptions'
  - '@azure/storage-blob.ContainerGetAccessPolicyHeaders'
  - '@azure/storage-blob.ContainerGetAccessPolicyOptions'
  - '@azure/storage-blob.ContainerGetAccountInfoHeaders'
  - '@azure/storage-blob.ContainerGetAccountInfoOptions'
  - '@azure/storage-blob.ContainerGetPropertiesHeaders'
  - '@azure/storage-blob.ContainerGetPropertiesOptions'
  - '@azure/storage-blob.ContainerItem'
  - '@azure/storage-blob.ContainerListBlobFlatSegmentHeaders'
  - '@azure/storage-blob.ContainerListBlobHierarchySegmentHeaders'
  - '@azure/storage-blob.ContainerListBlobsOptions'
  - '@azure/storage-blob.ContainerProperties'
  - '@azure/storage-blob.ContainerReleaseLeaseOptions'
  - '@azure/storage-blob.ContainerRenameHeaders'
  - '@azure/storage-blob.ContainerRenewLeaseOptions'
  - '@azure/storage-blob.ContainerRequestConditions'
  - '@azure/storage-blob.ContainerSASPermissionsLike'
  - '@azure/storage-blob.ContainerSetAccessPolicyHeaders'
  - '@azure/storage-blob.ContainerSetAccessPolicyOptions'
  - '@azure/storage-blob.ContainerSetMetadataHeaders'
  - '@azure/storage-blob.ContainerSetMetadataOptions'
  - '@azure/storage-blob.ContainerUndeleteHeaders'
  - '@azure/storage-blob.CorsRule'
  - '@azure/storage-blob.CpkInfo'
  - '@azure/storage-blob.FilterBlobItem'
  - '@azure/storage-blob.FilterBlobItemModel'
  - '@azure/storage-blob.FilterBlobSegment'
  - '@azure/storage-blob.FilterBlobSegmentModel'
  - '@azure/storage-blob.GeoReplication'
  - '@azure/storage-blob.HttpAuthorization'
  - '@azure/storage-blob.HttpHeaders'
  - '@azure/storage-blob.HttpOperationResponse'
  - '@azure/storage-blob.HttpResponse'
  - '@azure/storage-blob.Lease'
  - '@azure/storage-blob.LeaseAccessConditions'
  - '@azure/storage-blob.LeaseOperationOptions'
  - '@azure/storage-blob.ListBlobsFlatSegmentResponse'
  - '@azure/storage-blob.ListBlobsFlatSegmentResponseModel'
  - '@azure/storage-blob.ListBlobsHierarchySegmentResponse'
  - '@azure/storage-blob.ListBlobsHierarchySegmentResponseModel'
  - '@azure/storage-blob.ListContainersSegmentResponse'
  - '@azure/storage-blob.Logging'
  - '@azure/storage-blob.MatchConditions'
  - '@azure/storage-blob.Metadata'
  - '@azure/storage-blob.Metrics'
  - '@azure/storage-blob.ModificationConditions'
  - '@azure/storage-blob.ModifiedAccessConditions'
  - '@azure/storage-blob.ModifiedAccessConditionsModel'
  - '@azure/storage-blob.ObjectReplicationPolicy'
  - '@azure/storage-blob.ObjectReplicationRule'
  - '@azure/storage-blob.PageBlobClearPagesHeaders'
  - '@azure/storage-blob.PageBlobClearPagesOptions'
  - '@azure/storage-blob.PageBlobCopyIncrementalHeaders'
  - '@azure/storage-blob.PageBlobCreateHeaders'
  - '@azure/storage-blob.PageBlobCreateIfNotExistsOptions'
  - '@azure/storage-blob.PageBlobCreateIfNotExistsResponse'
  - '@azure/storage-blob.PageBlobCreateOptions'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffHeaders'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffOptions'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffResponse'
  - '@azure/storage-blob.PageBlobGetPageRangesHeaders'
  - '@azure/storage-blob.PageBlobGetPageRangesOptions'
  - '@azure/storage-blob.PageBlobGetPageRangesResponse'
  - '@azure/storage-blob.PageBlobListPageRangesDiffOptions'
  - '@azure/storage-blob.PageBlobListPageRangesOptions'
  - '@azure/storage-blob.PageBlobRequestConditions'
  - '@azure/storage-blob.PageBlobResizeHeaders'
  - '@azure/storage-blob.PageBlobResizeOptions'
  - '@azure/storage-blob.PageBlobStartCopyIncrementalOptions'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberHeaders'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberOptions'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLHeaders'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLOptions'
  - '@azure/storage-blob.PageBlobUploadPagesHeaders'
  - '@azure/storage-blob.PageBlobUploadPagesOptions'
  - '@azure/storage-blob.PageList'
  - '@azure/storage-blob.PageListInternal'
  - '@azure/storage-blob.PageRange'
  - '@azure/storage-blob.PageRangeInfo'
  - '@azure/storage-blob.ParsedBatchResponse'
  - '@azure/storage-blob.PipelineLike'
  - '@azure/storage-blob.PipelineOptions'
  - '@azure/storage-blob.PollOperationState'
  - '@azure/storage-blob.PollerLike'
  - '@azure/storage-blob.PollerLikeWithCancellation'
  - '@azure/storage-blob.Range'
  - '@azure/storage-blob.RequestPolicy'
  - '@azure/storage-blob.RequestPolicyFactory'
  - '@azure/storage-blob.RequestPolicyOptions'
  - '@azure/storage-blob.ResponseLike'
  - '@azure/storage-blob.ResponseWithBody'
  - '@azure/storage-blob.ResponseWithHeaders'
  - '@azure/storage-blob.RestError'
  - '@azure/storage-blob.RetentionPolicy'
  - '@azure/storage-blob.SASQueryParametersOptions'
  - '@azure/storage-blob.SasIPRange'
  - '@azure/storage-blob.SequenceNumberAccessConditions'
  - '@azure/storage-blob.ServiceClientOptions'
  - '@azure/storage-blob.ServiceFilterBlobsHeaders'
  - '@azure/storage-blob.ServiceFindBlobByTagsOptions'
  - '@azure/storage-blob.ServiceGenerateAccountSasUrlOptions'
  - '@azure/storage-blob.ServiceGetAccountInfoHeaders'
  - '@azure/storage-blob.ServiceGetAccountInfoOptions'
  - '@azure/storage-blob.ServiceGetPropertiesHeaders'
  - '@azure/storage-blob.ServiceGetPropertiesOptions'
  - '@azure/storage-blob.ServiceGetStatisticsHeaders'
  - '@azure/storage-blob.ServiceGetStatisticsOptions'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyHeaders'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyOptions'
  - '@azure/storage-blob.ServiceListContainersOptions'
  - '@azure/storage-blob.ServiceListContainersSegmentHeaders'
  - '@azure/storage-blob.ServiceRenameContainerOptions'
  - '@azure/storage-blob.ServiceSetPropertiesHeaders'
  - '@azure/storage-blob.ServiceSetPropertiesOptions'
  - '@azure/storage-blob.ServiceSubmitBatchHeaders'
  - '@azure/storage-blob.ServiceSubmitBatchOptionalParamsModel'
  - '@azure/storage-blob.ServiceUndeleteContainerOptions'
  - '@azure/storage-blob.SignedIdentifier'
  - '@azure/storage-blob.SignedIdentifierModel'
  - '@azure/storage-blob.StaticWebsite'
  - '@azure/storage-blob.StoragePipelineOptions'
  - '@azure/storage-blob.StorageRetryOptions'
  - '@azure/storage-blob.StorageSharedKeyCredentialPolicyOptions'
  - '@azure/storage-blob.TagConditions'
  - '@azure/storage-blob.UserDelegationKey'
  - '@azure/storage-blob.UserDelegationKeyModel'
  - '@azure/storage-blob.WebResource'
typeAliases:
  - '@azure/storage-blob.AccessTier'
  - '@azure/storage-blob.AccountKind'
  - '@azure/storage-blob.AppendBlobAppendBlockFromUrlResponse'
  - '@azure/storage-blob.AppendBlobAppendBlockResponse'
  - '@azure/storage-blob.AppendBlobCreateResponse'
  - '@azure/storage-blob.ArchiveStatus'
  - '@azure/storage-blob.BlobAbortCopyFromURLResponse'
  - '@azure/storage-blob.BlobBatchDeleteBlobsResponse'
  - '@azure/storage-blob.BlobBatchSetBlobsAccessTierResponse'
  - '@azure/storage-blob.BlobBatchSubmitBatchResponse'
  - '@azure/storage-blob.BlobCopyFromURLResponse'
  - '@azure/storage-blob.BlobCopySourceTags'
  - '@azure/storage-blob.BlobCreateSnapshotResponse'
  - '@azure/storage-blob.BlobDeleteImmutabilityPolicyResponse'
  - '@azure/storage-blob.BlobDeleteResponse'
  - '@azure/storage-blob.BlobDownloadResponseInternal'
  - '@azure/storage-blob.BlobDownloadResponseModel'
  - '@azure/storage-blob.BlobGetAccountInfoResponse'
  - '@azure/storage-blob.BlobGetPropertiesResponseModel'
  - '@azure/storage-blob.BlobGetTagsResponse'
  - '@azure/storage-blob.BlobImmutabilityPolicyMode'
  - '@azure/storage-blob.BlobQueryArrowFieldType'
  - '@azure/storage-blob.BlobQueryResponseInternal'
  - '@azure/storage-blob.BlobQueryResponseModel'
  - '@azure/storage-blob.BlobSetHTTPHeadersResponse'
  - '@azure/storage-blob.BlobSetImmutabilityPolicyResponse'
  - '@azure/storage-blob.BlobSetLegalHoldResponse'
  - '@azure/storage-blob.BlobSetMetadataResponse'
  - '@azure/storage-blob.BlobSetTagsResponse'
  - '@azure/storage-blob.BlobSetTierResponse'
  - '@azure/storage-blob.BlobStartCopyFromURLResponse'
  - '@azure/storage-blob.BlobType'
  - '@azure/storage-blob.BlobUndeleteResponse'
  - '@azure/storage-blob.BlobUploadCommonResponse'
  - '@azure/storage-blob.BlockBlobCommitBlockListResponse'
  - '@azure/storage-blob.BlockBlobGetBlockListResponse'
  - '@azure/storage-blob.BlockBlobGetBlockListResponseInternal'
  - '@azure/storage-blob.BlockBlobPutBlobFromUrlResponse'
  - '@azure/storage-blob.BlockBlobStageBlockFromURLResponse'
  - '@azure/storage-blob.BlockBlobStageBlockResponse'
  - '@azure/storage-blob.BlockBlobUploadResponse'
  - '@azure/storage-blob.BlockListType'
  - '@azure/storage-blob.ContainerCreateResponse'
  - '@azure/storage-blob.ContainerDeleteResponse'
  - '@azure/storage-blob.ContainerFilterBlobsResponse'
  - '@azure/storage-blob.ContainerFindBlobsByTagsSegmentResponse'
  - '@azure/storage-blob.ContainerGetAccessPolicyResponse'
  - '@azure/storage-blob.ContainerGetAccessPolicyResponseModel'
  - '@azure/storage-blob.ContainerGetAccountInfoResponse'
  - '@azure/storage-blob.ContainerGetPropertiesResponse'
  - '@azure/storage-blob.ContainerListBlobFlatSegmentResponse'
  - '@azure/storage-blob.ContainerListBlobHierarchySegmentResponse'
  - '@azure/storage-blob.ContainerRenameResponse'
  - '@azure/storage-blob.ContainerSetAccessPolicyResponse'
  - '@azure/storage-blob.ContainerSetMetadataResponse'
  - '@azure/storage-blob.ContainerUndeleteResponse'
  - '@azure/storage-blob.CopyPollerBlobClient'
  - '@azure/storage-blob.CopyStatusType'
  - '@azure/storage-blob.CredentialPolicyCreator'
  - '@azure/storage-blob.DeleteSnapshotsOptionType'
  - '@azure/storage-blob.EncryptionAlgorithmType'
  - '@azure/storage-blob.FileShareTokenIntent'
  - '@azure/storage-blob.GeoReplicationStatusType'
  - '@azure/storage-blob.HttpRequestBody'
  - '@azure/storage-blob.LeaseDurationType'
  - '@azure/storage-blob.LeaseOperationResponse'
  - '@azure/storage-blob.LeaseStateType'
  - '@azure/storage-blob.LeaseStatusType'
  - '@azure/storage-blob.ObjectReplicationStatus'
  - '@azure/storage-blob.PageBlobClearPagesResponse'
  - '@azure/storage-blob.PageBlobCopyIncrementalResponse'
  - '@azure/storage-blob.PageBlobCreateResponse'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffResponseInternal'
  - '@azure/storage-blob.PageBlobGetPageRangesDiffResponseModel'
  - '@azure/storage-blob.PageBlobGetPageRangesResponseInternal'
  - '@azure/storage-blob.PageBlobGetPageRangesResponseModel'
  - '@azure/storage-blob.PageBlobResizeResponse'
  - '@azure/storage-blob.PageBlobUpdateSequenceNumberResponse'
  - '@azure/storage-blob.PageBlobUploadPagesFromURLResponse'
  - '@azure/storage-blob.PageBlobUploadPagesResponse'
  - '@azure/storage-blob.PublicAccessType'
  - '@azure/storage-blob.RehydratePriority'
  - '@azure/storage-blob.SequenceNumberActionType'
  - '@azure/storage-blob.ServiceFindBlobsByTagsSegmentResponse'
  - '@azure/storage-blob.ServiceGetAccountInfoResponse'
  - '@azure/storage-blob.ServiceGetPropertiesResponse'
  - '@azure/storage-blob.ServiceGetPropertiesResponseInternal'
  - '@azure/storage-blob.ServiceGetStatisticsResponse'
  - '@azure/storage-blob.ServiceGetStatisticsResponseInternal'
  - '@azure/storage-blob.ServiceGetUserDelegationKeyResponse'
  - '@azure/storage-blob.ServiceListContainersSegmentResponse'
  - '@azure/storage-blob.ServiceListContainersSegmentResponseInternal'
  - '@azure/storage-blob.ServiceSetPropertiesResponse'
  - '@azure/storage-blob.ServiceSubmitBatchResponseInternal'
  - '@azure/storage-blob.ServiceSubmitBatchResponseModel'
  - '@azure/storage-blob.SkuName'
  - '@azure/storage-blob.SyncCopyStatusType'
  - '@azure/storage-blob.Tags'
  - '@azure/storage-blob.WithResponse'
functions:
  - name: NewRetryPolicyFactory(StorageRetryOptions)
    uid: '@azure/storage-blob.NewRetryPolicyFactory'
    package: '@azure/storage-blob'
    summary: A factory method used to generated a RetryPolicy factory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions):
        RequestPolicyFactory
      parameters:
        - id: retryOptions
          type: <xref uid="@azure/storage-blob.StorageRetryOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.RequestPolicyFactory" />
  - name: >-
      generateAccountSASQueryParameters(AccountSASSignatureValues,
      StorageSharedKeyCredential)
    uid: '@azure/storage-blob.generateAccountSASQueryParameters'
    package: '@azure/storage-blob'
    summary: >-
      ONLY AVAILABLE IN NODE.JS RUNTIME.


      Generates a
      [SASQueryParameters](xref:@azure/storage-blob.SASQueryParameters) object
      which contains all SAS query parameters needed to make an actual

      REST request.


      See
      https://learn.microsoft.com/rest/api/storageservices/constructing-an-account-sas
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateAccountSASQueryParameters(accountSASSignatureValues:
        AccountSASSignatureValues, sharedKeyCredential:
        StorageSharedKeyCredential): SASQueryParameters
      parameters:
        - id: accountSASSignatureValues
          type: <xref uid="@azure/storage-blob.AccountSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-blob.StorageSharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: >-
      generateBlobSASQueryParameters(BlobSASSignatureValues,
      StorageSharedKeyCredential)
    uid: '@azure/storage-blob.generateBlobSASQueryParameters'
    package: '@azure/storage-blob'
    summary: >-
      ONLY AVAILABLE IN NODE.JS RUNTIME.


      Creates an instance of SASQueryParameters.


      Only accepts required settings needed to create a SAS. For optional
      settings please

      set corresponding properties directly, such as permissions, startsOn and
      identifier.


      WARNING: When identifier is not provided, permissions and expiresOn are
      required.

      You MUST assign value to identifier or expiresOn & permissions manually if
      you initial with

      this constructor.


      Fill in the required details before running the following snippets.


      Example usage:


      ```ts snippet:GenerateBlobSASQueryParameters

      import {
        StorageSharedKeyCredential,
        generateBlobSASQueryParameters,
        ContainerSASPermissions,
        SASProtocol,
      } from "@azure/storage-blob";


      const account = "<account>";

      const accountKey = "<accountkey>";

      const sharedKeyCredential = new StorageSharedKeyCredential(account,
      accountKey);

      const containerName = "<container name>";


      // Generate service level SAS for a container

      const containerSAS = generateBlobSASQueryParameters(
        {
          containerName, // Required
          permissions: ContainerSASPermissions.parse("racwdl"), // Required
          startsOn: new Date(), // Optional
          expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HttpsAndHttp, // Optional
          version: "2016-05-31", // Optional
        },
        sharedKeyCredential,
      ).toString();

      ```


      Example using an identifier:


      ```ts snippet:GenerateBlobSASQueryParametersWithIdentifier

      import {
        StorageSharedKeyCredential,
        BlobServiceClient,
        ContainerSASPermissions,
        generateBlobSASQueryParameters,
      } from "@azure/storage-blob";


      const account = "<account>";

      const accountKey = "<accountkey>";

      const sharedKeyCredential = new StorageSharedKeyCredential(account,
      accountKey);

      const blobServiceClient = new BlobServiceClient(
        `https://${account}.blob.core.windows.net`,
        sharedKeyCredential,
      );


      const containerName = "<container name>";

      const containerClient =
      blobServiceClient.getContainerClient(containerName);


      // Generate service level SAS for a container with identifier

      // startsOn & permissions are optional when identifier is provided

      const identifier = "unique-id";

      await containerClient.setAccessPolicy(undefined, [
        {
          accessPolicy: {
            expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Date type
            permissions: ContainerSASPermissions.parse("racwdl").toString(),
            startsOn: new Date(), // Date type
          },
          id: identifier,
        },
      ]);


      const containerSAS = generateBlobSASQueryParameters(
        {
          containerName, // Required
          identifier, // Required
        },
        sharedKeyCredential,
      ).toString();

      ```


      Example using a blob name:


      ```ts snippet:GenerateBlobSASQueryParametersWithBlobName

      import {
        StorageSharedKeyCredential,
        generateBlobSASQueryParameters,
        BlobSASPermissions,
        SASProtocol,
      } from "@azure/storage-blob";


      const account = "<account>";

      const accountKey = "<accountkey>";

      const sharedKeyCredential = new StorageSharedKeyCredential(account,
      accountKey);


      const containerName = "<container name>";

      const blobName = "<blob name>";


      // Generate service level SAS for a blob

      const blobSAS = generateBlobSASQueryParameters(
        {
          containerName, // Required
          blobName, // Required
          permissions: BlobSASPermissions.parse("racwd"), // Required
          startsOn: new Date(), // Optional
          expiresOn: new Date(new Date().valueOf() + 86400 * 1000), // Required. Date type
          cacheControl: "cache-control-override", // Optional
          contentDisposition: "content-disposition-override", // Optional
          contentEncoding: "content-encoding-override", // Optional
          contentLanguage: "content-language-override", // Optional
          contentType: "content-type-override", // Optional
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HttpsAndHttp, // Optional
          version: "2016-05-31", // Optional
        },
        sharedKeyCredential,
      ).toString();

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateBlobSASQueryParameters(blobSASSignatureValues:
        BlobSASSignatureValues, sharedKeyCredential:
        StorageSharedKeyCredential): SASQueryParameters
      parameters:
        - id: blobSASSignatureValues
          type: <xref uid="@azure/storage-blob.BlobSASSignatureValues" />
          description: ''
        - id: sharedKeyCredential
          type: <xref uid="@azure/storage-blob.StorageSharedKeyCredential" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: >-
      generateBlobSASQueryParameters(BlobSASSignatureValues, UserDelegationKey,
      string)
    uid: '@azure/storage-blob.generateBlobSASQueryParameters_1'
    package: '@azure/storage-blob'
    summary: >-
      ONLY AVAILABLE IN NODE.JS RUNTIME.


      Creates an instance of SASQueryParameters.

      WARNING: identifier will be ignored when generating user delegation SAS,
      permissions and expiresOn are required.


      Example usage:


      ```ts snippet:GenerateBlobSASQueryParametersWithUserDelegationKey

      import {
        BlobServiceClient,
        generateBlobSASQueryParameters,
        ContainerSASPermissions,
        SASProtocol,
      } from "@azure/storage-blob";

      import { DefaultAzureCredential } from "@azure/identity";


      const account = "<account>";

      const blobServiceClient = new BlobServiceClient(
        `https://${account}.blob.core.windows.net`,
        new DefaultAzureCredential(),
      );


      const containerName = "<container name>";

      const accountName = "<account name>";

      const startsOn = new Date();

      const expiresOn = new Date(new Date().valueOf() + 86400 * 1000);


      // Generate user delegation SAS for a container

      const userDelegationKey = await
      blobServiceClient.getUserDelegationKey(startsOn, expiresOn);

      const containerSAS = generateBlobSASQueryParameters(
        {
          containerName, // Required
          permissions: ContainerSASPermissions.parse("racwdl"), // Required
          startsOn, // Optional. Date type
          expiresOn, // Required. Date type
          ipRange: { start: "0.0.0.0", end: "255.255.255.255" }, // Optional
          protocol: SASProtocol.HttpsAndHttp, // Optional
          version: "2018-11-09", // Must greater than or equal to 2018-11-09 to generate user delegation SAS
        },
        userDelegationKey, // UserDelegationKey
        accountName,
      ).toString();

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generateBlobSASQueryParameters(blobSASSignatureValues:
        BlobSASSignatureValues, userDelegationKey: UserDelegationKey,
        accountName: string): SASQueryParameters
      parameters:
        - id: blobSASSignatureValues
          type: <xref uid="@azure/storage-blob.BlobSASSignatureValues" />
          description: ''
        - id: userDelegationKey
          type: <xref uid="@azure/storage-blob.UserDelegationKey" />
          description: Return value of `blobServiceClient.getUserDelegationKey()`
        - id: accountName
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob.SASQueryParameters" />
  - name: getBlobServiceAccountAudience(string)
    uid: '@azure/storage-blob.getBlobServiceAccountAudience'
    package: '@azure/storage-blob'
    summary: To get OAuth audience for a storage account for blob service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBlobServiceAccountAudience(storageAccountName: string):
        string
      parameters:
        - id: storageAccountName
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: isPipelineLike(unknown)
    uid: '@azure/storage-blob.isPipelineLike'
    package: '@azure/storage-blob'
    summary: A helper to decide if a given argument satisfies the Pipeline contract
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isPipelineLike(pipeline: unknown): pipeline'
      parameters:
        - id: pipeline
          type: unknown
          description: An argument that may be a Pipeline
      return:
        description: true when the argument satisfies the Pipeline contract
        type: pipeline
  - name: >-
      newPipeline(StorageSharedKeyCredential | AnonymousCredential |
      TokenCredential, StoragePipelineOptions)
    uid: '@azure/storage-blob.newPipeline'
    package: '@azure/storage-blob'
    summary: Creates a new Pipeline object with Credential provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function newPipeline(credential?: StorageSharedKeyCredential |
        AnonymousCredential | TokenCredential, pipelineOptions?:
        StoragePipelineOptions): Pipeline
      parameters:
        - id: credential
          type: >-
            <xref uid="@azure/storage-blob.StorageSharedKeyCredential" /> |
            <xref uid="@azure/storage-blob.AnonymousCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the `@azure/identity` package to authenticate
            requests to the service. You can also provide an object that
            implements the TokenCredential interface. If not specified,
            AnonymousCredential is used.
        - id: pipelineOptions
          type: <xref uid="@azure/storage-blob.StoragePipelineOptions" />
          description: Optional. Options.
      return:
        description: A new Pipeline object.
        type: <xref uid="@azure/storage-blob.Pipeline" />
  - name: storageBrowserPolicy()
    uid: '@azure/storage-blob.storageBrowserPolicy'
    package: '@azure/storage-blob'
    summary: >-
      storageBrowserPolicy is a policy used to prevent browsers from caching
      requests

      and to remove cookies and explicit content-length headers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function storageBrowserPolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: storageCorrectContentLengthPolicy()
    uid: '@azure/storage-blob.storageCorrectContentLengthPolicy'
    package: '@azure/storage-blob'
    summary: >-
      storageCorrectContentLengthPolicy to correctly set Content-Length header
      with request body length.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function storageCorrectContentLengthPolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: storageRetryPolicy(StorageRetryOptions)
    uid: '@azure/storage-blob.storageRetryPolicy'
    package: '@azure/storage-blob'
    summary: Retry policy with exponential retry and linear retry implemented.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function storageRetryPolicy(options?: StorageRetryOptions):
        PipelinePolicy
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.StorageRetryOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: storageSharedKeyCredentialPolicy(StorageSharedKeyCredentialPolicyOptions)
    uid: '@azure/storage-blob.storageSharedKeyCredentialPolicy'
    package: '@azure/storage-blob'
    summary: >-
      storageSharedKeyCredentialPolicy handles signing requests using storage
      account keys.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function storageSharedKeyCredentialPolicy(options:
        StorageSharedKeyCredentialPolicyOptions): PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/storage-blob.StorageSharedKeyCredentialPolicyOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
