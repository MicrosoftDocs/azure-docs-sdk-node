### YamlMime:TSType
name: Tasks
uid: '@azure/arm-datamigration.Tasks'
package: '@azure/arm-datamigration'
summary: Interface representing a Tasks.
fullName: Tasks
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: cancel(string, string, string, string, TasksCancelOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.cancel'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. This method cancels a task if it's currently queued or running.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function cancel(groupName: string, serviceName: string, projectName:
        string, taskName: string, options?: TasksCancelOptionalParams):
        Promise<ProjectTask>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksCancelOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-datamigration.ProjectTask" />&gt;
  - name: >-
      command(string, string, string, string, CommandPropertiesUnion,
      TasksCommandOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.command'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. This method executes a command on a running task.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function command(groupName: string, serviceName: string, projectName:
        string, taskName: string, parameters: CommandPropertiesUnion, options?:
        TasksCommandOptionalParams): Promise<CommandPropertiesUnion>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.CommandPropertiesUnion" />
          description: Command to execute
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksCommandOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-datamigration.CommandPropertiesUnion"
          />&gt;
  - name: >-
      createOrUpdate(string, string, string, string, ProjectTask,
      TasksCreateOrUpdateOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.createOrUpdate'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. The PUT method creates a new task or updates an existing one,
      although since tasks have no

      mutable custom properties, there is little reason to update an existing
      one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(groupName: string, serviceName: string,
        projectName: string, taskName: string, parameters: ProjectTask,
        options?: TasksCreateOrUpdateOptionalParams): Promise<ProjectTask>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: options
          type: >-
            <xref
            uid="@azure/arm-datamigration.TasksCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-datamigration.ProjectTask" />&gt;
  - name: delete(string, string, string, string, TasksDeleteOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.delete'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. The DELETE method deletes a task, canceling it first if it's
      running.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(groupName: string, serviceName: string, projectName:
        string, taskName: string, options?: TasksDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, string, TasksGetOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.get'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. The GET method retrieves information about a task.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(groupName: string, serviceName: string, projectName:
        string, taskName: string, options?: TasksGetOptionalParams):
        Promise<ProjectTask>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-datamigration.ProjectTask" />&gt;
  - name: list(string, string, string, TasksListOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.list'
    package: '@azure/arm-datamigration'
    summary: >-
      The services resource is the top-level resource that represents the Azure
      Database Migration Service

      (classic). This method returns a list of tasks owned by a service
      resource. Some tasks may have a

      status of Unknown, which indicates that an error occurred while querying
      the status of that task.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(groupName: string, serviceName: string, projectName:
        string, options?: TasksListOptionalParams):
        PagedAsyncIterableIterator<ProjectTask, ProjectTask[], PageSettings>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-datamigration.ProjectTask" />, <xref
          uid="@azure/arm-datamigration.ProjectTask" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, string, ProjectTask,
      TasksUpdateOptionalParams)
    uid: '@azure/arm-datamigration.Tasks.update'
    package: '@azure/arm-datamigration'
    summary: >-
      The tasks resource is a nested, proxy-only resource representing work
      performed by a DMS (classic)

      instance. The PATCH method updates an existing task, but since tasks have
      no mutable custom

      properties, there is little reason to do so.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(groupName: string, serviceName: string, projectName:
        string, taskName: string, parameters: ProjectTask, options?:
        TasksUpdateOptionalParams): Promise<ProjectTask>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: projectName
          type: string
          description: Name of the project
        - id: taskName
          type: string
          description: Name of the Task
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: options
          type: <xref uid="@azure/arm-datamigration.TasksUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-datamigration.ProjectTask" />&gt;
