### YamlMime:TSType
name: EventOperations
uid: '@azure/arm-resourcehealth.EventOperations'
package: '@azure/arm-resourcehealth'
summary: Interface representing a EventOperations.
fullName: EventOperations
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      fetchDetailsBySubscriptionIdAndTrackingId(string,
      EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams)
    uid: >-
      @azure/arm-resourcehealth.EventOperations.fetchDetailsBySubscriptionIdAndTrackingId
    package: '@azure/arm-resourcehealth'
    summary: >-
      Service health event details in the subscription by event tracking id.
      This can be used to fetch

      sensitive properties for Security Advisory events
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function fetchDetailsBySubscriptionIdAndTrackingId(eventTrackingId:
        string, options?:
        EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams):
        Promise<Event>
      parameters:
        - id: eventTrackingId
          type: string
          description: Event Id which uniquely identifies ServiceHealth event.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.EventFetchDetailsBySubscriptionIdAndTrackingIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resourcehealth.Event" />&gt;
  - name: >-
      fetchDetailsByTenantIdAndTrackingId(string,
      EventFetchDetailsByTenantIdAndTrackingIdOptionalParams)
    uid: >-
      @azure/arm-resourcehealth.EventOperations.fetchDetailsByTenantIdAndTrackingId
    package: '@azure/arm-resourcehealth'
    summary: >-
      Service health event details in the tenant by event tracking id. This can
      be used to fetch sensitive

      properties for Security Advisory events
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function fetchDetailsByTenantIdAndTrackingId(eventTrackingId: string,
        options?: EventFetchDetailsByTenantIdAndTrackingIdOptionalParams):
        Promise<Event>
      parameters:
        - id: eventTrackingId
          type: string
          description: Event Id which uniquely identifies ServiceHealth event.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.EventFetchDetailsByTenantIdAndTrackingIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resourcehealth.Event" />&gt;
  - name: >-
      getBySubscriptionIdAndTrackingId(string,
      EventGetBySubscriptionIdAndTrackingIdOptionalParams)
    uid: '@azure/arm-resourcehealth.EventOperations.getBySubscriptionIdAndTrackingId'
    package: '@azure/arm-resourcehealth'
    summary: Service health event in the subscription by event tracking id
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBySubscriptionIdAndTrackingId(eventTrackingId: string,
        options?: EventGetBySubscriptionIdAndTrackingIdOptionalParams):
        Promise<Event>
      parameters:
        - id: eventTrackingId
          type: string
          description: Event Id which uniquely identifies ServiceHealth event.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.EventGetBySubscriptionIdAndTrackingIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resourcehealth.Event" />&gt;
  - name: >-
      getByTenantIdAndTrackingId(string,
      EventGetByTenantIdAndTrackingIdOptionalParams)
    uid: '@azure/arm-resourcehealth.EventOperations.getByTenantIdAndTrackingId'
    package: '@azure/arm-resourcehealth'
    summary: Service health event in the tenant by event tracking id
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getByTenantIdAndTrackingId(eventTrackingId: string, options?:
        EventGetByTenantIdAndTrackingIdOptionalParams): Promise<Event>
      parameters:
        - id: eventTrackingId
          type: string
          description: Event Id which uniquely identifies ServiceHealth event.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.EventGetByTenantIdAndTrackingIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resourcehealth.Event" />&gt;
