### YamlMime:TSPackage
uid: '@typespec/ts-http-runtime'
name: '@typespec/ts-http-runtime'
summary: ''
type: package
classes:
  - '@typespec/ts-http-runtime.AbortError'
  - '@typespec/ts-http-runtime.RestError'
interfaces:
  - '@typespec/ts-http-runtime.AddPolicyOptions'
  - '@typespec/ts-http-runtime.AdditionalPolicyConfig'
  - '@typespec/ts-http-runtime.Agent'
  - '@typespec/ts-http-runtime.ApiKeyAuthScheme'
  - '@typespec/ts-http-runtime.ApiKeyCredential'
  - '@typespec/ts-http-runtime.AuthorizationCodeFlow'
  - '@typespec/ts-http-runtime.BasicAuthScheme'
  - '@typespec/ts-http-runtime.BasicCredential'
  - '@typespec/ts-http-runtime.BearerAuthScheme'
  - '@typespec/ts-http-runtime.BearerTokenCredential'
  - '@typespec/ts-http-runtime.BodyPart'
  - '@typespec/ts-http-runtime.Client'
  - '@typespec/ts-http-runtime.ClientCredentialsFlow'
  - '@typespec/ts-http-runtime.Debugger'
  - '@typespec/ts-http-runtime.FullOperationResponse'
  - '@typespec/ts-http-runtime.GetBearerTokenOptions'
  - '@typespec/ts-http-runtime.GetOAuth2TokenOptions'
  - '@typespec/ts-http-runtime.HttpClient'
  - '@typespec/ts-http-runtime.HttpHeaders'
  - '@typespec/ts-http-runtime.ImplicitFlow'
  - '@typespec/ts-http-runtime.KeyObject'
  - '@typespec/ts-http-runtime.LogPolicyOptions'
  - '@typespec/ts-http-runtime.MultipartRequestBody'
  - '@typespec/ts-http-runtime.NoAuthAuthScheme'
  - '@typespec/ts-http-runtime.OAuth2AuthScheme'
  - '@typespec/ts-http-runtime.OAuth2TokenCredential'
  - '@typespec/ts-http-runtime.OperationOptions'
  - '@typespec/ts-http-runtime.OperationRequestOptions'
  - '@typespec/ts-http-runtime.PasswordFlow'
  - '@typespec/ts-http-runtime.PathParameterWithOptions'
  - '@typespec/ts-http-runtime.Pipeline'
  - '@typespec/ts-http-runtime.PipelineOptions'
  - '@typespec/ts-http-runtime.PipelinePolicy'
  - '@typespec/ts-http-runtime.PipelineRequest'
  - '@typespec/ts-http-runtime.PipelineRequestOptions'
  - '@typespec/ts-http-runtime.PipelineResponse'
  - '@typespec/ts-http-runtime.PipelineRetryOptions'
  - '@typespec/ts-http-runtime.ProxySettings'
  - '@typespec/ts-http-runtime.PxfObject'
  - '@typespec/ts-http-runtime.RedirectPolicyOptions'
  - '@typespec/ts-http-runtime.ResourceMethods'
  - '@typespec/ts-http-runtime.RestErrorOptions'
  - '@typespec/ts-http-runtime.TelemetryOptions'
  - '@typespec/ts-http-runtime.TlsSettings'
  - '@typespec/ts-http-runtime.UserAgentPolicyOptions'
functions:
  - name: TypeSpecRuntimeLogger(any[])
    uid: '@typespec/ts-http-runtime.TypeSpecRuntimeLogger'
    package: '@typespec/ts-http-runtime'
    summary: >-
      The TypeSpecRuntimeLogger provides a mechanism for overriding where logs
      are output to.

      By default, logs are sent to stderr.

      Override the `log` method to redirect logs to another location.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function TypeSpecRuntimeLogger(args: any[])'
      parameters:
        - id: args
          type: any[]
          description: ''
  - name: createHttpHeaders(RawHttpHeadersInput)
    uid: '@typespec/ts-http-runtime.createHttpHeaders'
    package: '@typespec/ts-http-runtime'
    summary: Creates an object that satisfies the `HttpHeaders` interface.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createHttpHeaders(rawHeaders?: RawHttpHeadersInput):
        HttpHeaders
      parameters:
        - id: rawHeaders
          type: <xref uid="@typespec/ts-http-runtime.RawHttpHeadersInput" />
          description: A simple object representing initial headers
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.HttpHeaders" />
  - name: createPipelineRequest(PipelineRequestOptions)
    uid: '@typespec/ts-http-runtime.createPipelineRequest'
    package: '@typespec/ts-http-runtime'
    summary: >-
      Creates a new pipeline request with the given options.

      This method is to allow for the easy setting of default values and not
      required.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPipelineRequest(options: PipelineRequestOptions):
        PipelineRequest
      parameters:
        - id: options
          type: <xref uid="@typespec/ts-http-runtime.PipelineRequestOptions" />
          description: The options to create the request with.
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.PipelineRequest" />
  - name: createRestError(PathUncheckedResponse)
    uid: '@typespec/ts-http-runtime.createRestError'
    package: '@typespec/ts-http-runtime'
    summary: Creates a rest error from a PathUnchecked response
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createRestError(response: PathUncheckedResponse): RestError'
      parameters:
        - id: response
          type: <xref uid="@typespec/ts-http-runtime.PathUncheckedResponse" />
          description: ''
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.RestError" />
  - name: createRestError(string, PathUncheckedResponse)
    uid: '@typespec/ts-http-runtime.createRestError_1'
    package: '@typespec/ts-http-runtime'
    summary: Creates a rest error from an error message and a PathUnchecked response
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRestError(message: string, response:
        PathUncheckedResponse): RestError
      parameters:
        - id: message
          type: string
          description: ''
        - id: response
          type: <xref uid="@typespec/ts-http-runtime.PathUncheckedResponse" />
          description: ''
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.RestError" />
  - name: getClient(string, ClientOptions)
    uid: '@typespec/ts-http-runtime.getClient'
    package: '@typespec/ts-http-runtime'
    summary: Creates a client with a default pipeline
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getClient(endpoint: string, clientOptions?: ClientOptions):
        Client
      parameters:
        - id: endpoint
          type: string
          description: Base endpoint for the client
        - id: clientOptions
          type: <xref uid="@typespec/ts-http-runtime.ClientOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.Client" />
  - name: isRestError(unknown)
    uid: '@typespec/ts-http-runtime.isRestError'
    package: '@typespec/ts-http-runtime'
    summary: Typeguard for RestError
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isRestError(e: unknown): e'
      parameters:
        - id: e
          type: unknown
          description: Something caught by a catch clause.
      return:
        description: ''
        type: e
  - name: operationOptionsToRequestParameters(OperationOptions)
    uid: '@typespec/ts-http-runtime.operationOptionsToRequestParameters'
    package: '@typespec/ts-http-runtime'
    summary: Helper function to convert OperationOptions to RequestParameters
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function operationOptionsToRequestParameters(options: OperationOptions):
        RequestParameters
      parameters:
        - id: options
          type: <xref uid="@typespec/ts-http-runtime.OperationOptions" />
          description: the options that are used by Modular layer to send the request
      return:
        description: the result of the conversion in RequestParameters of RLC layer
        type: <xref uid="@typespec/ts-http-runtime.RequestParameters" />
  - name: stringToUint8Array(string, EncodingType)
    uid: '@typespec/ts-http-runtime.stringToUint8Array'
    package: '@typespec/ts-http-runtime'
    summary: >-
      The helper that transforms string to specific character encoded bytes
      array.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function stringToUint8Array(value: string, format: EncodingType):
        Uint8Array
      parameters:
        - id: value
          type: string
          description: the string to be converted
        - id: format
          type: <xref uid="@typespec/ts-http-runtime.EncodingType" />
          description: the format we use to decode the value
      return:
        description: a uint8array
        type: Uint8Array
  - name: uint8ArrayToString(Uint8Array, EncodingType)
    uid: '@typespec/ts-http-runtime.uint8ArrayToString'
    package: '@typespec/ts-http-runtime'
    summary: >-
      The helper that transforms bytes with specific character encoding into
      string
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uint8ArrayToString(bytes: Uint8Array, format: EncodingType):
        string
      parameters:
        - id: bytes
          type: Uint8Array
          description: the uint8array bytes
        - id: format
          type: <xref uid="@typespec/ts-http-runtime.EncodingType" />
          description: the format we use to encode the byte
      return:
        description: a string of the encoded string
        type: string
typeAliases:
  - '@typespec/ts-http-runtime.AuthScheme'
  - '@typespec/ts-http-runtime.ClientCredential'
  - '@typespec/ts-http-runtime.ClientOptions'
  - '@typespec/ts-http-runtime.EncodingType'
  - '@typespec/ts-http-runtime.FormDataMap'
  - '@typespec/ts-http-runtime.FormDataValue'
  - '@typespec/ts-http-runtime.HttpBrowserStreamResponse'
  - '@typespec/ts-http-runtime.HttpMethods'
  - '@typespec/ts-http-runtime.HttpNodeStreamResponse'
  - '@typespec/ts-http-runtime.HttpResponse'
  - '@typespec/ts-http-runtime.OAuth2Flow'
  - '@typespec/ts-http-runtime.PathParameters'
  - '@typespec/ts-http-runtime.PathUnchecked'
  - '@typespec/ts-http-runtime.PathUncheckedResponse'
  - '@typespec/ts-http-runtime.PipelinePhase'
  - '@typespec/ts-http-runtime.RawHttpHeaders'
  - '@typespec/ts-http-runtime.RawHttpHeadersInput'
  - '@typespec/ts-http-runtime.RawResponseCallback'
  - '@typespec/ts-http-runtime.RequestBodyType'
  - '@typespec/ts-http-runtime.RequestParameters'
  - '@typespec/ts-http-runtime.SendRequest'
  - '@typespec/ts-http-runtime.StreamableMethod'
  - '@typespec/ts-http-runtime.TransferProgressEvent'
  - '@typespec/ts-http-runtime.TypeSpecRuntimeClientLogger'
