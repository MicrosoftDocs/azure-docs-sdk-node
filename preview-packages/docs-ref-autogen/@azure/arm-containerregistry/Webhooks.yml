### YamlMime:TSType
name: Webhooks
uid: '@azure/arm-containerregistry.Webhooks'
package: '@azure/arm-containerregistry'
summary: Interface representing a Webhooks.
fullName: Webhooks
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, WebhookCreateParameters,
      WebhooksCreateOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginCreate'
    package: '@azure/arm-containerregistry'
    summary: Creates a webhook for a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        webhookName: string, webhookCreateParameters: WebhookCreateParameters,
        options?: WebhooksCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Webhook>, Webhook>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: webhookCreateParameters
          type: <xref uid="@azure/arm-containerregistry.WebhookCreateParameters" />
          description: The parameters for creating a webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.Webhook" />&gt;, <xref
          uid="@azure/arm-containerregistry.Webhook" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, WebhookCreateParameters,
      WebhooksCreateOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginCreateAndWait'
    package: '@azure/arm-containerregistry'
    summary: Creates a webhook for a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, registryName:
        string, webhookName: string, webhookCreateParameters:
        WebhookCreateParameters, options?: WebhooksCreateOptionalParams):
        Promise<Webhook>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: webhookCreateParameters
          type: <xref uid="@azure/arm-containerregistry.WebhookCreateParameters" />
          description: The parameters for creating a webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Webhook" />&gt;
  - name: beginDelete(string, string, string, WebhooksDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginDelete'
    package: '@azure/arm-containerregistry'
    summary: Deletes a webhook from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, registryName: string,
        webhookName: string, options?: WebhooksDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, WebhooksDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginDeleteAndWait'
    package: '@azure/arm-containerregistry'
    summary: Deletes a webhook from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, registryName:
        string, webhookName: string, options?: WebhooksDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, WebhookUpdateParameters,
      WebhooksUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginUpdate'
    package: '@azure/arm-containerregistry'
    summary: Updates a webhook with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        webhookName: string, webhookUpdateParameters: WebhookUpdateParameters,
        options?: WebhooksUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Webhook>, Webhook>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: webhookUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.WebhookUpdateParameters" />
          description: The parameters for updating a webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.Webhook" />&gt;, <xref
          uid="@azure/arm-containerregistry.Webhook" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, WebhookUpdateParameters,
      WebhooksUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.beginUpdateAndWait'
    package: '@azure/arm-containerregistry'
    summary: Updates a webhook with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, registryName:
        string, webhookName: string, webhookUpdateParameters:
        WebhookUpdateParameters, options?: WebhooksUpdateOptionalParams):
        Promise<Webhook>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: webhookUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.WebhookUpdateParameters" />
          description: The parameters for updating a webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Webhook" />&gt;
  - name: get(string, string, string, WebhooksGetOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.get'
    package: '@azure/arm-containerregistry'
    summary: Gets the properties of the specified webhook.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        webhookName: string, options?: WebhooksGetOptionalParams):
        Promise<Webhook>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.WebhooksGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Webhook" />&gt;
  - name: >-
      getCallbackConfig(string, string, string,
      WebhooksGetCallbackConfigOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.getCallbackConfig'
    package: '@azure/arm-containerregistry'
    summary: Gets the configuration of service URI and custom headers for the webhook.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCallbackConfig(resourceGroupName: string, registryName:
        string, webhookName: string, options?:
        WebhooksGetCallbackConfigOptionalParams): Promise<CallbackConfig>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksGetCallbackConfigOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-containerregistry.CallbackConfig"
          />&gt;
  - name: list(string, string, WebhooksListOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.list'
    package: '@azure/arm-containerregistry'
    summary: Lists all the webhooks for the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, options?:
        WebhooksListOptionalParams): PagedAsyncIterableIterator<Webhook,
        Webhook[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.WebhooksListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.Webhook" />, <xref
          uid="@azure/arm-containerregistry.Webhook" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listEvents(string, string, string, WebhooksListEventsOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.listEvents'
    package: '@azure/arm-containerregistry'
    summary: Lists recent events for the specified webhook.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listEvents(resourceGroupName: string, registryName: string,
        webhookName: string, options?: WebhooksListEventsOptionalParams):
        PagedAsyncIterableIterator<Event, Event[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.WebhooksListEventsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.Event" />, <xref
          uid="@azure/arm-containerregistry.Event" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: ping(string, string, string, WebhooksPingOptionalParams)
    uid: '@azure/arm-containerregistry.Webhooks.ping'
    package: '@azure/arm-containerregistry'
    summary: Triggers a ping event to be sent to the webhook.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function ping(resourceGroupName: string, registryName: string,
        webhookName: string, options?: WebhooksPingOptionalParams):
        Promise<EventInfo>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: webhookName
          type: string
          description: The name of the webhook.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.WebhooksPingOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.EventInfo" />&gt;
