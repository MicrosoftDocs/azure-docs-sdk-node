### YamlMime:TSType
name: WorkspacePurge
uid: '@azure/arm-operationalinsights.WorkspacePurge'
package: '@azure/arm-operationalinsights'
summary: Interface representing a WorkspacePurge.
fullName: WorkspacePurge
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      getPurgeStatus(string, string, string,
      WorkspacePurgeGetPurgeStatusOptionalParams)
    uid: '@azure/arm-operationalinsights.WorkspacePurge.getPurgeStatus'
    package: '@azure/arm-operationalinsights'
    summary: Gets status of an ongoing purge operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPurgeStatus(resourceGroupName: string, workspaceName:
        string, purgeId: string, options?:
        WorkspacePurgeGetPurgeStatusOptionalParams):
        Promise<WorkspacePurgeStatusResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: purgeId
          type: string
          description: >-
            In a purge status request, this is the Id of the operation the
            status of which is
                           returned.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.WorkspacePurgeGetPurgeStatusOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-operationalinsights.WorkspacePurgeStatusResponse"
          />&gt;
  - name: >-
      purge(string, string, WorkspacePurgeBody,
      WorkspacePurgePurgeOptionalParams)
    uid: '@azure/arm-operationalinsights.WorkspacePurge.purge'
    package: '@azure/arm-operationalinsights'
    summary: >-
      Purges data in an Log Analytics workspace by a set of user-defined
      filters.


      In order to manage system resources, purge requests are throttled at 50
      requests per hour. You

      should batch the execution of purge requests by sending a single command
      whose predicate includes

      all user identities that require purging. Use the in operator to specify
      multiple identities. You

      should run the query prior to using for a purge request to verify that the
      results are expected.

      Log Analytics only supports purge operations required for compliance with
      GDPR. The Log Analytics

      product team reserves the right to reject requests for purge operations
      that are not for the purpose

      of GDPR compliance. In the event of a dispute, please create a support
      ticket
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function purge(resourceGroupName: string, workspaceName: string, body:
        WorkspacePurgeBody, options?: WorkspacePurgePurgeOptionalParams):
        Promise<WorkspacePurgePurgeResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: body
          type: <xref uid="@azure/arm-operationalinsights.WorkspacePurgeBody" />
          description: >-
            Describes the body of a request to purge data in a single table of
            an Log Analytics
                        Workspace
        - id: options
          type: >-
            <xref
            uid="@azure/arm-operationalinsights.WorkspacePurgePurgeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-operationalinsights.WorkspacePurgePurgeResponse"
          />&gt;
