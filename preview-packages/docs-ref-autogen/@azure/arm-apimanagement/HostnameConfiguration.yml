### YamlMime:TSType
name: HostnameConfiguration
uid: '@azure/arm-apimanagement.HostnameConfiguration'
package: '@azure/arm-apimanagement'
summary: Custom hostname configuration.
fullName: HostnameConfiguration
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: certificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificate'
    package: '@azure/arm-apimanagement'
    summary: Certificate information.
    fullName: certificate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'certificate?: CertificateInformation'
      return:
        description: ''
        type: <xref uid="@azure/arm-apimanagement.CertificateInformation" />
  - name: certificatePassword
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificatePassword'
    package: '@azure/arm-apimanagement'
    summary: Certificate Password.
    fullName: certificatePassword
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'certificatePassword?: string'
      return:
        description: ''
        type: string
  - name: certificateSource
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificateSource'
    package: '@azure/arm-apimanagement'
    summary: Certificate Source.
    fullName: certificateSource
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'certificateSource?: string'
      return:
        description: ''
        type: string
  - name: certificateStatus
    uid: '@azure/arm-apimanagement.HostnameConfiguration.certificateStatus'
    package: '@azure/arm-apimanagement'
    summary: Certificate Status.
    fullName: certificateStatus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'certificateStatus?: string'
      return:
        description: ''
        type: string
  - name: defaultSslBinding
    uid: '@azure/arm-apimanagement.HostnameConfiguration.defaultSslBinding'
    package: '@azure/arm-apimanagement'
    summary: >-
      Specify true to setup the certificate associated with this Hostname as the
      Default SSL Certificate. If a client does not send the SNI header, then
      this will be the certificate that will be challenged. The property is
      useful if a service has multiple custom hostname enabled and it needs to
      decide on the default ssl certificate. The setting only applied to gateway
      Hostname Type.
    fullName: defaultSslBinding
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'defaultSslBinding?: boolean'
      return:
        description: ''
        type: boolean
  - name: encodedCertificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.encodedCertificate'
    package: '@azure/arm-apimanagement'
    summary: Base64 Encoded certificate.
    fullName: encodedCertificate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'encodedCertificate?: string'
      return:
        description: ''
        type: string
  - name: hostName
    uid: '@azure/arm-apimanagement.HostnameConfiguration.hostName'
    package: '@azure/arm-apimanagement'
    summary: Hostname to configure on the Api Management service.
    fullName: hostName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hostName: string'
      return:
        description: ''
        type: string
  - name: identityClientId
    uid: '@azure/arm-apimanagement.HostnameConfiguration.identityClientId'
    package: '@azure/arm-apimanagement'
    summary: >-
      System or User Assigned Managed identity clientId as generated by Azure
      AD, which has GET access to the keyVault containing the SSL certificate.
    fullName: identityClientId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'identityClientId?: string'
      return:
        description: ''
        type: string
  - name: keyVaultId
    uid: '@azure/arm-apimanagement.HostnameConfiguration.keyVaultId'
    package: '@azure/arm-apimanagement'
    summary: >-
      Url to the KeyVault Secret containing the Ssl Certificate. If absolute Url
      containing version is provided, auto-update of ssl certificate will not
      work. This requires Api Management service to be configured with
      aka.ms/apimmsi. The secret should be of type *application/x-pkcs12*
    fullName: keyVaultId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'keyVaultId?: string'
      return:
        description: ''
        type: string
  - name: negotiateClientCertificate
    uid: '@azure/arm-apimanagement.HostnameConfiguration.negotiateClientCertificate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Specify true to always negotiate client certificate on the hostname.
      Default Value is false.
    fullName: negotiateClientCertificate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'negotiateClientCertificate?: boolean'
      return:
        description: ''
        type: boolean
  - name: type
    uid: '@azure/arm-apimanagement.HostnameConfiguration.type'
    package: '@azure/arm-apimanagement'
    summary: Hostname type.
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type: string'
      return:
        description: ''
        type: string
