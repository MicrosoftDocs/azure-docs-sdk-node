### YamlMime:TSType
name: RoleAssignments
uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments'
package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
summary: Interface representing a RoleAssignments.
fullName: RoleAssignments
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      create(string, string, RoleAssignmentCreateParameters,
      RoleAssignmentsCreateOptionalParams)
    uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.create'
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Creates a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, options?:
        RoleAssignmentsCreateOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource
                         instance. For example, use '/subscriptions/{subscription-id}/' for a subscription,
                         '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and
                         '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
                         for a resource.
        - id: roleAssignmentName
          type: string
          description: >-
            A GUID for the role assignment to create. The name must be unique
            and
                                      different for each role assignment.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: >-
      createById(string, RoleAssignmentCreateParameters,
      RoleAssignmentsCreateByIdOptionalParams)
    uid: >-
      @azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.createById
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Creates a role assignment by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createById(roleAssignmentId: string, parameters:
        RoleAssignmentCreateParameters, options?:
        RoleAssignmentsCreateByIdOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: roleAssignmentId
          type: string
          description: >-
            The fully qualified ID of the role assignment, including the scope,
            resource
                                    name and resource type. Use the format,
                                    /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:
                                    /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsCreateByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: delete(string, string, RoleAssignmentsDeleteOptionalParams)
    uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.delete'
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Deletes a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(scope: string, roleAssignmentName: string, options?:
        RoleAssignmentsDeleteOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: deleteById(string, RoleAssignmentsDeleteByIdOptionalParams)
    uid: >-
      @azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.deleteById
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Deletes a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(roleAssignmentId: string, options?:
        RoleAssignmentsDeleteByIdOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: roleAssignmentId
          type: string
          description: >-
            The fully qualified ID of the role assignment, including the scope,
            resource
                                    name and resource type. Use the format,
                                    /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:
                                    /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsDeleteByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: get(string, string, RoleAssignmentsGetOptionalParams)
    uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.get'
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Get the specified role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, options?:
        RoleAssignmentsGetOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: getById(string, RoleAssignmentsGetByIdOptionalParams)
    uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.getById'
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Gets a role assignment by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleAssignmentId: string, options?:
        RoleAssignmentsGetByIdOptionalParams): Promise<RoleAssignment>
      parameters:
        - id: roleAssignmentId
          type: string
          description: >-
            The fully qualified ID of the role assignment, including the scope,
            resource
                                    name and resource type. Use the format,
                                    /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example:
                                    /subscriptions/{subId}/resourcegroups/{rgname}//providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsGetByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />&gt;
  - name: list(RoleAssignmentsListOptionalParams)
    uid: '@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.list'
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Gets all role assignments for the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: RoleAssignmentsListOptionalParams):
        PagedAsyncIterableIterator<RoleAssignment, RoleAssignment[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />, <xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listForResource(string, string, string, string, string,
      RoleAssignmentsListForResourceOptionalParams)
    uid: >-
      @azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.listForResource
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Gets role assignments for a resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        RoleAssignmentsListForResourceOptionalParams):
        PagedAsyncIterableIterator<RoleAssignment, RoleAssignment[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get role assignments for.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsListForResourceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />, <xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listForResourceGroup(string,
      RoleAssignmentsListForResourceGroupOptionalParams)
    uid: >-
      @azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.listForResourceGroup
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Gets role assignments for a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        RoleAssignmentsListForResourceGroupOptionalParams):
        PagedAsyncIterableIterator<RoleAssignment, RoleAssignment[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsListForResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />, <xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listForScope(string, RoleAssignmentsListForScopeOptionalParams)
    uid: >-
      @azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignments.listForScope
    package: '@azure/arm-authorization-profile-2020-09-01-hybrid'
    summary: Gets role assignments for a scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, options?:
        RoleAssignmentsListForScopeOptionalParams):
        PagedAsyncIterableIterator<RoleAssignment, RoleAssignment[],
        PageSettings>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignments.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignmentsListForScopeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />, <xref
          uid="@azure/arm-authorization-profile-2020-09-01-hybrid.RoleAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
