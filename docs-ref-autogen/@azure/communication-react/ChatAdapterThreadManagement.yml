### YamlMime:TSType
name: ChatAdapterThreadManagement
uid: '@azure/communication-react.ChatAdapterThreadManagement'
package: '@azure/communication-react'
summary: Functionality for managing the current chat thread.
fullName: ChatAdapterThreadManagement
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: deleteMessage(string)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.deleteMessage'
    package: '@azure/communication-react'
    summary: Delete a message in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string): Promise<void>'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: downloadResourceToCache(ResourceDetails)
    uid: >-
      @azure/communication-react.ChatAdapterThreadManagement.downloadResourceToCache
    package: '@azure/communication-react'
    summary: Downloads a resource into the cache for the given message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function downloadResourceToCache(resourceDetails: ResourceDetails):
        Promise<void>
      parameters:
        - id: resourceDetails
          type: <xref uid="@azure/communication-react.ResourceDetails" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: fetchInitialData()
    uid: '@azure/communication-react.ChatAdapterThreadManagement.fetchInitialData'
    package: '@azure/communication-react'
    summary: |-
      Fetch initial state for the Chat adapter.

      Performs the minimal fetch necessary for ChatComposite and API methods.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function fetchInitialData(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: loadPreviousChatMessages(number)
    uid: >-
      @azure/communication-react.ChatAdapterThreadManagement.loadPreviousChatMessages
    package: '@azure/communication-react'
    summary: Load more previous messages in the chat thread history.
    remarks: This method is usually used to control incremental fetch/infinite scroll
    isDeprecated: false
    syntax:
      content: >-
        function loadPreviousChatMessages(messagesToLoad: number):
        Promise<boolean>
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: removeParticipant(string)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: removeResourceFromCache(ResourceDetails)
    uid: >-
      @azure/communication-react.ChatAdapterThreadManagement.removeResourceFromCache
    package: '@azure/communication-react'
    summary: Removes a resource from the cache for the given message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeResourceFromCache(resourceDetails: ResourceDetails)'
      parameters:
        - id: resourceDetails
          type: <xref uid="@azure/communication-react.ResourceDetails" />
          description: ''
  - name: sendMessage(string, SendMessageOptions)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.sendMessage'
    package: '@azure/communication-react'
    summary: >-
      Send a message in the thread.

      Please note that SendMessageOptions is being deprecated, please use
      MessageOptions instead.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendMessage(content: string, options?: SendMessageOptions):
        Promise<void>
      parameters:
        - id: content
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-chat.SendMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendReadReceipt(string)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.sendReadReceipt'
    package: '@azure/communication-react'
    summary: Send a read receipt for a message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string): Promise<void>'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendTypingIndicator()
    uid: '@azure/communication-react.ChatAdapterThreadManagement.sendTypingIndicator'
    package: '@azure/communication-react'
    summary: Send typing indicator in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendTypingIndicator(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: setTopic(string)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.setTopic'
    package: '@azure/communication-react'
    summary: Set the topic for the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setTopic(topicName: string): Promise<void>'
      parameters:
        - id: topicName
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: updateMessage(string, string, Record<string, string>)
    uid: '@azure/communication-react.ChatAdapterThreadManagement.updateMessage'
    package: '@azure/communication-react'
    summary: >-
      Update a message content.

      Please note that metadata is being deprecated, please use
      MessageOptions.metadata instead.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, content: string, options?:
        Record<string, string>): Promise<void>
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: options
          type: Record&lt;string, string&gt;
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
