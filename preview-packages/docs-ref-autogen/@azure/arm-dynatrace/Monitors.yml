### YamlMime:TSType
name: Monitors
uid: '@azure/arm-dynatrace.Monitors'
package: '@azure/arm-dynatrace'
summary: Interface representing a Monitors.
fullName: Monitors
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, MonitorResource,
      MonitorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.beginCreateOrUpdate'
    package: '@azure/arm-dynatrace'
    summary: Create a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, monitorName:
        string, resource: MonitorResource, options?:
        MonitorsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<MonitorResource>,
        MonitorResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: resource
          type: <xref uid="@azure/arm-dynatrace.MonitorResource" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-dynatrace.MonitorResource" />&gt;, <xref
          uid="@azure/arm-dynatrace.MonitorResource" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, MonitorResource,
      MonitorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.beginCreateOrUpdateAndWait'
    package: '@azure/arm-dynatrace'
    summary: Create a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        monitorName: string, resource: MonitorResource, options?:
        MonitorsCreateOrUpdateOptionalParams): Promise<MonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: resource
          type: <xref uid="@azure/arm-dynatrace.MonitorResource" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-dynatrace.MonitorResource" />&gt;
  - name: beginDelete(string, string, MonitorsDeleteOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.beginDelete'
    package: '@azure/arm-dynatrace'
    summary: Delete a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, monitorName: string,
        options?: MonitorsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: <xref uid="@azure/arm-dynatrace.MonitorsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, MonitorsDeleteOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.beginDeleteAndWait'
    package: '@azure/arm-dynatrace'
    summary: Delete a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, monitorName:
        string, options?: MonitorsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: <xref uid="@azure/arm-dynatrace.MonitorsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, MonitorsGetOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.get'
    package: '@azure/arm-dynatrace'
    summary: Get a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, monitorName: string, options?:
        MonitorsGetOptionalParams): Promise<MonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: <xref uid="@azure/arm-dynatrace.MonitorsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-dynatrace.MonitorResource" />&gt;
  - name: >-
      getMarketplaceSaaSResourceDetails(MarketplaceSaaSResourceDetailsRequest,
      MonitorsGetMarketplaceSaaSResourceDetailsOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.getMarketplaceSaaSResourceDetails'
    package: '@azure/arm-dynatrace'
    summary: >-
      Get Marketplace SaaS resource details of a tenant under a specific
      subscription
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMarketplaceSaaSResourceDetails(request:
        MarketplaceSaaSResourceDetailsRequest, options?:
        MonitorsGetMarketplaceSaaSResourceDetailsOptionalParams):
        Promise<MarketplaceSaaSResourceDetailsResponse>
      parameters:
        - id: request
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MarketplaceSaaSResourceDetailsRequest" />
          description: Tenant Id
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsGetMarketplaceSaaSResourceDetailsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-dynatrace.MarketplaceSaaSResourceDetailsResponse"
          />&gt;
  - name: getMetricStatus(string, string, MonitorsGetMetricStatusOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.getMetricStatus'
    package: '@azure/arm-dynatrace'
    summary: Get metric status
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMetricStatus(resourceGroupName: string, monitorName: string,
        options?: MonitorsGetMetricStatusOptionalParams):
        Promise<MetricsStatusResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitor resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsGetMetricStatusOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-dynatrace.MetricsStatusResponse"
          />&gt;
  - name: getSSODetails(string, string, MonitorsGetSSODetailsOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.getSSODetails'
    package: '@azure/arm-dynatrace'
    summary: Gets the SSO configuration details from the partner.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSSODetails(resourceGroupName: string, monitorName: string,
        options?: MonitorsGetSSODetailsOptionalParams):
        Promise<SSODetailsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: >-
            <xref uid="@azure/arm-dynatrace.MonitorsGetSSODetailsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-dynatrace.SSODetailsResponse" />&gt;
  - name: getVMHostPayload(string, string, MonitorsGetVMHostPayloadOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.getVMHostPayload'
    package: '@azure/arm-dynatrace'
    summary: >-
      Returns the payload that needs to be passed in the request body for
      installing Dynatrace agent on a

      VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getVMHostPayload(resourceGroupName: string, monitorName:
        string, options?: MonitorsGetVMHostPayloadOptionalParams):
        Promise<VMExtensionPayload>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsGetVMHostPayloadOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-dynatrace.VMExtensionPayload" />&gt;
  - name: listAppServices(string, string, MonitorsListAppServicesOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listAppServices'
    package: '@azure/arm-dynatrace'
    summary: Gets list of App Services with Dynatrace PaaS OneAgent enabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAppServices(resourceGroupName: string, monitorName: string,
        options?: MonitorsListAppServicesOptionalParams):
        PagedAsyncIterableIterator<AppServiceInfo, AppServiceInfo[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsListAppServicesOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.AppServiceInfo" />, <xref
          uid="@azure/arm-dynatrace.AppServiceInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, MonitorsListByResourceGroupOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listByResourceGroup'
    package: '@azure/arm-dynatrace'
    summary: List MonitorResource resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        MonitorsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<MonitorResource, MonitorResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.MonitorResource" />, <xref
          uid="@azure/arm-dynatrace.MonitorResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscriptionId(MonitorsListBySubscriptionIdOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listBySubscriptionId'
    package: '@azure/arm-dynatrace'
    summary: List all MonitorResource by subscriptionId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        MonitorsListBySubscriptionIdOptionalParams):
        PagedAsyncIterableIterator<MonitorResource, MonitorResource[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsListBySubscriptionIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.MonitorResource" />, <xref
          uid="@azure/arm-dynatrace.MonitorResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listHosts(string, string, MonitorsListHostsOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listHosts'
    package: '@azure/arm-dynatrace'
    summary: >-
      List the VM/VMSS resources currently being monitored by the Dynatrace
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listHosts(resourceGroupName: string, monitorName: string,
        options?: MonitorsListHostsOptionalParams):
        PagedAsyncIterableIterator<VMInfo, VMInfo[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: <xref uid="@azure/arm-dynatrace.MonitorsListHostsOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.VMInfo" />, <xref
          uid="@azure/arm-dynatrace.VMInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listLinkableEnvironments(string, string, LinkableEnvironmentRequest,
      MonitorsListLinkableEnvironmentsOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listLinkableEnvironments'
    package: '@azure/arm-dynatrace'
    summary: >-
      Gets all the Dynatrace environments that a user can link a azure resource
      to
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listLinkableEnvironments(resourceGroupName: string,
        monitorName: string, request: LinkableEnvironmentRequest, options?:
        MonitorsListLinkableEnvironmentsOptionalParams):
        PagedAsyncIterableIterator<LinkableEnvironmentResponse,
        LinkableEnvironmentResponse[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: request
          type: <xref uid="@azure/arm-dynatrace.LinkableEnvironmentRequest" />
          description: The details of the linkable environment request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsListLinkableEnvironmentsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.LinkableEnvironmentResponse" />, <xref
          uid="@azure/arm-dynatrace.LinkableEnvironmentResponse" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listMonitoredResources(string, string,
      MonitorsListMonitoredResourcesOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.listMonitoredResources'
    package: '@azure/arm-dynatrace'
    summary: >-
      List the resources currently being monitored by the Dynatrace monitor
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMonitoredResources(resourceGroupName: string, monitorName:
        string, options?: MonitorsListMonitoredResourcesOptionalParams):
        PagedAsyncIterableIterator<MonitoredResource, MonitoredResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-dynatrace.MonitorsListMonitoredResourcesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-dynatrace.MonitoredResource" />, <xref
          uid="@azure/arm-dynatrace.MonitoredResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, MonitorResourceUpdate,
      MonitorsUpdateOptionalParams)
    uid: '@azure/arm-dynatrace.Monitors.update'
    package: '@azure/arm-dynatrace'
    summary: Update a MonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, monitorName: string,
        resource: MonitorResourceUpdate, options?:
        MonitorsUpdateOptionalParams): Promise<MonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Monitor resource name
        - id: resource
          type: <xref uid="@azure/arm-dynatrace.MonitorResourceUpdate" />
          description: The resource properties to be updated.
        - id: options
          type: <xref uid="@azure/arm-dynatrace.MonitorsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-dynatrace.MonitorResource" />&gt;
