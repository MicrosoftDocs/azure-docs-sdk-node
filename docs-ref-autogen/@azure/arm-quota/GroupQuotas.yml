### YamlMime:TSType
name: GroupQuotas
uid: '@azure/arm-quota.GroupQuotas'
package: '@azure/arm-quota'
summary: Interface representing a GroupQuotas.
fullName: GroupQuotas
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string,
      GroupQuotasCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginCreateOrUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Creates a new GroupQuota for the name passed. A RequestId will be returned
      by the Service. The

      status can be polled periodically. The status Async polling is using
      standards defined at -

      https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations.

      Use the OperationsStatus URI provided in Azure-AsyncOperation header, the
      duration will be specified

      in retry-after header. Once the operation gets to terminal state -
      Succeeded | Failed, then the URI

      will change to Get URI and full details can be checked.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(managementGroupId: string, groupQuotaName:
        string, options?: GroupQuotasCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<GroupQuotasEntity>,
        GroupQuotasEntity>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: >-
            <xref uid="@azure/arm-quota.GroupQuotasCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-quota.GroupQuotasEntity" />&gt;, <xref
          uid="@azure/arm-quota.GroupQuotasEntity" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string,
      GroupQuotasCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginCreateOrUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Creates a new GroupQuota for the name passed. A RequestId will be returned
      by the Service. The

      status can be polled periodically. The status Async polling is using
      standards defined at -

      https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations.

      Use the OperationsStatus URI provided in Azure-AsyncOperation header, the
      duration will be specified

      in retry-after header. Once the operation gets to terminal state -
      Succeeded | Failed, then the URI

      will change to Get URI and full details can be checked.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(managementGroupId: string,
        groupQuotaName: string, options?:
        GroupQuotasCreateOrUpdateOptionalParams): Promise<GroupQuotasEntity>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: >-
            <xref uid="@azure/arm-quota.GroupQuotasCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.GroupQuotasEntity" />&gt;
  - name: beginDelete(string, string, GroupQuotasDeleteOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginDelete'
    package: '@azure/arm-quota'
    summary: >-
      Deletes the GroupQuotas for the name passed. All the remaining shareQuota
      in the GroupQuotas will be

      lost.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(managementGroupId: string, groupQuotaName: string,
        options?: GroupQuotasDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<GroupQuotasDeleteHeaders>,
        GroupQuotasDeleteHeaders>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-quota.GroupQuotasDeleteHeaders" />&gt;, <xref
          uid="@azure/arm-quota.GroupQuotasDeleteHeaders" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, GroupQuotasDeleteOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginDeleteAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Deletes the GroupQuotas for the name passed. All the remaining shareQuota
      in the GroupQuotas will be

      lost.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(managementGroupId: string, groupQuotaName:
        string, options?: GroupQuotasDeleteOptionalParams):
        Promise<GroupQuotasDeleteHeaders>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-quota.GroupQuotasDeleteHeaders"
          />&gt;
  - name: beginUpdate(string, string, GroupQuotasUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will
      be returned by the

      Service. The status can be polled periodically. The status Async polling
      is using standards defined

      at -

      https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations.

      Use the OperationsStatus URI provided in Azure-AsyncOperation header, the
      duration will be specified

      in retry-after header. Once the operation gets to terminal state -
      Succeeded | Failed, then the URI

      will change to Get URI and full details can be checked.
       Any change in the filters will be applicable to the future quota assignments, existing quota
      allocated to subscriptions from the GroupQuotas remains unchanged.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(managementGroupId: string, groupQuotaName: string,
        options?: GroupQuotasUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<GroupQuotasEntity>,
        GroupQuotasEntity>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-quota.GroupQuotasEntity" />&gt;, <xref
          uid="@azure/arm-quota.GroupQuotasEntity" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, GroupQuotasUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.beginUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will
      be returned by the

      Service. The status can be polled periodically. The status Async polling
      is using standards defined

      at -

      https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations.

      Use the OperationsStatus URI provided in Azure-AsyncOperation header, the
      duration will be specified

      in retry-after header. Once the operation gets to terminal state -
      Succeeded | Failed, then the URI

      will change to Get URI and full details can be checked.
       Any change in the filters will be applicable to the future quota assignments, existing quota
      allocated to subscriptions from the GroupQuotas remains unchanged.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(managementGroupId: string, groupQuotaName:
        string, options?: GroupQuotasUpdateOptionalParams):
        Promise<GroupQuotasEntity>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.GroupQuotasEntity" />&gt;
  - name: get(string, string, GroupQuotasGetOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.get'
    package: '@azure/arm-quota'
    summary: >-
      Gets the GroupQuotas for the name passed. It will return the GroupQuotas
      properties only. The

      details on group quota can be access from the group quota APIs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(managementGroupId: string, groupQuotaName: string,
        options?: GroupQuotasGetOptionalParams): Promise<GroupQuotasEntity>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.GroupQuotasEntity" />&gt;
  - name: list(string, GroupQuotasListOptionalParams)
    uid: '@azure/arm-quota.GroupQuotas.list'
    package: '@azure/arm-quota'
    summary: >-
      Lists GroupQuotas for the scope passed. It will return the GroupQuotas
      QuotaEntity properties

      only.The details on group quota can be access from the group quota APIs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(managementGroupId: string, options?:
        GroupQuotasListOptionalParams):
        PagedAsyncIterableIterator<GroupQuotasEntity, GroupQuotasEntity[],
        PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: options
          type: <xref uid="@azure/arm-quota.GroupQuotasListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-quota.GroupQuotasEntity" />, <xref
          uid="@azure/arm-quota.GroupQuotasEntity" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
