### YamlMime:TSType
name: DeviceCodeCredential
uid: '@azure/identity.DeviceCodeCredential'
package: '@azure/identity'
summary: |-
  Enables authentication to Microsoft Entra ID using a device code
  that the user can enter into https://microsoft.com/devicelogin.
fullName: DeviceCodeCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: DeviceCodeCredential(DeviceCodeCredentialOptions)
    uid: '@azure/identity.DeviceCodeCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of DeviceCodeCredential with the details needed

      to initiate the device code authorization flow with Microsoft Entra ID.


      A message will be logged, giving users a code that they can use to
      authenticate once they go to https://microsoft.com/devicelogin


      Developers can configure how this message is shown by passing a custom
      `userPromptCallback`:


      ```ts snippet:device_code_credential_example

      import { DeviceCodeCredential } from "@azure/identity";


      const credential = new DeviceCodeCredential({
        tenantId: process.env.AZURE_TENANT_ID,
        clientId: process.env.AZURE_CLIENT_ID,
        userPromptCallback: (info) => {
          console.log("CUSTOMIZED PROMPT CALLBACK", info.message);
        },
      });

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new DeviceCodeCredential(options?: DeviceCodeCredentialOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/identity.DeviceCodeCredentialOptions" />
          description: >-
            Options for configuring the client which makes the authentication
            requests.
methods:
  - name: authenticate(string | string[], GetTokenOptions)
    uid: '@azure/identity.DeviceCodeCredential.authenticate'
    package: '@azure/identity'
    summary: >-
      Authenticates with Microsoft Entra ID and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.


      If the token can't be retrieved silently, this method will always generate
      a challenge for the user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function authenticate(scopes: string | string[], options?:
        GetTokenOptions): Promise<undefined | AuthenticationRecord>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                             TokenCredential implementation might make.
      return:
        description: ''
        type: >-
          Promise&lt;undefined | <xref
          uid="@azure/identity.AuthenticationRecord" />&gt;
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.DeviceCodeCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Microsoft Entra ID and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.


      If the user provided the option `disableAutomaticAuthentication`,

      once the token can't be retrieved silently,

      this method won't attempt to request user interaction to retrieve the
      token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           TokenCredential implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
