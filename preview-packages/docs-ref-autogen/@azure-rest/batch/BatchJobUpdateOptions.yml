### YamlMime:TSType
name: BatchJobUpdateOptions
uid: '@azure-rest/batch.BatchJobUpdateOptions'
package: '@azure-rest/batch'
summary: Parameters for updating an Azure Batch Job.
fullName: BatchJobUpdateOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: allowTaskPreemption
    uid: '@azure-rest/batch.BatchJobUpdateOptions.allowTaskPreemption'
    package: '@azure-rest/batch'
    summary: >-
      Whether Tasks in this job can be preempted by other high priority jobs. If
      the value is set to True, other high priority jobs submitted to the system
      will take precedence and will be able requeue tasks from this job. You can
      update a job's allowTaskPreemption after it has been created using the
      update job API.
    fullName: allowTaskPreemption
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'allowTaskPreemption?: boolean'
      return:
        description: ''
        type: boolean
  - name: constraints
    uid: '@azure-rest/batch.BatchJobUpdateOptions.constraints'
    package: '@azure-rest/batch'
    summary: >-
      The execution constraints for the Job. If omitted, the existing execution
      constraints are left unchanged.
    fullName: constraints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constraints?: BatchJobConstraints'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobConstraints" />
  - name: maxParallelTasks
    uid: '@azure-rest/batch.BatchJobUpdateOptions.maxParallelTasks'
    package: '@azure-rest/batch'
    summary: >-
      The maximum number of tasks that can be executed in parallel for the job.
      The value of maxParallelTasks must be -1 or greater than 0 if specified.
      If not specified, the default value is -1, which means there's no limit to
      the number of tasks that can be run at once. You can update a job's
      maxParallelTasks after it has been created using the update job API.
    fullName: maxParallelTasks
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxParallelTasks?: number'
      return:
        description: ''
        type: number
  - name: metadata
    uid: '@azure-rest/batch.BatchJobUpdateOptions.metadata'
    package: '@azure-rest/batch'
    summary: >-
      A list of name-value pairs associated with the Job as metadata. If
      omitted, the existing Job metadata is left unchanged.
    fullName: metadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'metadata?: BatchMetadataItem[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchMetadataItem" />[]
  - name: networkConfiguration
    uid: '@azure-rest/batch.BatchJobUpdateOptions.networkConfiguration'
    package: '@azure-rest/batch'
    summary: The network configuration for the Job.
    fullName: networkConfiguration
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'networkConfiguration?: BatchJobNetworkConfiguration'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobNetworkConfiguration" />
  - name: onAllTasksComplete
    uid: '@azure-rest/batch.BatchJobUpdateOptions.onAllTasksComplete'
    package: '@azure-rest/batch'
    summary: >-
      The action the Batch service should take when all Tasks in the Job are in
      the completed state. If omitted, the completion behavior is left
      unchanged. You may not change the value from terminatejob to noaction -
      that is, once you have engaged automatic Job termination, you cannot turn
      it off again. If you try to do this, the request fails with an 'invalid
      property value' error response; if you are calling the REST API directly,
      the HTTP status code is 400 (Bad Request).


      Possible values: "noaction", "terminatejob"
    fullName: onAllTasksComplete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        description: ''
        type: string
  - name: poolInfo
    uid: '@azure-rest/batch.BatchJobUpdateOptions.poolInfo'
    package: '@azure-rest/batch'
    summary: >-
      The Pool on which the Batch service runs the Job's Tasks. You may change
      the Pool for a Job only when the Job is disabled. The Patch Job call will
      fail if you include the poolInfo element and the Job is not disabled. If
      you specify an autoPoolSpecification in the poolInfo, only the keepAlive
      property of the autoPoolSpecification can be updated, and then only if the
      autoPoolSpecification has a poolLifetimeOption of Job (other job
      properties can be updated as normal). If omitted, the Job continues to run
      on its current Pool.
    fullName: poolInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'poolInfo?: BatchPoolInfo'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchPoolInfo" />
  - name: priority
    uid: '@azure-rest/batch.BatchJobUpdateOptions.priority'
    package: '@azure-rest/batch'
    summary: >-
      The priority of the Job. Priority values can range from -1000 to 1000,
      with -1000 being the lowest priority and 1000 being the highest priority.
      If omitted, the priority of the Job is left unchanged.
    fullName: priority
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'priority?: number'
      return:
        description: ''
        type: number
