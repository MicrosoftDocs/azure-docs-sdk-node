### YamlMime:TSType
name: Cache
uid: '@azure/arm-apimanagement.Cache'
package: '@azure/arm-apimanagement'
summary: Interface representing a Cache.
fullName: Cache
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, CacheContract,
      CacheCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates or updates an External Cache to be used in Api Management
      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        cacheId: string, parameters: CacheContract, options?:
        CacheCreateOrUpdateOptionalParams): Promise<CacheCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or valid
                           Azure region identifier).
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheContract" />
          description: Create or Update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CacheCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CacheCreateOrUpdateResponse" />&gt;
  - name: delete(string, string, string, string, CacheDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific Cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, cacheId:
        string, ifMatch: string, options?: CacheDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or valid
                           Azure region identifier).
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.CacheDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, CacheGetOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the Cache specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, cacheId:
        string, options?: CacheGetOptionalParams): Promise<CacheGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or valid
                           Azure region identifier).
        - id: options
          type: <xref uid="@azure/arm-apimanagement.CacheGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.CacheGetResponse"
          />&gt;
  - name: getEntityTag(string, string, string, CacheGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Cache specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        cacheId: string, options?: CacheGetEntityTagOptionalParams):
        Promise<CacheGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or valid
                           Azure region identifier).
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.CacheGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.CacheGetEntityTagHeaders" />&gt;
  - name: listByService(string, string, CacheListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.listByService'
    package: '@azure/arm-apimanagement'
    summary: >-
      Lists a collection of all external Caches in the specified service
      instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: CacheListByServiceOptionalParams):
        PagedAsyncIterableIterator<CacheContract, CacheContract[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.CacheListByServiceOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.CacheContract" />, <xref
          uid="@azure/arm-apimanagement.CacheContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, string, CacheUpdateParameters,
      CacheUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Cache.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the cache specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, cacheId:
        string, ifMatch: string, parameters: CacheUpdateParameters, options?:
        CacheUpdateOptionalParams): Promise<CacheUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: cacheId
          type: string
          description: >-
            Identifier of the Cache entity. Cache identifier (should be either
            'default' or valid
                           Azure region identifier).
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.CacheUpdateParameters" />
          description: Update parameters.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.CacheUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.CacheUpdateResponse"
          />&gt;
