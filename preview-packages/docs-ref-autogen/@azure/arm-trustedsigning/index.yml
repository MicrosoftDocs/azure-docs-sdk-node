### YamlMime:TSPackage
uid: '@azure/arm-trustedsigning'
name: '@azure/arm-trustedsigning'
summary: ''
type: package
enums:
  - '@azure/arm-trustedsigning.AzureClouds'
  - '@azure/arm-trustedsigning.KnownActionType'
  - '@azure/arm-trustedsigning.KnownCertificateProfileStatus'
  - '@azure/arm-trustedsigning.KnownCertificateStatus'
  - '@azure/arm-trustedsigning.KnownCreatedByType'
  - '@azure/arm-trustedsigning.KnownNameUnavailabilityReason'
  - '@azure/arm-trustedsigning.KnownOrigin'
  - '@azure/arm-trustedsigning.KnownProfileType'
  - '@azure/arm-trustedsigning.KnownProvisioningState'
  - '@azure/arm-trustedsigning.KnownRevocationStatus'
  - '@azure/arm-trustedsigning.KnownSkuName'
  - '@azure/arm-trustedsigning.KnownVersions'
classes:
  - '@azure/arm-trustedsigning.CodeSigningClient'
interfaces:
  - '@azure/arm-trustedsigning.AccountSku'
  - '@azure/arm-trustedsigning.AccountSkuPatch'
  - '@azure/arm-trustedsigning.Certificate'
  - '@azure/arm-trustedsigning.CertificateProfile'
  - '@azure/arm-trustedsigning.CertificateProfileProperties'
  - '@azure/arm-trustedsigning.CertificateProfilesCreateOptionalParams'
  - '@azure/arm-trustedsigning.CertificateProfilesDeleteOptionalParams'
  - '@azure/arm-trustedsigning.CertificateProfilesGetOptionalParams'
  - >-
    @azure/arm-trustedsigning.CertificateProfilesListByCodeSigningAccountOptionalParams
  - '@azure/arm-trustedsigning.CertificateProfilesOperations'
  - '@azure/arm-trustedsigning.CertificateProfilesRevokeCertificateOptionalParams'
  - '@azure/arm-trustedsigning.CheckNameAvailability'
  - '@azure/arm-trustedsigning.CheckNameAvailabilityResult'
  - '@azure/arm-trustedsigning.CodeSigningAccount'
  - '@azure/arm-trustedsigning.CodeSigningAccountPatch'
  - '@azure/arm-trustedsigning.CodeSigningAccountPatchProperties'
  - '@azure/arm-trustedsigning.CodeSigningAccountProperties'
  - >-
    @azure/arm-trustedsigning.CodeSigningAccountsCheckNameAvailabilityOptionalParams
  - '@azure/arm-trustedsigning.CodeSigningAccountsCreateOptionalParams'
  - '@azure/arm-trustedsigning.CodeSigningAccountsDeleteOptionalParams'
  - '@azure/arm-trustedsigning.CodeSigningAccountsGetOptionalParams'
  - >-
    @azure/arm-trustedsigning.CodeSigningAccountsListByResourceGroupOptionalParams
  - >-
    @azure/arm-trustedsigning.CodeSigningAccountsListBySubscriptionOptionalParams
  - '@azure/arm-trustedsigning.CodeSigningAccountsOperations'
  - '@azure/arm-trustedsigning.CodeSigningAccountsUpdateOptionalParams'
  - '@azure/arm-trustedsigning.CodeSigningClientOptionalParams'
  - '@azure/arm-trustedsigning.ErrorAdditionalInfo'
  - '@azure/arm-trustedsigning.ErrorDetail'
  - '@azure/arm-trustedsigning.ErrorResponse'
  - '@azure/arm-trustedsigning.Operation'
  - '@azure/arm-trustedsigning.OperationDisplay'
  - '@azure/arm-trustedsigning.OperationsListOptionalParams'
  - '@azure/arm-trustedsigning.OperationsOperations'
  - '@azure/arm-trustedsigning.PageSettings'
  - '@azure/arm-trustedsigning.PagedAsyncIterableIterator'
  - '@azure/arm-trustedsigning.ProxyResource'
  - '@azure/arm-trustedsigning.Resource'
  - '@azure/arm-trustedsigning.RestorePollerOptions'
  - '@azure/arm-trustedsigning.Revocation'
  - '@azure/arm-trustedsigning.RevokeCertificate'
  - '@azure/arm-trustedsigning.SystemData'
  - '@azure/arm-trustedsigning.TrackedResource'
typeAliases:
  - '@azure/arm-trustedsigning.ActionType'
  - '@azure/arm-trustedsigning.AzureSupportedClouds'
  - '@azure/arm-trustedsigning.CertificateProfileStatus'
  - '@azure/arm-trustedsigning.CertificateStatus'
  - '@azure/arm-trustedsigning.ContinuablePage'
  - '@azure/arm-trustedsigning.CreatedByType'
  - '@azure/arm-trustedsigning.NameUnavailabilityReason'
  - '@azure/arm-trustedsigning.Origin'
  - '@azure/arm-trustedsigning.ProfileType'
  - '@azure/arm-trustedsigning.ProvisioningState'
  - '@azure/arm-trustedsigning.RevocationStatus'
  - '@azure/arm-trustedsigning.SkuName'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(CodeSigningClient, string, (args: any[])
      => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-trustedsigning.restorePoller'
    package: '@azure/arm-trustedsigning'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: CodeSigningClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-trustedsigning.CodeSigningClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-trustedsigning.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
