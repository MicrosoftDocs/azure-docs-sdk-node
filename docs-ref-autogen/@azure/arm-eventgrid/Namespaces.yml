### YamlMime:TSType
name: Namespaces
uid: '@azure/arm-eventgrid.Namespaces'
package: '@azure/arm-eventgrid'
summary: Interface representing a Namespaces.
fullName: Namespaces
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Namespace,
      NamespacesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginCreateOrUpdate'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously creates or updates a new namespace with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, namespaceInfo: Namespace, options?:
        NamespacesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Namespace>, Namespace>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: namespaceInfo
          type: <xref uid="@azure/arm-eventgrid.Namespace" />
          description: Namespace information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.Namespace" />&gt;, <xref
          uid="@azure/arm-eventgrid.Namespace" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Namespace,
      NamespacesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginCreateOrUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously creates or updates a new namespace with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        namespaceName: string, namespaceInfo: Namespace, options?:
        NamespacesCreateOrUpdateOptionalParams): Promise<Namespace>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: namespaceInfo
          type: <xref uid="@azure/arm-eventgrid.Namespace" />
          description: Namespace information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.Namespace" />&gt;
  - name: beginDelete(string, string, NamespacesDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginDelete'
    package: '@azure/arm-eventgrid'
    summary: Delete existing namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, namespaceName: string,
        options?: NamespacesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.NamespacesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, NamespacesDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginDeleteAndWait'
    package: '@azure/arm-eventgrid'
    summary: Delete existing namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, namespaceName:
        string, options?: NamespacesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.NamespacesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRegenerateKey(string, string, NamespaceRegenerateKeyRequest,
      NamespacesRegenerateKeyOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginRegenerateKey'
    package: '@azure/arm-eventgrid'
    summary: Regenerate a shared access key for a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKey(resourceGroupName: string, namespaceName:
        string, regenerateKeyRequest: NamespaceRegenerateKeyRequest, options?:
        NamespacesRegenerateKeyOptionalParams):
        Promise<SimplePollerLike<OperationState<NamespaceSharedAccessKeys>,
        NamespaceSharedAccessKeys>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the Namespace.
        - id: regenerateKeyRequest
          type: <xref uid="@azure/arm-eventgrid.NamespaceRegenerateKeyRequest" />
          description: Request body to regenerate key.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesRegenerateKeyOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.NamespaceSharedAccessKeys" />&gt;, <xref
          uid="@azure/arm-eventgrid.NamespaceSharedAccessKeys" />&gt;&gt;
  - name: >-
      beginRegenerateKeyAndWait(string, string, NamespaceRegenerateKeyRequest,
      NamespacesRegenerateKeyOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginRegenerateKeyAndWait'
    package: '@azure/arm-eventgrid'
    summary: Regenerate a shared access key for a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKeyAndWait(resourceGroupName: string,
        namespaceName: string, regenerateKeyRequest:
        NamespaceRegenerateKeyRequest, options?:
        NamespacesRegenerateKeyOptionalParams):
        Promise<NamespaceSharedAccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the Namespace.
        - id: regenerateKeyRequest
          type: <xref uid="@azure/arm-eventgrid.NamespaceRegenerateKeyRequest" />
          description: Request body to regenerate key.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesRegenerateKeyOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-eventgrid.NamespaceSharedAccessKeys"
          />&gt;
  - name: >-
      beginUpdate(string, string, NamespaceUpdateParameters,
      NamespacesUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginUpdate'
    package: '@azure/arm-eventgrid'
    summary: Asynchronously updates a namespace with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, namespaceName: string,
        namespaceUpdateParameters: NamespaceUpdateParameters, options?:
        NamespacesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Namespace>, Namespace>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: namespaceUpdateParameters
          type: <xref uid="@azure/arm-eventgrid.NamespaceUpdateParameters" />
          description: Namespace update information.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.NamespacesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.Namespace" />&gt;, <xref
          uid="@azure/arm-eventgrid.Namespace" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, NamespaceUpdateParameters,
      NamespacesUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: Asynchronously updates a namespace with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, namespaceName:
        string, namespaceUpdateParameters: NamespaceUpdateParameters, options?:
        NamespacesUpdateOptionalParams): Promise<Namespace>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: namespaceUpdateParameters
          type: <xref uid="@azure/arm-eventgrid.NamespaceUpdateParameters" />
          description: Namespace update information.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.NamespacesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.Namespace" />&gt;
  - name: >-
      beginValidateCustomDomainOwnership(string, string,
      NamespacesValidateCustomDomainOwnershipOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginValidateCustomDomainOwnership'
    package: '@azure/arm-eventgrid'
    summary: >-
      Performs ownership validation via checking TXT records for all custom
      domains in a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateCustomDomainOwnership(resourceGroupName: string,
        namespaceName: string, options?:
        NamespacesValidateCustomDomainOwnershipOptionalParams):
        Promise<SimplePollerLike<OperationState<CustomDomainOwnershipValidationResult>,
        CustomDomainOwnershipValidationResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the Namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesValidateCustomDomainOwnershipOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.CustomDomainOwnershipValidationResult"
          />&gt;, <xref
          uid="@azure/arm-eventgrid.CustomDomainOwnershipValidationResult"
          />&gt;&gt;
  - name: >-
      beginValidateCustomDomainOwnershipAndWait(string, string,
      NamespacesValidateCustomDomainOwnershipOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.beginValidateCustomDomainOwnershipAndWait'
    package: '@azure/arm-eventgrid'
    summary: >-
      Performs ownership validation via checking TXT records for all custom
      domains in a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateCustomDomainOwnershipAndWait(resourceGroupName:
        string, namespaceName: string, options?:
        NamespacesValidateCustomDomainOwnershipOptionalParams):
        Promise<CustomDomainOwnershipValidationResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the Namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesValidateCustomDomainOwnershipOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-eventgrid.CustomDomainOwnershipValidationResult"
          />&gt;
  - name: get(string, string, NamespacesGetOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.get'
    package: '@azure/arm-eventgrid'
    summary: Get properties of a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string, options?:
        NamespacesGetOptionalParams): Promise<Namespace>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.NamespacesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.Namespace" />&gt;
  - name: listByResourceGroup(string, NamespacesListByResourceGroupOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.listByResourceGroup'
    package: '@azure/arm-eventgrid'
    summary: List all the namespaces under a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        NamespacesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Namespace, Namespace[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.Namespace" />, <xref
          uid="@azure/arm-eventgrid.Namespace" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(NamespacesListBySubscriptionOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.listBySubscription'
    package: '@azure/arm-eventgrid'
    summary: List all the namespaces under an Azure subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        NamespacesListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<Namespace, Namespace[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.Namespace" />, <xref
          uid="@azure/arm-eventgrid.Namespace" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listSharedAccessKeys(string, string,
      NamespacesListSharedAccessKeysOptionalParams)
    uid: '@azure/arm-eventgrid.Namespaces.listSharedAccessKeys'
    package: '@azure/arm-eventgrid'
    summary: List the two keys used to publish to a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSharedAccessKeys(resourceGroupName: string, namespaceName:
        string, options?: NamespacesListSharedAccessKeysOptionalParams):
        Promise<NamespaceSharedAccessKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.NamespacesListSharedAccessKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-eventgrid.NamespaceSharedAccessKeys"
          />&gt;
