### YamlMime:TSPackage
uid: '@azure/arm-impactreporting'
name: '@azure/arm-impactreporting'
summary: ''
type: package
enums:
  - '@azure/arm-impactreporting.KnownActionType'
  - '@azure/arm-impactreporting.KnownConfidenceLevel'
  - '@azure/arm-impactreporting.KnownCreatedByType'
  - '@azure/arm-impactreporting.KnownIncidentSource'
  - '@azure/arm-impactreporting.KnownMetricUnit'
  - '@azure/arm-impactreporting.KnownOrigin'
  - '@azure/arm-impactreporting.KnownPlatform'
  - '@azure/arm-impactreporting.KnownProtocol'
  - '@azure/arm-impactreporting.KnownProvisioningState'
  - '@azure/arm-impactreporting.KnownToolset'
  - '@azure/arm-impactreporting.KnownVersions'
classes:
  - '@azure/arm-impactreporting.ImpactClient'
interfaces:
  - '@azure/arm-impactreporting.ClientIncidentDetails'
  - '@azure/arm-impactreporting.Connectivity'
  - '@azure/arm-impactreporting.Connector'
  - '@azure/arm-impactreporting.ConnectorProperties'
  - '@azure/arm-impactreporting.ConnectorUpdate'
  - '@azure/arm-impactreporting.ConnectorUpdateProperties'
  - '@azure/arm-impactreporting.ConnectorsCreateOrUpdateOptionalParams'
  - '@azure/arm-impactreporting.ConnectorsDeleteOptionalParams'
  - '@azure/arm-impactreporting.ConnectorsGetOptionalParams'
  - '@azure/arm-impactreporting.ConnectorsListBySubscriptionOptionalParams'
  - '@azure/arm-impactreporting.ConnectorsOperations'
  - '@azure/arm-impactreporting.ConnectorsUpdateOptionalParams'
  - '@azure/arm-impactreporting.Content'
  - '@azure/arm-impactreporting.ErrorAdditionalInfo'
  - '@azure/arm-impactreporting.ErrorDetail'
  - '@azure/arm-impactreporting.ErrorDetailProperties'
  - '@azure/arm-impactreporting.ErrorResponse'
  - '@azure/arm-impactreporting.ExpectedValueRange'
  - '@azure/arm-impactreporting.ImpactCategoriesGetOptionalParams'
  - '@azure/arm-impactreporting.ImpactCategoriesListBySubscriptionOptionalParams'
  - '@azure/arm-impactreporting.ImpactCategoriesOperations'
  - '@azure/arm-impactreporting.ImpactCategory'
  - '@azure/arm-impactreporting.ImpactCategoryProperties'
  - '@azure/arm-impactreporting.ImpactClientOptionalParams'
  - '@azure/arm-impactreporting.ImpactDetails'
  - '@azure/arm-impactreporting.Insight'
  - '@azure/arm-impactreporting.InsightProperties'
  - '@azure/arm-impactreporting.InsightsCreateOptionalParams'
  - '@azure/arm-impactreporting.InsightsDeleteOptionalParams'
  - '@azure/arm-impactreporting.InsightsGetOptionalParams'
  - '@azure/arm-impactreporting.InsightsListBySubscriptionOptionalParams'
  - '@azure/arm-impactreporting.InsightsOperations'
  - '@azure/arm-impactreporting.Operation'
  - '@azure/arm-impactreporting.OperationDisplay'
  - '@azure/arm-impactreporting.OperationsListOptionalParams'
  - '@azure/arm-impactreporting.OperationsOperations'
  - '@azure/arm-impactreporting.PageSettings'
  - '@azure/arm-impactreporting.PagedAsyncIterableIterator'
  - '@azure/arm-impactreporting.Performance'
  - '@azure/arm-impactreporting.ProxyResource'
  - '@azure/arm-impactreporting.RequiredImpactProperties'
  - '@azure/arm-impactreporting.Resource'
  - '@azure/arm-impactreporting.RestorePollerOptions'
  - '@azure/arm-impactreporting.SourceOrTarget'
  - '@azure/arm-impactreporting.SystemData'
  - '@azure/arm-impactreporting.Workload'
  - '@azure/arm-impactreporting.WorkloadImpact'
  - '@azure/arm-impactreporting.WorkloadImpactProperties'
  - '@azure/arm-impactreporting.WorkloadImpactsCreateOptionalParams'
  - '@azure/arm-impactreporting.WorkloadImpactsDeleteOptionalParams'
  - '@azure/arm-impactreporting.WorkloadImpactsGetOptionalParams'
  - '@azure/arm-impactreporting.WorkloadImpactsListBySubscriptionOptionalParams'
  - '@azure/arm-impactreporting.WorkloadImpactsOperations'
typeAliases:
  - '@azure/arm-impactreporting.ActionType'
  - '@azure/arm-impactreporting.ConfidenceLevel'
  - '@azure/arm-impactreporting.ContinuablePage'
  - '@azure/arm-impactreporting.CreatedByType'
  - '@azure/arm-impactreporting.IncidentSource'
  - '@azure/arm-impactreporting.MetricUnit'
  - '@azure/arm-impactreporting.Origin'
  - '@azure/arm-impactreporting.Platform'
  - '@azure/arm-impactreporting.Protocol'
  - '@azure/arm-impactreporting.ProvisioningState'
  - '@azure/arm-impactreporting.Toolset'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(ImpactClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-impactreporting.restorePoller'
    package: '@azure/arm-impactreporting'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: ImpactClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-impactreporting.ImpactClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-impactreporting.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
