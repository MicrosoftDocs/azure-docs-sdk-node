### YamlMime:TSPackage
uid: '@azure/arm-sitemanager'
name: '@azure/arm-sitemanager'
summary: ''
type: package
interfaces:
  - '@azure/arm-sitemanager.EdgeContext'
  - '@azure/arm-sitemanager.EdgeClientOptionalParams'
  - '@azure/arm-sitemanager.ErrorAdditionalInfo'
  - '@azure/arm-sitemanager.ErrorDetail'
  - '@azure/arm-sitemanager.ErrorResponse'
  - '@azure/arm-sitemanager.PageSettings'
  - '@azure/arm-sitemanager.PagedAsyncIterableIterator'
  - '@azure/arm-sitemanager.ProxyResource'
  - '@azure/arm-sitemanager.Resource'
  - '@azure/arm-sitemanager.RestorePollerOptions'
  - '@azure/arm-sitemanager.Site'
  - '@azure/arm-sitemanager.SiteAddressProperties'
  - '@azure/arm-sitemanager.SiteProperties'
  - '@azure/arm-sitemanager.SiteUpdate'
  - '@azure/arm-sitemanager.SiteUpdateProperties'
  - '@azure/arm-sitemanager.SitesByServiceGroupCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupGetOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupListByServiceGroupOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupOperations'
  - '@azure/arm-sitemanager.SitesByServiceGroupUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionGetOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionListOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionOperations'
  - '@azure/arm-sitemanager.SitesBySubscriptionUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesGetOptionalParams'
  - '@azure/arm-sitemanager.SitesListByResourceGroupOptionalParams'
  - '@azure/arm-sitemanager.SitesOperations'
  - '@azure/arm-sitemanager.SitesUpdateOptionalParams'
  - '@azure/arm-sitemanager.SystemData'
functions:
  - name: createEdge(TokenCredential, string, EdgeClientOptionalParams)
    uid: '@azure/arm-sitemanager.createEdge'
    package: '@azure/arm-sitemanager'
    summary: Azure Edge Sites Resource Provider management API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createEdge(credential: TokenCredential, subscriptionId: string,
        options?: EdgeClientOptionalParams): EdgeContext
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: subscriptionId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/arm-sitemanager.EdgeClientOptionalParams" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
  - name: $delete(EdgeContext, string, SitesBySubscriptionDeleteOptionalParams)
    uid: '@azure/arm-sitemanager.$delete'
    package: '@azure/arm-sitemanager'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function $delete(context: EdgeContext, siteName: string, options?:
        SitesBySubscriptionDeleteOptionalParams): Promise<void>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: siteName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesBySubscriptionDeleteOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      createOrUpdate(EdgeContext, string, Site,
      SitesBySubscriptionCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sitemanager.createOrUpdate'
    package: '@azure/arm-sitemanager'
    summary: Create a Site
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(context: EdgeContext, siteName: string,
        resource: Site, options?:
        SitesBySubscriptionCreateOrUpdateOptionalParams):
        PollerLike<OperationState<Site>, Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: siteName
          type: string
          description: ''
        - id: resource
          type: <xref uid="@azure/arm-sitemanager.Site" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesBySubscriptionCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-sitemanager.Site" />&gt;, <xref
          uid="@azure/arm-sitemanager.Site" />&gt;
  - name: get(EdgeContext, string, SitesBySubscriptionGetOptionalParams)
    uid: '@azure/arm-sitemanager.get'
    package: '@azure/arm-sitemanager'
    summary: Get a Site
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(context: EdgeContext, siteName: string, options?:
        SitesBySubscriptionGetOptionalParams): Promise<Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: siteName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesBySubscriptionGetOptionalParams" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sitemanager.Site" />&gt;
  - name: >-
      listByResourceGroup(EdgeContext, string,
      SitesListByResourceGroupOptionalParams)
    uid: '@azure/arm-sitemanager.listByResourceGroup'
    package: '@azure/arm-sitemanager'
    summary: List Site resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(context: EdgeContext, resourceGroupName:
        string, options?: SitesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesListByResourceGroupOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-sitemanager.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-sitemanager.Site" />&gt;
  - name: >-
      update(EdgeContext, string, SiteUpdate,
      SitesBySubscriptionUpdateOptionalParams)
    uid: '@azure/arm-sitemanager.update'
    package: '@azure/arm-sitemanager'
    summary: Update a Site
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(context: EdgeContext, siteName: string, properties:
        SiteUpdate, options?: SitesBySubscriptionUpdateOptionalParams):
        Promise<Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: siteName
          type: string
          description: ''
        - id: properties
          type: <xref uid="@azure/arm-sitemanager.SiteUpdate" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesBySubscriptionUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sitemanager.Site" />&gt;
  - name: >-
      listByServiceGroup(EdgeContext, string,
      SitesByServiceGroupListByServiceGroupOptionalParams)
    uid: '@azure/arm-sitemanager.listByServiceGroup'
    package: '@azure/arm-sitemanager'
    summary: list Site at SG scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByServiceGroup(context: EdgeContext, servicegroupName:
        string, options?: SitesByServiceGroupListByServiceGroupOptionalParams):
        PagedAsyncIterableIterator<Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: servicegroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesByServiceGroupListByServiceGroupOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-sitemanager.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-sitemanager.Site" />&gt;
  - name: list(EdgeContext, SitesBySubscriptionListOptionalParams)
    uid: '@azure/arm-sitemanager.list'
    package: '@azure/arm-sitemanager'
    summary: List Site resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(context: EdgeContext, options?:
        SitesBySubscriptionListOptionalParams): PagedAsyncIterableIterator<Site>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-sitemanager.EdgeContext" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sitemanager.SitesBySubscriptionListOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-sitemanager.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-sitemanager.Site" />&gt;
  - name: >-
      restorePoller<TResponse, TResult>(EdgeClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-sitemanager.restorePoller'
    package: '@azure/arm-sitemanager'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: EdgeClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sitemanager.EdgeClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-sitemanager.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
enums:
  - '@azure/arm-sitemanager.KnownCreatedByType'
  - '@azure/arm-sitemanager.KnownResourceProvisioningState'
  - '@azure/arm-sitemanager.KnownVersions'
classes:
  - '@azure/arm-sitemanager.EdgeClient'
typeAliases:
  - '@azure/arm-sitemanager.ContinuablePage'
  - '@azure/arm-sitemanager.CreatedByType'
  - '@azure/arm-sitemanager.ResourceProvisioningState'
