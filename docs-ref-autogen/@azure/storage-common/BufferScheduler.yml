### YamlMime:TSType
name: BufferScheduler
uid: '@azure/storage-common.BufferScheduler'
package: '@azure/storage-common'
summary: >-
  This class accepts a Node.js Readable stream as input, and keeps reading data

  from the stream into the internal buffer structure, until it reaches
  maxBuffers.

  Every available buffer will try to trigger outgoingHandler.


  The internal buffer structure includes an incoming buffer array, and a
  outgoing

  buffer array. The incoming buffer array includes the "empty" buffers can be
  filled

  with new incoming data. The outgoing array includes the filled buffers to be

  handled by outgoingHandler. Every above buffer size is defined by parameter
  bufferSize.


  NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING +
  BUFFERS_UNDER_HANDLING


  NUM_OF_ALL_BUFFERS lesser than or equal to maxBuffers


  PERFORMANCE IMPROVEMENT TIPS:

  1. Input stream highWaterMark is better to set a same value with bufferSize
     parameter, which will avoid Buffer.concat() operations.
  2. concurrency should set a smaller value than maxBuffers, which is helpful to
     reduce the possibility when a outgoing handler waits for the stream data.
     in this situation, outgoing handlers are blocked.
     Outgoing queue shouldn't be empty.
fullName: BufferScheduler
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      BufferScheduler(ReadableStream, number, number, OutgoingHandler, number,
      BufferEncoding)
    uid: '@azure/storage-common.BufferScheduler.constructor'
    package: '@azure/storage-common'
    summary: Creates an instance of BufferScheduler.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new BufferScheduler(readable: ReadableStream, bufferSize: number,
        maxBuffers: number, outgoingHandler: OutgoingHandler, concurrency:
        number, encoding?: BufferEncoding)
      parameters:
        - id: readable
          type: ReadableStream
          description: A Node.js Readable stream
        - id: bufferSize
          type: number
          description: Buffer size of every maintained buffer
        - id: maxBuffers
          type: number
          description: How many buffers can be allocated
        - id: outgoingHandler
          type: <xref uid="@azure/storage-common.OutgoingHandler" />
          description: |-
            An async function scheduled to be
                                                     triggered when a buffer fully filled
                                                     with stream data
        - id: concurrency
          type: number
          description: Concurrency of executing outgoingHandlers (&gt;0)
        - id: encoding
          type: BufferEncoding
          description: '[Optional] Encoding of Readable stream when it''s a string stream'
methods:
  - name: do()
    uid: '@azure/storage-common.BufferScheduler.do'
    package: '@azure/storage-common'
    summary: >-
      Start the scheduler, will return error when stream of any of the
      outgoingHandlers

      returns error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function do(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
