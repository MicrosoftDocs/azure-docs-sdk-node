### YamlMime:TSType
name: CaCertificates
uid: '@azure/arm-eventgrid.CaCertificates'
package: '@azure/arm-eventgrid'
summary: Interface representing a CaCertificates.
fullName: CaCertificates
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, CaCertificate,
      CaCertificatesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.beginCreateOrUpdate'
    package: '@azure/arm-eventgrid'
    summary: Create or update a CA certificate with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, caCertificateName: string, caCertificateInfo: CaCertificate,
        options?: CaCertificatesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CaCertificate>, CaCertificate>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: caCertificateName
          type: string
          description: The CA certificate name.
        - id: caCertificateInfo
          type: <xref uid="@azure/arm-eventgrid.CaCertificate" />
          description: CA certificate information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.CaCertificatesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.CaCertificate" />&gt;, <xref
          uid="@azure/arm-eventgrid.CaCertificate" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, CaCertificate,
      CaCertificatesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.beginCreateOrUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: Create or update a CA certificate with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        namespaceName: string, caCertificateName: string, caCertificateInfo:
        CaCertificate, options?: CaCertificatesCreateOrUpdateOptionalParams):
        Promise<CaCertificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: caCertificateName
          type: string
          description: The CA certificate name.
        - id: caCertificateInfo
          type: <xref uid="@azure/arm-eventgrid.CaCertificate" />
          description: CA certificate information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.CaCertificatesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.CaCertificate" />&gt;
  - name: beginDelete(string, string, string, CaCertificatesDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.beginDelete'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing CA certificate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, namespaceName: string,
        caCertificateName: string, options?:
        CaCertificatesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: caCertificateName
          type: string
          description: Name of the CA certificate.
        - id: options
          type: >-
            <xref uid="@azure/arm-eventgrid.CaCertificatesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      CaCertificatesDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.beginDeleteAndWait'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing CA certificate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, namespaceName:
        string, caCertificateName: string, options?:
        CaCertificatesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: caCertificateName
          type: string
          description: Name of the CA certificate.
        - id: options
          type: >-
            <xref uid="@azure/arm-eventgrid.CaCertificatesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, CaCertificatesGetOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.get'
    package: '@azure/arm-eventgrid'
    summary: Get properties of a CA certificate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        caCertificateName: string, options?: CaCertificatesGetOptionalParams):
        Promise<CaCertificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: caCertificateName
          type: string
          description: Name of the CA certificate.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.CaCertificatesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.CaCertificate" />&gt;
  - name: >-
      listByNamespace(string, string,
      CaCertificatesListByNamespaceOptionalParams)
    uid: '@azure/arm-eventgrid.CaCertificates.listByNamespace'
    package: '@azure/arm-eventgrid'
    summary: Get all the CA certificates under a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: CaCertificatesListByNamespaceOptionalParams):
        PagedAsyncIterableIterator<CaCertificate, CaCertificate[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.CaCertificatesListByNamespaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.CaCertificate" />, <xref
          uid="@azure/arm-eventgrid.CaCertificate" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
