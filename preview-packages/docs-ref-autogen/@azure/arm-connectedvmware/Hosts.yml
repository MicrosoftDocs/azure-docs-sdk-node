### YamlMime:TSType
name: Hosts
uid: '@azure/arm-connectedvmware.Hosts'
package: '@azure/arm-connectedvmware'
summary: Interface representing a Hosts.
fullName: Hosts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, HostsCreateOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.beginCreate'
    package: '@azure/arm-connectedvmware'
    summary: Create Or Update host.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, hostName: string,
        options?: HostsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Host>, Host>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-connectedvmware.Host" />&gt;, <xref
          uid="@azure/arm-connectedvmware.Host" />&gt;&gt;
  - name: beginCreateAndWait(string, string, HostsCreateOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.beginCreateAndWait'
    package: '@azure/arm-connectedvmware'
    summary: Create Or Update host.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, hostName: string,
        options?: HostsCreateOptionalParams): Promise<Host>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-connectedvmware.Host" />&gt;
  - name: beginDelete(string, string, HostsDeleteOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.beginDelete'
    package: '@azure/arm-connectedvmware'
    summary: Implements host DELETE method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, hostName: string,
        options?: HostsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, HostsDeleteOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.beginDeleteAndWait'
    package: '@azure/arm-connectedvmware'
    summary: Implements host DELETE method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, hostName: string,
        options?: HostsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, HostsGetOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.get'
    package: '@azure/arm-connectedvmware'
    summary: Implements host GET method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, hostName: string, options?:
        HostsGetOptionalParams): Promise<Host>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-connectedvmware.Host" />&gt;
  - name: list(HostsListOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.list'
    package: '@azure/arm-connectedvmware'
    summary: List of hosts in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: HostsListOptionalParams):
        PagedAsyncIterableIterator<Host, Host[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-connectedvmware.Host" />, <xref
          uid="@azure/arm-connectedvmware.Host" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, HostsListByResourceGroupOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.listByResourceGroup'
    package: '@azure/arm-connectedvmware'
    summary: List of hosts in a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        HostsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Host, Host[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-connectedvmware.HostsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-connectedvmware.Host" />, <xref
          uid="@azure/arm-connectedvmware.Host" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, string, HostsUpdateOptionalParams)
    uid: '@azure/arm-connectedvmware.Hosts.update'
    package: '@azure/arm-connectedvmware'
    summary: API to update certain properties of the host resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, hostName: string, options?:
        HostsUpdateOptionalParams): Promise<Host>
      parameters:
        - id: resourceGroupName
          type: string
          description: The Resource Group Name.
        - id: hostName
          type: string
          description: Name of the host.
        - id: options
          type: <xref uid="@azure/arm-connectedvmware.HostsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-connectedvmware.Host" />&gt;
