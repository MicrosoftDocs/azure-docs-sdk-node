### YamlMime:TSType
name: GlobalSchema
uid: '@azure/arm-apimanagement.GlobalSchema'
package: '@azure/arm-apimanagement'
summary: Interface representing a GlobalSchema.
fullName: GlobalSchema
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, GlobalSchemaContract,
      GlobalSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.beginCreateOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates new or updates existing specified Schema of the API Management
      service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, schemaId: string, parameters: GlobalSchemaContract, options?:
        GlobalSchemaCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<GlobalSchemaCreateOrUpdateResponse>,
        GlobalSchemaCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GlobalSchemaContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GlobalSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaCreateOrUpdateResponse"
          />&gt;, <xref
          uid="@azure/arm-apimanagement.GlobalSchemaCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, GlobalSchemaContract,
      GlobalSchemaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.beginCreateOrUpdateAndWait'
    package: '@azure/arm-apimanagement'
    summary: >-
      Creates new or updates existing specified Schema of the API Management
      service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serviceName: string, schemaId: string, parameters: GlobalSchemaContract,
        options?: GlobalSchemaCreateOrUpdateOptionalParams):
        Promise<GlobalSchemaCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GlobalSchemaContract" />
          description: Create or update parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GlobalSchemaCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaCreateOrUpdateResponse"
          />&gt;
  - name: delete(string, string, string, string, GlobalSchemaDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific Schema.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        schemaId: string, ifMatch: string, options?:
        GlobalSchemaDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GlobalSchemaDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, GlobalSchemaGetOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the Schema specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, schemaId:
        string, options?: GlobalSchemaGetOptionalParams):
        Promise<GlobalSchemaGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.GlobalSchemaGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string,
      GlobalSchemaGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the Schema specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        schemaId: string, options?: GlobalSchemaGetEntityTagOptionalParams):
        Promise<GlobalSchemaGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: schemaId
          type: string
          description: >-
            Schema id identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GlobalSchemaGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaGetEntityTagHeaders" />&gt;
  - name: listByService(string, string, GlobalSchemaListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.GlobalSchema.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of schemas registered with service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: GlobalSchemaListByServiceOptionalParams):
        PagedAsyncIterableIterator<GlobalSchemaContract, GlobalSchemaContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GlobalSchemaListByServiceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.GlobalSchemaContract" />, <xref
          uid="@azure/arm-apimanagement.GlobalSchemaContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
