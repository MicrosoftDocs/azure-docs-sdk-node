### YamlMime:TSPackage
uid: '@azure/arm-lambdatesthyperexecute'
name: '@azure/arm-lambdatesthyperexecute'
summary: ''
type: package
interfaces:
  - '@azure/arm-lambdatesthyperexecute.HyperExecuteContext'
  - '@azure/arm-lambdatesthyperexecute.ErrorAdditionalInfo'
  - '@azure/arm-lambdatesthyperexecute.ErrorDetail'
  - '@azure/arm-lambdatesthyperexecute.ErrorResponse'
  - '@azure/arm-lambdatesthyperexecute.HyperExecuteClientOptionalParams'
  - '@azure/arm-lambdatesthyperexecute.ManagedServiceIdentity'
  - '@azure/arm-lambdatesthyperexecute.MarketplaceDetails'
  - '@azure/arm-lambdatesthyperexecute.OfferDetails'
  - '@azure/arm-lambdatesthyperexecute.Operation'
  - '@azure/arm-lambdatesthyperexecute.OperationDisplay'
  - '@azure/arm-lambdatesthyperexecute.OperationsListOptionalParams'
  - '@azure/arm-lambdatesthyperexecute.OperationsOperations'
  - '@azure/arm-lambdatesthyperexecute.OrganizationProperties'
  - '@azure/arm-lambdatesthyperexecute.OrganizationResource'
  - '@azure/arm-lambdatesthyperexecute.OrganizationResourceUpdate'
  - '@azure/arm-lambdatesthyperexecute.OrganizationsCreateOrUpdateOptionalParams'
  - '@azure/arm-lambdatesthyperexecute.OrganizationsDeleteOptionalParams'
  - '@azure/arm-lambdatesthyperexecute.OrganizationsGetOptionalParams'
  - >-
    @azure/arm-lambdatesthyperexecute.OrganizationsListByResourceGroupOptionalParams
  - >-
    @azure/arm-lambdatesthyperexecute.OrganizationsListBySubscriptionOptionalParams
  - '@azure/arm-lambdatesthyperexecute.OrganizationsOperations'
  - '@azure/arm-lambdatesthyperexecute.OrganizationsUpdateOptionalParams'
  - '@azure/arm-lambdatesthyperexecute.PageSettings'
  - '@azure/arm-lambdatesthyperexecute.PagedAsyncIterableIterator'
  - '@azure/arm-lambdatesthyperexecute.PartnerProperties'
  - '@azure/arm-lambdatesthyperexecute.Resource'
  - '@azure/arm-lambdatesthyperexecute.RestorePollerOptions'
  - '@azure/arm-lambdatesthyperexecute.SingleSignOnPropertiesV2'
  - '@azure/arm-lambdatesthyperexecute.SystemData'
  - '@azure/arm-lambdatesthyperexecute.TrackedResource'
  - '@azure/arm-lambdatesthyperexecute.UserAssignedIdentity'
  - '@azure/arm-lambdatesthyperexecute.UserDetails'
functions:
  - name: >-
      createHyperExecute(TokenCredential, string,
      HyperExecuteClientOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.createHyperExecute'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createHyperExecute(credential: TokenCredential, subscriptionId:
        string, options?: HyperExecuteClientOptionalParams): HyperExecuteContext
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: subscriptionId
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.HyperExecuteClientOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
  - name: list(HyperExecuteContext, OperationsListOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.list'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: List the operations for the provider
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(context: HyperExecuteContext, options?:
        OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OperationsListOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/arm-lambdatesthyperexecute.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-lambdatesthyperexecute.Operation" />&gt;
  - name: >-
      $delete(HyperExecuteContext, string, string,
      OrganizationsDeleteOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.$delete'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function $delete(context: HyperExecuteContext, resourceGroupName:
        string, organizationname: string, options?:
        OrganizationsDeleteOptionalParams): PollerLike<OperationState<void>,
        void>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsDeleteOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;
  - name: >-
      createOrUpdate(HyperExecuteContext, string, string, OrganizationResource,
      OrganizationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.createOrUpdate'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: Create a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(context: HyperExecuteContext, resourceGroupName:
        string, organizationname: string, resource: OrganizationResource,
        options?: OrganizationsCreateOrUpdateOptionalParams):
        PollerLike<OperationState<OrganizationResource>, OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: resource
          type: >-
            <xref uid="@azure/arm-lambdatesthyperexecute.OrganizationResource"
            />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-lambdatesthyperexecute.OrganizationResource" />&gt;,
          <xref uid="@azure/arm-lambdatesthyperexecute.OrganizationResource"
          />&gt;
  - name: get(HyperExecuteContext, string, string, OrganizationsGetOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.get'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: Get a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(context: HyperExecuteContext, resourceGroupName: string,
        organizationname: string, options?: OrganizationsGetOptionalParams):
        Promise<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsGetOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-lambdatesthyperexecute.OrganizationResource" />&gt;
  - name: >-
      listByResourceGroup(HyperExecuteContext, string,
      OrganizationsListByResourceGroupOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.listByResourceGroup'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: List OrganizationResource resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(context: HyperExecuteContext,
        resourceGroupName: string, options?:
        OrganizationsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsListByResourceGroupOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/arm-lambdatesthyperexecute.PagedAsyncIterableIterator"
          />&lt;<xref
          uid="@azure/arm-lambdatesthyperexecute.OrganizationResource" />&gt;
  - name: >-
      listBySubscription(HyperExecuteContext,
      OrganizationsListBySubscriptionOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.listBySubscription'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: List OrganizationResource resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(context: HyperExecuteContext, options?:
        OrganizationsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsListBySubscriptionOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/arm-lambdatesthyperexecute.PagedAsyncIterableIterator"
          />&lt;<xref
          uid="@azure/arm-lambdatesthyperexecute.OrganizationResource" />&gt;
  - name: >-
      update(HyperExecuteContext, string, string, OrganizationResourceUpdate,
      OrganizationsUpdateOptionalParams)
    uid: '@azure/arm-lambdatesthyperexecute.update'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: Update a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(context: HyperExecuteContext, resourceGroupName: string,
        organizationname: string, properties: OrganizationResourceUpdate,
        options?: OrganizationsUpdateOptionalParams):
        Promise<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: properties
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationResourceUpdate"
            />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-lambdatesthyperexecute.OrganizationsUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-lambdatesthyperexecute.OrganizationResource" />&gt;
  - name: >-
      restorePoller<TResponse, TResult>(HyperExecuteClient, string, (args:
      any[]) => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-lambdatesthyperexecute.restorePoller'
    package: '@azure/arm-lambdatesthyperexecute'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: HyperExecuteClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-lambdatesthyperexecute.HyperExecuteClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-lambdatesthyperexecute.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
enums:
  - '@azure/arm-lambdatesthyperexecute.KnownActionType'
  - '@azure/arm-lambdatesthyperexecute.KnownCreatedByType'
  - '@azure/arm-lambdatesthyperexecute.KnownManagedServiceIdentityType'
  - '@azure/arm-lambdatesthyperexecute.KnownMarketplaceSubscriptionStatus'
  - '@azure/arm-lambdatesthyperexecute.KnownOrigin'
  - '@azure/arm-lambdatesthyperexecute.KnownResourceProvisioningState'
  - '@azure/arm-lambdatesthyperexecute.KnownSingleSignOnStates'
  - '@azure/arm-lambdatesthyperexecute.KnownSingleSignOnType'
  - '@azure/arm-lambdatesthyperexecute.KnownVersions'
classes:
  - '@azure/arm-lambdatesthyperexecute.HyperExecuteClient'
typeAliases:
  - '@azure/arm-lambdatesthyperexecute.ActionType'
  - '@azure/arm-lambdatesthyperexecute.ContinuablePage'
  - '@azure/arm-lambdatesthyperexecute.CreatedByType'
  - '@azure/arm-lambdatesthyperexecute.ManagedServiceIdentityType'
  - '@azure/arm-lambdatesthyperexecute.MarketplaceSubscriptionStatus'
  - '@azure/arm-lambdatesthyperexecute.Origin'
  - '@azure/arm-lambdatesthyperexecute.ResourceProvisioningState'
  - '@azure/arm-lambdatesthyperexecute.SingleSignOnStates'
  - '@azure/arm-lambdatesthyperexecute.SingleSignOnType'
