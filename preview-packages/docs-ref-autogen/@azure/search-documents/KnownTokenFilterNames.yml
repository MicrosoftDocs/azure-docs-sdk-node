### YamlMime:TSEnum
name: KnownTokenFilterNames
uid: '@azure/search-documents.KnownTokenFilterNames'
package: '@azure/search-documents'
summary: Defines values for TokenFilterName.
fullName: KnownTokenFilterNames
remarks: ''
isDeprecated: false
fields:
  - name: Apostrophe
    uid: '@azure/search-documents.KnownTokenFilterNames.Apostrophe'
    package: '@azure/search-documents'
    summary: >-
      Strips all characters after an apostrophe (including the apostrophe
      itself). See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/tr/ApostropheFilter.html
  - name: ArabicNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.ArabicNormalization'
    package: '@azure/search-documents'
    summary: >-
      A token filter that applies the Arabic normalizer to normalize the
      orthography. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ar/ArabicNormalizationFilter.html
  - name: AsciiFolding
    uid: '@azure/search-documents.KnownTokenFilterNames.AsciiFolding'
    package: '@azure/search-documents'
    summary: >-
      Converts alphabetic, numeric, and symbolic Unicode characters which are
      not in the first 127

      ASCII characters (the "Basic Latin" Unicode block) into their ASCII
      equivalents, if such

      equivalents exist. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ASCIIFoldingFilter.html
  - name: CjkBigram
    uid: '@azure/search-documents.KnownTokenFilterNames.CjkBigram'
    package: '@azure/search-documents'
    summary: >-
      Forms bigrams of CJK terms that are generated from StandardTokenizer. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKBigramFilter.html
  - name: CjkWidth
    uid: '@azure/search-documents.KnownTokenFilterNames.CjkWidth'
    package: '@azure/search-documents'
    summary: >-
      Normalizes CJK width differences. Folds fullwidth ASCII variants into the
      equivalent basic

      Latin, and half-width Katakana variants into the equivalent Kana. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/cjk/CJKWidthFilter.html
  - name: Classic
    uid: '@azure/search-documents.KnownTokenFilterNames.Classic'
    package: '@azure/search-documents'
    summary: >-
      Removes English possessives, and dots from acronyms. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/standard/ClassicFilter.html
  - name: CommonGram
    uid: '@azure/search-documents.KnownTokenFilterNames.CommonGram'
    package: '@azure/search-documents'
    summary: >-
      Construct bigrams for frequently occurring terms while indexing. Single
      terms are still

      indexed too, with bigrams overlaid. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/commongrams/CommonGramsFilter.html
  - name: EdgeNGram
    uid: '@azure/search-documents.KnownTokenFilterNames.EdgeNGram'
    package: '@azure/search-documents'
    summary: >-
      Generates n-grams of the given size(s) starting from the front or the back
      of an input token.

      See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.html
  - name: Elision
    uid: '@azure/search-documents.KnownTokenFilterNames.Elision'
    package: '@azure/search-documents'
    summary: >-
      Removes elisions. For example, "l'avion" (the plane) will be converted to
      "avion" (plane). See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/util/ElisionFilter.html
  - name: GermanNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.GermanNormalization'
    package: '@azure/search-documents'
    summary: >-
      Normalizes German characters according to the heuristics of the German2
      snowball algorithm.

      See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/de/GermanNormalizationFilter.html
  - name: HindiNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.HindiNormalization'
    package: '@azure/search-documents'
    summary: >-
      Normalizes text in Hindi to remove some differences in spelling
      variations. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/hi/HindiNormalizationFilter.html
  - name: IndicNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.IndicNormalization'
    package: '@azure/search-documents'
    summary: >-
      Normalizes the Unicode representation of text in Indian languages. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/in/IndicNormalizationFilter.html
  - name: KeywordRepeat
    uid: '@azure/search-documents.KnownTokenFilterNames.KeywordRepeat'
    package: '@azure/search-documents'
    summary: >-
      Emits each incoming token twice, once as keyword and once as non-keyword.
      See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordRepeatFilter.html
  - name: KStem
    uid: '@azure/search-documents.KnownTokenFilterNames.KStem'
    package: '@azure/search-documents'
    summary: >-
      A high-performance kstem filter for English. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/en/KStemFilter.html
  - name: Length
    uid: '@azure/search-documents.KnownTokenFilterNames.Length'
    package: '@azure/search-documents'
    summary: >-
      Removes words that are too long or too short. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LengthFilter.html
  - name: Limit
    uid: '@azure/search-documents.KnownTokenFilterNames.Limit'
    package: '@azure/search-documents'
    summary: >-
      Limits the number of tokens while indexing. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilter.html
  - name: Lowercase
    uid: '@azure/search-documents.KnownTokenFilterNames.Lowercase'
    package: '@azure/search-documents'
    summary: >-
      Normalizes token text to lower case. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/LowerCaseFilter.htm
  - name: NGram
    uid: '@azure/search-documents.KnownTokenFilterNames.NGram'
    package: '@azure/search-documents'
    summary: >-
      Generates n-grams of the given size(s). See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ngram/NGramTokenFilter.html
  - name: PersianNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.PersianNormalization'
    package: '@azure/search-documents'
    summary: >-
      Applies normalization for Persian. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/fa/PersianNormalizationFilter.html
  - name: Phonetic
    uid: '@azure/search-documents.KnownTokenFilterNames.Phonetic'
    package: '@azure/search-documents'
    summary: >-
      Create tokens for phonetic matches. See

      https://lucene.apache.org/core/4_10_3/analyzers-phonetic/org/apache/lucene/analysis/phonetic/package-tree.html
  - name: PorterStem
    uid: '@azure/search-documents.KnownTokenFilterNames.PorterStem'
    package: '@azure/search-documents'
    summary: |-
      Uses the Porter stemming algorithm to transform the token stream. See
      http://tartarus.org/~martin/PorterStemmer
  - name: Reverse
    uid: '@azure/search-documents.KnownTokenFilterNames.Reverse'
    package: '@azure/search-documents'
    summary: >-
      Reverses the token string. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/reverse/ReverseStringFilter.html
  - name: ScandinavianFoldingNormalization
    uid: >-
      @azure/search-documents.KnownTokenFilterNames.ScandinavianFoldingNormalization
    package: '@azure/search-documents'
    summary: >-
      Folds Scandinavian characters åÅäæÄÆ-&gt;a and öÖøØ-&gt;o. It also
      discriminates against use

      of double vowels aa, ae, ao, oe and oo, leaving just the first one. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianFoldingFilter.html
  - name: ScandinavianNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.ScandinavianNormalization'
    package: '@azure/search-documents'
    summary: >-
      Normalizes use of the interchangeable Scandinavian characters. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/ScandinavianNormalizationFilter.html
  - name: Shingle
    uid: '@azure/search-documents.KnownTokenFilterNames.Shingle'
    package: '@azure/search-documents'
    summary: >-
      Creates combinations of tokens as a single token. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/shingle/ShingleFilter.html
  - name: Snowball
    uid: '@azure/search-documents.KnownTokenFilterNames.Snowball'
    package: '@azure/search-documents'
    summary: >-
      A filter that stems words using a Snowball-generated stemmer. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/snowball/SnowballFilter.html
  - name: SoraniNormalization
    uid: '@azure/search-documents.KnownTokenFilterNames.SoraniNormalization'
    package: '@azure/search-documents'
    summary: >-
      Normalizes the Unicode representation of Sorani text. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/ckb/SoraniNormalizationFilter.html
  - name: Stemmer
    uid: '@azure/search-documents.KnownTokenFilterNames.Stemmer'
    package: '@azure/search-documents'
    summary: >-
      Language specific stemming filter. See

      https://learn.microsoft.com/rest/api/searchservice/Custom-analyzers-in-Azure-Search#TokenFilters
  - name: Stopwords
    uid: '@azure/search-documents.KnownTokenFilterNames.Stopwords'
    package: '@azure/search-documents'
    summary: >-
      Removes stop words from a token stream. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/StopFilter.html
  - name: Trim
    uid: '@azure/search-documents.KnownTokenFilterNames.Trim'
    package: '@azure/search-documents'
    summary: >-
      Trims leading and trailing whitespace from tokens. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TrimFilter.html
  - name: Truncate
    uid: '@azure/search-documents.KnownTokenFilterNames.Truncate'
    package: '@azure/search-documents'
    summary: >-
      Truncates the terms to a specific length. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.html
  - name: Unique
    uid: '@azure/search-documents.KnownTokenFilterNames.Unique'
    package: '@azure/search-documents'
    summary: >-
      Filters out tokens with same text as the previous token. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.html
  - name: Uppercase
    uid: '@azure/search-documents.KnownTokenFilterNames.Uppercase'
    package: '@azure/search-documents'
    summary: >-
      Normalizes token text to upper case. See

      http://lucene.apache.org/core/4_10_3/analyzers-common/org/apache/lucene/analysis/core/UpperCaseFilter.html
  - name: WordDelimiter
    uid: '@azure/search-documents.KnownTokenFilterNames.WordDelimiter'
    package: '@azure/search-documents'
    summary: >-
      Splits words into subwords and performs optional transformations on
      subword groups.
