### YamlMime:TSType
name: Providers
uid: '@azure/arm-resources.Providers'
package: '@azure/arm-resources'
summary: Interface representing a Providers.
fullName: Providers
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: get(string, ProvidersGetOptionalParams)
    uid: '@azure/arm-resources.Providers.get'
    package: '@azure/arm-resources'
    summary: Gets the specified resource provider.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceProviderNamespace: string, options?:
        ProvidersGetOptionalParams): Promise<Provider>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: options
          type: <xref uid="@azure/arm-resources.ProvidersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resources.Provider" />&gt;
  - name: getAtTenantScope(string, ProvidersGetAtTenantScopeOptionalParams)
    uid: '@azure/arm-resources.Providers.getAtTenantScope'
    package: '@azure/arm-resources'
    summary: Gets the specified resource provider at the tenant level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtTenantScope(resourceProviderNamespace: string, options?:
        ProvidersGetAtTenantScopeOptionalParams): Promise<Provider>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ProvidersGetAtTenantScopeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resources.Provider" />&gt;
  - name: list(ProvidersListOptionalParams)
    uid: '@azure/arm-resources.Providers.list'
    package: '@azure/arm-resources'
    summary: Gets all resource providers for a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ProvidersListOptionalParams):
        PagedAsyncIterableIterator<Provider, Provider[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-resources.ProvidersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-resources.Provider" />, <xref
          uid="@azure/arm-resources.Provider" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAtTenantScope(ProvidersListAtTenantScopeOptionalParams)
    uid: '@azure/arm-resources.Providers.listAtTenantScope'
    package: '@azure/arm-resources'
    summary: Gets all resource providers for the tenant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAtTenantScope(options?:
        ProvidersListAtTenantScopeOptionalParams):
        PagedAsyncIterableIterator<Provider, Provider[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ProvidersListAtTenantScopeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-resources.Provider" />, <xref
          uid="@azure/arm-resources.Provider" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: providerPermissions(string, ProvidersProviderPermissionsOptionalParams)
    uid: '@azure/arm-resources.Providers.providerPermissions'
    package: '@azure/arm-resources'
    summary: Get the provider permissions.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function providerPermissions(resourceProviderNamespace: string,
        options?: ProvidersProviderPermissionsOptionalParams):
        Promise<ProviderPermissionListResult>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ProvidersProviderPermissionsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resources.ProviderPermissionListResult" />&gt;
  - name: register(string, ProvidersRegisterOptionalParams)
    uid: '@azure/arm-resources.Providers.register'
    package: '@azure/arm-resources'
    summary: Registers a subscription with a resource provider.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function register(resourceProviderNamespace: string, options?:
        ProvidersRegisterOptionalParams): Promise<Provider>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider to register.
        - id: options
          type: <xref uid="@azure/arm-resources.ProvidersRegisterOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resources.Provider" />&gt;
  - name: >-
      registerAtManagementGroupScope(string, string,
      ProvidersRegisterAtManagementGroupScopeOptionalParams)
    uid: '@azure/arm-resources.Providers.registerAtManagementGroupScope'
    package: '@azure/arm-resources'
    summary: >-
      Registers a management group with a resource provider. Use this operation
      to register a resource

      provider with resource types that can be deployed at the management group
      scope. It does not

      recursively register subscriptions within the management group. Instead,
      you must register

      subscriptions individually.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function registerAtManagementGroupScope(resourceProviderNamespace:
        string, groupId: string, options?:
        ProvidersRegisterAtManagementGroupScopeOptionalParams): Promise<void>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider to register.
        - id: groupId
          type: string
          description: The management group ID.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resources.ProvidersRegisterAtManagementGroupScopeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: unregister(string, ProvidersUnregisterOptionalParams)
    uid: '@azure/arm-resources.Providers.unregister'
    package: '@azure/arm-resources'
    summary: Unregisters a subscription from a resource provider.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function unregister(resourceProviderNamespace: string, options?:
        ProvidersUnregisterOptionalParams): Promise<Provider>
      parameters:
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider to unregister.
        - id: options
          type: >-
            <xref uid="@azure/arm-resources.ProvidersUnregisterOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-resources.Provider" />&gt;
