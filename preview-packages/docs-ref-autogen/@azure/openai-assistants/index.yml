### YamlMime:TSPackage
uid: '@azure/openai-assistants'
name: '@azure/openai-assistants'
summary: ''
type: package
typeAliases:
  - '@azure/openai-assistants.AssistantsContext'
  - '@azure/openai-assistants.FilePurpose'
  - '@azure/openai-assistants.ListSortOrder'
  - '@azure/openai-assistants.MessageContent'
  - '@azure/openai-assistants.MessageRole'
  - '@azure/openai-assistants.MessageTextAnnotation'
  - '@azure/openai-assistants.RequiredToolCall'
  - '@azure/openai-assistants.RunStatus'
  - '@azure/openai-assistants.RunStepDetails'
  - '@azure/openai-assistants.RunStepErrorCode'
  - '@azure/openai-assistants.RunStepStatus'
  - '@azure/openai-assistants.RunStepType'
  - '@azure/openai-assistants.ToolCall'
  - '@azure/openai-assistants.ToolDefinition'
  - '@azure/openai-assistants.CancelRunParameters'
  - '@azure/openai-assistants.CodeInterpreterToolCallOutputOutput'
  - '@azure/openai-assistants.CreateAssistantFileParameters'
  - '@azure/openai-assistants.CreateAssistantParameters'
  - '@azure/openai-assistants.CreateMessageParameters'
  - '@azure/openai-assistants.CreateRunParameters'
  - '@azure/openai-assistants.CreateThreadAndRunParameters'
  - '@azure/openai-assistants.CreateThreadParameters'
  - '@azure/openai-assistants.DeleteAssistantFileParameters'
  - '@azure/openai-assistants.DeleteAssistantParameters'
  - '@azure/openai-assistants.DeleteFileParameters'
  - '@azure/openai-assistants.DeleteThreadParameters'
  - '@azure/openai-assistants.GetAssistantFileParameters'
  - '@azure/openai-assistants.GetAssistantParameters'
  - '@azure/openai-assistants.GetFileParameters'
  - '@azure/openai-assistants.GetMessageFileParameters'
  - '@azure/openai-assistants.GetMessageParameters'
  - '@azure/openai-assistants.GetRunParameters'
  - '@azure/openai-assistants.GetRunStepParameters'
  - '@azure/openai-assistants.GetThreadParameters'
  - '@azure/openai-assistants.ListAssistantFilesParameters'
  - '@azure/openai-assistants.ListAssistantsParameters'
  - '@azure/openai-assistants.ListFilesParameters'
  - '@azure/openai-assistants.ListMessageFilesParameters'
  - '@azure/openai-assistants.ListMessagesParameters'
  - '@azure/openai-assistants.ListRunStepsParameters'
  - '@azure/openai-assistants.ListRunsParameters'
  - '@azure/openai-assistants.MessageContentOutput'
  - '@azure/openai-assistants.MessageTextAnnotationOutput'
  - '@azure/openai-assistants.RequiredActionOutput'
  - '@azure/openai-assistants.RequiredToolCallOutput'
  - '@azure/openai-assistants.RunStepDetailsOutput'
  - '@azure/openai-assistants.SubmitToolOutputsToRunParameters'
  - '@azure/openai-assistants.ToolCallOutput'
  - '@azure/openai-assistants.ToolDefinitionOutput'
  - '@azure/openai-assistants.UpdateAssistantParameters'
  - '@azure/openai-assistants.UpdateMessageParameters'
  - '@azure/openai-assistants.UpdateRunParameters'
  - '@azure/openai-assistants.UpdateThreadParameters'
  - '@azure/openai-assistants.UploadFileParameters'
functions:
  - name: cancelRun(AssistantsContext, string, string, CancelRunOptions)
    uid: '@azure/openai-assistants.cancelRun'
    package: '@azure/openai-assistants'
    summary: Cancels a run of an in progress thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function cancelRun(context: AssistantsContext, threadId: string, runId:
        string, options?: CancelRunOptions): Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CancelRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: >-
      createAssistant(AssistantsContext, AssistantCreationOptions,
      CreateAssistantOptions)
    uid: '@azure/openai-assistants.createAssistant'
    package: '@azure/openai-assistants'
    summary: Creates a new assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAssistant(context: AssistantsContext, body:
        AssistantCreationOptions, options?: CreateAssistantOptions):
        Promise<Assistant>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: body
          type: <xref uid="@azure/openai-assistants.AssistantCreationOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateAssistantOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: >-
      createAssistantFile(AssistantsContext, string, string,
      CreateAssistantFileOptions)
    uid: '@azure/openai-assistants.createAssistantFile'
    package: '@azure/openai-assistants'
    summary: >-
      Attaches a previously uploaded file to an assistant for use by tools that
      can read files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAssistantFile(context: AssistantsContext, assistantId:
        string, fileId: string, options?: CreateAssistantFileOptions):
        Promise<AssistantFile>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;
  - name: >-
      createAssistants(string, KeyCredential | TokenCredential,
      AssistantsClientOptions)
    uid: '@azure/openai-assistants.createAssistants'
    package: '@azure/openai-assistants'
    summary: Azure OpenAI APIs for Assistants.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAssistants(endpoint: string, credential: KeyCredential |
        TokenCredential, options?: AssistantsClientOptions): AssistantsContext
      parameters:
        - id: endpoint
          type: string
          description: ''
        - id: credential
          type: >-
            <xref uid="@azure/core-auth.KeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.AssistantsClientOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/openai-assistants.AssistantsContext" />
  - name: >-
      createMessage(AssistantsContext, string, string, string,
      CreateMessageOptions)
    uid: '@azure/openai-assistants.createMessage'
    package: '@azure/openai-assistants'
    summary: Creates a new message on a specified thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createMessage(context: AssistantsContext, threadId: string,
        role: string, content: string, options?: CreateMessageOptions):
        Promise<ThreadMessage>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: role
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: >-
      createRun(AssistantsContext, string, CreateRunOptions,
      CreateRunRequestOptions)
    uid: '@azure/openai-assistants.createRun'
    package: '@azure/openai-assistants'
    summary: Creates a new run for an assistant thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRun(context: AssistantsContext, threadId: string,
        createRunOptions: CreateRunOptions, options?: CreateRunRequestOptions):
        Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: createRunOptions
          type: <xref uid="@azure/openai-assistants.CreateRunOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateRunRequestOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: >-
      createThread(AssistantsContext, AssistantThreadCreationOptions,
      CreateThreadOptions)
    uid: '@azure/openai-assistants.createThread'
    package: '@azure/openai-assistants'
    summary: >-
      Creates a new thread. Threads contain messages and can be run by
      assistants.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createThread(context: AssistantsContext, body:
        AssistantThreadCreationOptions, options?: CreateThreadOptions):
        Promise<AssistantThread>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: body
          type: >-
            <xref uid="@azure/openai-assistants.AssistantThreadCreationOptions"
            />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: >-
      createThreadAndRun(AssistantsContext, CreateAndRunThreadOptions,
      CreateThreadAndRunOptions)
    uid: '@azure/openai-assistants.createThreadAndRun'
    package: '@azure/openai-assistants'
    summary: >-
      Creates a new assistant thread and immediately starts a run using that new
      thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createThreadAndRun(context: AssistantsContext, body:
        CreateAndRunThreadOptions, options?: CreateThreadAndRunOptions):
        Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: body
          type: <xref uid="@azure/openai-assistants.CreateAndRunThreadOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateThreadAndRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: deleteAssistant(AssistantsContext, string, DeleteAssistantOptions)
    uid: '@azure/openai-assistants.deleteAssistant'
    package: '@azure/openai-assistants'
    summary: Deletes an assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAssistant(context: AssistantsContext, assistantId:
        string, options?: DeleteAssistantOptions):
        Promise<AssistantDeletionStatus>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteAssistantOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/openai-assistants.AssistantDeletionStatus" />&gt;
  - name: >-
      deleteAssistantFile(AssistantsContext, string, string,
      DeleteAssistantFileOptions)
    uid: '@azure/openai-assistants.deleteAssistantFile'
    package: '@azure/openai-assistants'
    summary: >-
      Unlinks a previously attached file from an assistant, rendering it
      unavailable for use by tools that can read

      files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAssistantFile(context: AssistantsContext, assistantId:
        string, fileId: string, options?: DeleteAssistantFileOptions):
        Promise<AssistantFileDeletionStatus>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/openai-assistants.AssistantFileDeletionStatus" />&gt;
  - name: deleteFile(AssistantsContext, string, DeleteFileOptions)
    uid: '@azure/openai-assistants.deleteFile'
    package: '@azure/openai-assistants'
    summary: Delete a previously uploaded file.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFile(context: AssistantsContext, fileId: string,
        options?: DeleteFileOptions): Promise<FileDeletionStatus>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteFileOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.FileDeletionStatus"
          />&gt;
  - name: deleteThread(AssistantsContext, string, DeleteThreadOptions)
    uid: '@azure/openai-assistants.deleteThread'
    package: '@azure/openai-assistants'
    summary: Deletes an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteThread(context: AssistantsContext, threadId: string,
        options?: DeleteThreadOptions): Promise<ThreadDeletionStatus>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteThreadOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ThreadDeletionStatus"
          />&gt;
  - name: getAssistant(AssistantsContext, string, GetAssistantOptions)
    uid: '@azure/openai-assistants.getAssistant'
    package: '@azure/openai-assistants'
    summary: Retrieves an existing assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAssistant(context: AssistantsContext, assistantId: string,
        options?: GetAssistantOptions): Promise<Assistant>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetAssistantOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: >-
      getAssistantFile(AssistantsContext, string, string,
      GetAssistantFileOptions)
    uid: '@azure/openai-assistants.getAssistantFile'
    package: '@azure/openai-assistants'
    summary: Retrieves a file attached to an assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAssistantFile(context: AssistantsContext, assistantId:
        string, fileId: string, options?: GetAssistantFileOptions):
        Promise<AssistantFile>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;
  - name: getFile(AssistantsContext, string, GetFileOptions)
    uid: '@azure/openai-assistants.getFile'
    package: '@azure/openai-assistants'
    summary: Returns information about a specific file. Does not retrieve file content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFile(context: AssistantsContext, fileId: string, options?:
        GetFileOptions): Promise<InputFile>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.InputFile" />&gt;
  - name: getMessage(AssistantsContext, string, string, GetMessageOptions)
    uid: '@azure/openai-assistants.getMessage'
    package: '@azure/openai-assistants'
    summary: Retrieves a message associated with a thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMessage(context: AssistantsContext, threadId: string,
        messageId: string, options?: GetMessageOptions): Promise<ThreadMessage>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: >-
      getMessageFile(AssistantsContext, string, string, string,
      GetMessageFileOptions)
    uid: '@azure/openai-assistants.getMessageFile'
    package: '@azure/openai-assistants'
    summary: Gets information about a file attachment to a message within a thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMessageFile(context: AssistantsContext, threadId: string,
        messageId: string, fileId: string, options?: GetMessageFileOptions):
        Promise<MessageFile>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetMessageFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.MessageFile" />&gt;
  - name: getRun(AssistantsContext, string, string, GetRunOptions)
    uid: '@azure/openai-assistants.getRun'
    package: '@azure/openai-assistants'
    summary: Gets an existing run from an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRun(context: AssistantsContext, threadId: string, runId:
        string, options?: GetRunOptions): Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: getRunStep(AssistantsContext, string, string, string, GetRunStepOptions)
    uid: '@azure/openai-assistants.getRunStep'
    package: '@azure/openai-assistants'
    summary: Gets a single run step from a thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRunStep(context: AssistantsContext, threadId: string, runId:
        string, stepId: string, options?: GetRunStepOptions): Promise<RunStep>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: stepId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetRunStepOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.RunStep" />&gt;
  - name: getThread(AssistantsContext, string, GetThreadOptions)
    uid: '@azure/openai-assistants.getThread'
    package: '@azure/openai-assistants'
    summary: Gets information about an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getThread(context: AssistantsContext, threadId: string,
        options?: GetThreadOptions): Promise<AssistantThread>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: listAssistantFiles(AssistantsContext, string, ListAssistantFilesOptions)
    uid: '@azure/openai-assistants.listAssistantFiles'
    package: '@azure/openai-assistants'
    summary: Returns a list of assistant files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAssistantFiles(context: AssistantsContext, assistantId:
        string, options?: ListAssistantFilesOptions):
        Promise<ListResponseOf<AssistantFile>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListAssistantFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;&gt;
  - name: listAssistants(AssistantsContext, ListAssistantsOptions)
    uid: '@azure/openai-assistants.listAssistants'
    package: '@azure/openai-assistants'
    summary: Returns a list of assistants.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAssistants(context: AssistantsContext, options?:
        ListAssistantsOptions): Promise<ListResponseOf<Assistant>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListAssistantsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;&gt;
  - name: listFiles(AssistantsContext, ListFilesOptions)
    uid: '@azure/openai-assistants.listFiles'
    package: '@azure/openai-assistants'
    summary: Gets a list of previously uploaded files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFiles(context: AssistantsContext, options?:
        ListFilesOptions): Promise<FileListResponse>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.FileListResponse"
          />&gt;
  - name: >-
      listMessageFiles(AssistantsContext, string, string,
      ListMessageFilesOptions)
    uid: '@azure/openai-assistants.listMessageFiles'
    package: '@azure/openai-assistants'
    summary: Returns a list of files associated with a message from a thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMessageFiles(context: AssistantsContext, threadId: string,
        messageId: string, options?: ListMessageFilesOptions):
        Promise<ListResponseOf<MessageFile>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListMessageFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.MessageFile" />&gt;&gt;
  - name: listMessages(AssistantsContext, string, ListMessagesOptions)
    uid: '@azure/openai-assistants.listMessages'
    package: '@azure/openai-assistants'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMessages(context: AssistantsContext, threadId: string,
        options?: ListMessagesOptions): Promise<ListResponseOf<ThreadMessage>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListMessagesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;&gt;
  - name: listRunSteps(AssistantsContext, string, string, ListRunStepsOptions)
    uid: '@azure/openai-assistants.listRunSteps'
    package: '@azure/openai-assistants'
    summary: Returns a list of run steps associated an assistant thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRunSteps(context: AssistantsContext, threadId: string,
        runId: string, options?: ListRunStepsOptions):
        Promise<ListResponseOf<RunStep>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListRunStepsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.RunStep" />&gt;&gt;
  - name: listRuns(AssistantsContext, string, ListRunsOptions)
    uid: '@azure/openai-assistants.listRuns'
    package: '@azure/openai-assistants'
    summary: Returns a list of runs associated with an assistant thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRuns(context: AssistantsContext, threadId: string,
        options?: ListRunsOptions): Promise<ListResponseOf<ThreadRun>>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListRunsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;&gt;
  - name: >-
      submitToolOutputsToRun(AssistantsContext, string, string, ToolOutput[],
      SubmitToolOutputsToRunOptions)
    uid: '@azure/openai-assistants.submitToolOutputsToRun'
    package: '@azure/openai-assistants'
    summary: >-
      Submits outputs from tools as requested by tool calls in a run. Runs that
      need submitted tool outputs will have a status of 'requires_action' with a
      required_action.type of 'submit_tool_outputs'.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitToolOutputsToRun(context: AssistantsContext, threadId:
        string, runId: string, toolOutputs: ToolOutput[], options?:
        SubmitToolOutputsToRunOptions): Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: toolOutputs
          type: <xref uid="@azure/openai-assistants.ToolOutput" />[]
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/openai-assistants.SubmitToolOutputsToRunOptions"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: >-
      updateAssistant(AssistantsContext, string, UpdateAssistantOptions,
      UpdateAssistantRequestOptions)
    uid: '@azure/openai-assistants.updateAssistant'
    package: '@azure/openai-assistants'
    summary: Modifies an existing assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateAssistant(context: AssistantsContext, assistantId:
        string, body: UpdateAssistantOptions, options?:
        UpdateAssistantRequestOptions): Promise<Assistant>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: assistantId
          type: string
          description: ''
        - id: body
          type: <xref uid="@azure/openai-assistants.UpdateAssistantOptions" />
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/openai-assistants.UpdateAssistantRequestOptions"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: updateMessage(AssistantsContext, string, string, UpdateMessageOptions)
    uid: '@azure/openai-assistants.updateMessage'
    package: '@azure/openai-assistants'
    summary: Modifies an existing message on an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(context: AssistantsContext, threadId: string,
        messageId: string, options?: UpdateMessageOptions):
        Promise<ThreadMessage>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: updateRun(AssistantsContext, string, string, UpdateRunOptions)
    uid: '@azure/openai-assistants.updateRun'
    package: '@azure/openai-assistants'
    summary: Modifies an existing thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateRun(context: AssistantsContext, threadId: string, runId:
        string, options?: UpdateRunOptions): Promise<ThreadRun>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: updateThread(AssistantsContext, string, UpdateThreadOptions)
    uid: '@azure/openai-assistants.updateThread'
    package: '@azure/openai-assistants'
    summary: Modifies an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateThread(context: AssistantsContext, threadId: string,
        options?: UpdateThreadOptions): Promise<AssistantThread>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: uploadFile(AssistantsContext, Uint8Array, string, UploadFileOptions)
    uid: '@azure/openai-assistants.uploadFile'
    package: '@azure/openai-assistants'
    summary: Uploads a file for use by other operations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadFile(context: AssistantsContext, file: Uint8Array,
        purpose: string, options?: UploadFileOptions): Promise<InputFile>
      parameters:
        - id: context
          type: <xref uid="@azure/openai-assistants.AssistantsContext" />
          description: ''
        - id: file
          type: Uint8Array
          description: ''
        - id: purpose
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UploadFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.InputFile" />&gt;
  - name: default(string, KeyCredential | TokenCredential, ClientOptions)
    uid: '@azure/openai-assistants.default'
    package: '@azure/openai-assistants'
    summary: Initialize a new instance of `AssistantsContext`
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(endpoint: string, credentials: KeyCredential |
        TokenCredential, options?: ClientOptions): AssistantsContext
      parameters:
        - id: endpoint
          type: string
          description: An OpenAI endpoint supporting assistants functionality.
        - id: credentials
          type: >-
            <xref uid="@azure/core-auth.KeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: uniquely identify client credential
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: the parameter for all optional parameters
      return:
        description: ''
        type: <xref uid="@azure/openai-assistants.AssistantsContext" />
classes:
  - '@azure/openai-assistants.AssistantsClient'
  - '@azure/openai-assistants.AzureKeyCredential'
  - '@azure/openai-assistants.OpenAIKeyCredential'
interfaces:
  - '@azure/openai-assistants.Assistant'
  - '@azure/openai-assistants.AssistantCreationOptions'
  - '@azure/openai-assistants.AssistantDeletionStatus'
  - '@azure/openai-assistants.AssistantFile'
  - '@azure/openai-assistants.AssistantFileDeletionStatus'
  - '@azure/openai-assistants.AssistantThread'
  - '@azure/openai-assistants.AssistantThreadCreationOptions'
  - '@azure/openai-assistants.AssistantsClientOptions'
  - '@azure/openai-assistants.CancelRunOptions'
  - '@azure/openai-assistants.CodeInterpreterImageOutput'
  - '@azure/openai-assistants.CodeInterpreterImageReference'
  - '@azure/openai-assistants.CodeInterpreterLogOutput'
  - '@azure/openai-assistants.CodeInterpreterToolCall'
  - '@azure/openai-assistants.CodeInterpreterToolCallDetails'
  - '@azure/openai-assistants.CodeInterpreterToolDefinition'
  - '@azure/openai-assistants.CreateAndRunThreadOptions'
  - '@azure/openai-assistants.CreateAssistantFileOptions'
  - '@azure/openai-assistants.CreateAssistantOptions'
  - '@azure/openai-assistants.CreateMessageOptions'
  - '@azure/openai-assistants.CreateRunOptions'
  - '@azure/openai-assistants.CreateRunRequestOptions'
  - '@azure/openai-assistants.CreateThreadAndRunOptions'
  - '@azure/openai-assistants.CreateThreadOptions'
  - '@azure/openai-assistants.DeleteAssistantFileOptions'
  - '@azure/openai-assistants.DeleteAssistantOptions'
  - '@azure/openai-assistants.DeleteFileOptions'
  - '@azure/openai-assistants.DeleteThreadOptions'
  - '@azure/openai-assistants.DeletionStatus'
  - '@azure/openai-assistants.FileDeletionStatus'
  - '@azure/openai-assistants.FileListResponse'
  - '@azure/openai-assistants.FunctionDefinition'
  - '@azure/openai-assistants.FunctionToolCall'
  - '@azure/openai-assistants.FunctionToolCallDetails'
  - '@azure/openai-assistants.FunctionToolDefinition'
  - '@azure/openai-assistants.GetAssistantFileOptions'
  - '@azure/openai-assistants.GetAssistantOptions'
  - '@azure/openai-assistants.GetFileOptions'
  - '@azure/openai-assistants.GetMessageFileOptions'
  - '@azure/openai-assistants.GetMessageOptions'
  - '@azure/openai-assistants.GetRunOptions'
  - '@azure/openai-assistants.GetRunStepOptions'
  - '@azure/openai-assistants.GetThreadOptions'
  - '@azure/openai-assistants.InputFile'
  - '@azure/openai-assistants.ListAssistantFilesOptions'
  - '@azure/openai-assistants.ListAssistantsOptions'
  - '@azure/openai-assistants.ListFilesOptions'
  - '@azure/openai-assistants.ListMessageFilesOptions'
  - '@azure/openai-assistants.ListMessagesOptions'
  - '@azure/openai-assistants.ListResponseOf'
  - '@azure/openai-assistants.ListRunStepsOptions'
  - '@azure/openai-assistants.ListRunsOptions'
  - '@azure/openai-assistants.MessageFile'
  - '@azure/openai-assistants.MessageImageFileContent'
  - '@azure/openai-assistants.MessageImageFileDetails'
  - '@azure/openai-assistants.MessageTextContent'
  - '@azure/openai-assistants.MessageTextDetails'
  - '@azure/openai-assistants.MessageTextFileCitationAnnotation'
  - '@azure/openai-assistants.MessageTextFileCitationDetails'
  - '@azure/openai-assistants.MessageTextFilePathAnnotation'
  - '@azure/openai-assistants.MessageTextFilePathDetails'
  - '@azure/openai-assistants.RequiredAction'
  - '@azure/openai-assistants.RequiredFunctionToolCall'
  - '@azure/openai-assistants.RetrievalToolCall'
  - '@azure/openai-assistants.RetrievalToolDefinition'
  - '@azure/openai-assistants.RunError'
  - '@azure/openai-assistants.RunStep'
  - '@azure/openai-assistants.RunStepError'
  - '@azure/openai-assistants.RunStepMessageCreationDetails'
  - '@azure/openai-assistants.RunStepMessageCreationReference'
  - '@azure/openai-assistants.RunStepToolCallDetails'
  - '@azure/openai-assistants.SubmitToolOutputsDetails'
  - '@azure/openai-assistants.SubmitToolOutputsToRunOptions'
  - '@azure/openai-assistants.ThreadDeletionStatus'
  - '@azure/openai-assistants.ThreadMessage'
  - '@azure/openai-assistants.ThreadRun'
  - '@azure/openai-assistants.ToolOutput'
  - '@azure/openai-assistants.UpdateAssistantOptions'
  - '@azure/openai-assistants.UpdateAssistantRequestOptions'
  - '@azure/openai-assistants.UpdateMessageOptions'
  - '@azure/openai-assistants.UpdateRunOptions'
  - '@azure/openai-assistants.UpdateThreadOptions'
  - '@azure/openai-assistants.UploadFileOptions'
  - '@azure/openai-assistants.CodeInterpreterToolCallOutput'
  - '@azure/openai-assistants.MessageImageFileIdDetails'
  - '@azure/openai-assistants.ThreadInitializationMessage'
  - '@azure/openai-assistants.AssistantDeletionStatusOutput'
  - '@azure/openai-assistants.AssistantFileDeletionStatusOutput'
  - '@azure/openai-assistants.AssistantFileOutput'
  - '@azure/openai-assistants.AssistantOutput'
  - '@azure/openai-assistants.AssistantThreadOutput'
  - '@azure/openai-assistants.CancelRun'
  - '@azure/openai-assistants.CancelRun200Response'
  - '@azure/openai-assistants.CodeInterpreterImageOutputOutput'
  - '@azure/openai-assistants.CodeInterpreterImageReferenceOutput'
  - '@azure/openai-assistants.CodeInterpreterLogOutputOutput'
  - '@azure/openai-assistants.CodeInterpreterToolCallDetailsOutput'
  - '@azure/openai-assistants.CodeInterpreterToolDefinitionOutput'
  - '@azure/openai-assistants.CreateAssistant'
  - '@azure/openai-assistants.CreateAssistant200Response'
  - '@azure/openai-assistants.CreateAssistantBodyParam'
  - '@azure/openai-assistants.CreateAssistantFile'
  - '@azure/openai-assistants.CreateAssistantFile200Response'
  - '@azure/openai-assistants.CreateAssistantFileBodyParam'
  - '@azure/openai-assistants.CreateMessage'
  - '@azure/openai-assistants.CreateMessage200Response'
  - '@azure/openai-assistants.CreateMessageBodyParam'
  - '@azure/openai-assistants.CreateRun'
  - '@azure/openai-assistants.CreateRun200Response'
  - '@azure/openai-assistants.CreateRunBodyParam'
  - '@azure/openai-assistants.CreateThread'
  - '@azure/openai-assistants.CreateThread200Response'
  - '@azure/openai-assistants.CreateThreadAndRun'
  - '@azure/openai-assistants.CreateThreadAndRun200Response'
  - '@azure/openai-assistants.CreateThreadAndRunBodyParam'
  - '@azure/openai-assistants.CreateThreadBodyParam'
  - '@azure/openai-assistants.DeleteAssistant200Response'
  - '@azure/openai-assistants.DeleteAssistantFile200Response'
  - '@azure/openai-assistants.DeleteFile'
  - '@azure/openai-assistants.DeleteFile200Response'
  - '@azure/openai-assistants.DeleteThread200Response'
  - '@azure/openai-assistants.DeletionStatusOutput'
  - '@azure/openai-assistants.FileDeletionStatusOutput'
  - '@azure/openai-assistants.FileListResponseOutput'
  - '@azure/openai-assistants.FunctionDefinitionOutput'
  - '@azure/openai-assistants.FunctionToolCallDetailsOutput'
  - '@azure/openai-assistants.FunctionToolCallOutput'
  - '@azure/openai-assistants.FunctionToolDefinitionOutput'
  - '@azure/openai-assistants.GetAssistant'
  - '@azure/openai-assistants.GetAssistant200Response'
  - '@azure/openai-assistants.GetAssistantFile'
  - '@azure/openai-assistants.GetAssistantFile200Response'
  - '@azure/openai-assistants.GetFile200Response'
  - '@azure/openai-assistants.GetMessage'
  - '@azure/openai-assistants.GetMessage200Response'
  - '@azure/openai-assistants.GetMessageFile'
  - '@azure/openai-assistants.GetMessageFile200Response'
  - '@azure/openai-assistants.GetRun'
  - '@azure/openai-assistants.GetRun200Response'
  - '@azure/openai-assistants.GetRunStep'
  - '@azure/openai-assistants.GetRunStep200Response'
  - '@azure/openai-assistants.GetThread'
  - '@azure/openai-assistants.GetThread200Response'
  - '@azure/openai-assistants.ListAssistantFiles200Response'
  - '@azure/openai-assistants.ListAssistantFilesQueryParam'
  - '@azure/openai-assistants.ListAssistantFilesQueryParamProperties'
  - '@azure/openai-assistants.ListAssistants200Response'
  - '@azure/openai-assistants.ListAssistantsQueryParam'
  - '@azure/openai-assistants.ListAssistantsQueryParamProperties'
  - '@azure/openai-assistants.ListFiles'
  - '@azure/openai-assistants.ListFiles200Response'
  - '@azure/openai-assistants.ListFilesQueryParam'
  - '@azure/openai-assistants.ListFilesQueryParamProperties'
  - '@azure/openai-assistants.ListMessageFiles'
  - '@azure/openai-assistants.ListMessageFiles200Response'
  - '@azure/openai-assistants.ListMessageFilesQueryParam'
  - '@azure/openai-assistants.ListMessageFilesQueryParamProperties'
  - '@azure/openai-assistants.ListMessages200Response'
  - '@azure/openai-assistants.ListMessagesQueryParam'
  - '@azure/openai-assistants.ListMessagesQueryParamProperties'
  - '@azure/openai-assistants.ListResponseOfOutput'
  - '@azure/openai-assistants.ListRunSteps'
  - '@azure/openai-assistants.ListRunSteps200Response'
  - '@azure/openai-assistants.ListRunStepsQueryParam'
  - '@azure/openai-assistants.ListRunStepsQueryParamProperties'
  - '@azure/openai-assistants.ListRuns200Response'
  - '@azure/openai-assistants.ListRunsQueryParam'
  - '@azure/openai-assistants.ListRunsQueryParamProperties'
  - '@azure/openai-assistants.MessageContentOutputParent'
  - '@azure/openai-assistants.MessageFileOutput'
  - '@azure/openai-assistants.MessageImageFileContentOutput'
  - '@azure/openai-assistants.MessageImageFileDetailsOutput'
  - '@azure/openai-assistants.MessageImageFileIdDetailsOutput'
  - '@azure/openai-assistants.MessageTextContentOutput'
  - '@azure/openai-assistants.MessageTextDetailsOutput'
  - '@azure/openai-assistants.MessageTextFileCitationAnnotationOutput'
  - '@azure/openai-assistants.MessageTextFileCitationDetailsOutput'
  - '@azure/openai-assistants.MessageTextFilePathAnnotationOutput'
  - '@azure/openai-assistants.MessageTextFilePathDetailsOutput'
  - '@azure/openai-assistants.OpenAIFileOutput'
  - '@azure/openai-assistants.RequiredFunctionToolCallOutput'
  - '@azure/openai-assistants.RetrievalToolCallOutput'
  - '@azure/openai-assistants.RetrievalToolDefinitionOutput'
  - '@azure/openai-assistants.Routes'
  - '@azure/openai-assistants.RunErrorOutput'
  - '@azure/openai-assistants.RunStepErrorOutput'
  - '@azure/openai-assistants.RunStepMessageCreationDetailsOutput'
  - '@azure/openai-assistants.RunStepMessageCreationReferenceOutput'
  - '@azure/openai-assistants.RunStepOutput'
  - '@azure/openai-assistants.RunStepToolCallDetailsOutput'
  - '@azure/openai-assistants.SubmitToolOutputsActionOutput'
  - '@azure/openai-assistants.SubmitToolOutputsDetailsOutput'
  - '@azure/openai-assistants.SubmitToolOutputsToRun'
  - '@azure/openai-assistants.SubmitToolOutputsToRun200Response'
  - '@azure/openai-assistants.SubmitToolOutputsToRunBodyParam'
  - '@azure/openai-assistants.ThreadDeletionStatusOutput'
  - '@azure/openai-assistants.ThreadMessageOutput'
  - '@azure/openai-assistants.ThreadRunOutput'
  - '@azure/openai-assistants.TypeSpecRecord'
  - '@azure/openai-assistants.TypeSpecRecordOutput'
  - '@azure/openai-assistants.UpdateAssistant200Response'
  - '@azure/openai-assistants.UpdateAssistantBodyParam'
  - '@azure/openai-assistants.UpdateMessage200Response'
  - '@azure/openai-assistants.UpdateMessageBodyParam'
  - '@azure/openai-assistants.UpdateRun200Response'
  - '@azure/openai-assistants.UpdateRunBodyParam'
  - '@azure/openai-assistants.UpdateThread200Response'
  - '@azure/openai-assistants.UpdateThreadBodyParam'
  - '@azure/openai-assistants.UploadFile200Response'
  - '@azure/openai-assistants.UploadFileBodyParam'
  - '@azure/openai-assistants.UploadFileMediaTypesParam'
