### YamlMime:TSType
name: ConversationAnalysisClient
uid: '@azure/ai-language-conversations.ConversationAnalysisClient'
package: '@azure/ai-language-conversations'
summary: |-
  A client for interacting with the conversational language understanding
  features in Azure Cognitive Language Service.

  The client needs the endpoint of a Language resource and an authentication
  method such as an API key or AAD. The API key and endpoint can be found in
  the Language resource page in the Azure portal. They will be located in the
  resource's Keys and Endpoint page, under Resource Management.

  ### Examples for authentication:

  #### API Key

  ```ts snippet:ReadmeSampleCreateClient_Key
  import { AzureKeyCredential } from "@azure/core-auth";
  import { ConversationAnalysisClient } from "@azure/ai-language-conversations";

  const endpoint = "https://<resource name>.cognitiveservices.azure.com";
  const credential = new AzureKeyCredential("<api key>");
  const client = new ConversationAnalysisClient(endpoint, credential);
  ```

  #### Azure Active Directory

  See the [`@azure/identity`](https://npmjs.com/package/@azure/identity)
  package for more information about authenticating with Azure Active Directory.

  ```ts snippet:ReadmeSampleCreateClient_ActiveDirectory
  import { DefaultAzureCredential } from "@azure/identity";
  import { ConversationAnalysisClient } from "@azure/ai-language-conversations";

  const endpoint = "https://<resource name>.cognitiveservices.azure.com";
  const credential = new DefaultAzureCredential();
  const client = new ConversationAnalysisClient(endpoint, credential);
  ```
fullName: ConversationAnalysisClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      ConversationAnalysisClient(string, KeyCredential | TokenCredential,
      ConversationAnalysisClientOptionalParams)
    uid: '@azure/ai-language-conversations.ConversationAnalysisClient.constructor'
    package: '@azure/ai-language-conversations'
    summary: Initializes a new instance of the ConversationAnalysisClient class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new ConversationAnalysisClient(endpoint: string, credential:
        KeyCredential | TokenCredential, options?:
        ConversationAnalysisClientOptionalParams)
      parameters:
        - id: endpoint
          type: string
          description: |-
            Supported Cognitive Services endpoint (e.g.,
                            https://<resource-name>.api.cognitiveservices.azure.com).
        - id: credential
          type: >-
            <xref uid="@azure/core-auth.KeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/ai-language-conversations.ConversationAnalysisClientOptionalParams"
            />
          description: The parameter options
methods:
  - name: analyzeConversation(ConversationalTask, AnalyzeConversationOptionalParams)
    uid: >-
      @azure/ai-language-conversations.ConversationAnalysisClient.analyzeConversation
    package: '@azure/ai-language-conversations'
    summary: Analyzes the input conversation utterance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function analyzeConversation(task: ConversationalTask, options?:
        AnalyzeConversationOptionalParams): Promise<ConversationalTaskResult>
      parameters:
        - id: task
          type: <xref uid="@azure/ai-language-conversations.ConversationalTask" />
          description: A single conversational task to execute.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-language-conversations.AnalyzeConversationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/ai-language-conversations.ConversationalTaskResult" />&gt;
  - name: >-
      beginConversationAnalysis(AnalyzeConversationJobsInput,
      ConversationAnalysisOptionalParams)
    uid: >-
      @azure/ai-language-conversations.ConversationAnalysisClient.beginConversationAnalysis
    package: '@azure/ai-language-conversations'
    summary: >-
      Submit a collection of conversations for analysis. Specify one or more
      unique tasks to be executed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginConversationAnalysis(task: AnalyzeConversationJobsInput,
        options?: ConversationAnalysisOptionalParams):
        Promise<PollerLike<PollOperationState<AnalyzeConversationJobState>,
        AnalyzeConversationJobState>>
      parameters:
        - id: task
          type: >-
            <xref
            uid="@azure/ai-language-conversations.AnalyzeConversationJobsInput"
            />
          description: >-
            The collection of conversations to analyze and one or more tasks to
            execute.
        - id: options
          type: >-
            <xref
            uid="@azure/ai-language-conversations.ConversationAnalysisOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/ai-language-conversations.AnalyzeConversationJobState"
          />&gt;, <xref
          uid="@azure/ai-language-conversations.AnalyzeConversationJobState"
          />&gt;&gt;
