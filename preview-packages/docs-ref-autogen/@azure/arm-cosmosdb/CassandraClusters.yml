### YamlMime:TSType
name: CassandraClusters
uid: '@azure/arm-cosmosdb.CassandraClusters'
package: '@azure/arm-cosmosdb'
summary: Interface representing a CassandraClusters.
fullName: CassandraClusters
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdate(string, string, ClusterResource,
      CassandraClustersCreateUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginCreateUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a managed Cassandra cluster. When updating, you must
      specify all writable

      properties. To update only some properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdate(resourceGroupName: string, clusterName:
        string, body: ClusterResource, options?:
        CassandraClustersCreateUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ClusterResource>,
        ClusterResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.ClusterResource" />
          description: >-
            The properties specifying the desired state of the managed Cassandra
            cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersCreateUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ClusterResource" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ClusterResource" />&gt;&gt;
  - name: >-
      beginCreateUpdateAndWait(string, string, ClusterResource,
      CassandraClustersCreateUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginCreateUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a managed Cassandra cluster. When updating, you must
      specify all writable

      properties. To update only some properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateAndWait(resourceGroupName: string,
        clusterName: string, body: ClusterResource, options?:
        CassandraClustersCreateUpdateOptionalParams): Promise<ClusterResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.ClusterResource" />
          description: >-
            The properties specifying the desired state of the managed Cassandra
            cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersCreateUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.ClusterResource" />&gt;
  - name: beginDeallocate(string, string, CassandraClustersDeallocateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginDeallocate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Deallocate the Managed Cassandra Cluster and Associated Data Centers.
      Deallocation will deallocate

      the host virtual machine of this cluster, and reserved the data disk. This
      won't do anything on an

      already deallocated cluster. Use Start to restart the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, clusterName: string,
        options?: CassandraClustersDeallocateOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersDeallocateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeallocateAndWait(string, string,
      CassandraClustersDeallocateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginDeallocateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Deallocate the Managed Cassandra Cluster and Associated Data Centers.
      Deallocation will deallocate

      the host virtual machine of this cluster, and reserved the data disk. This
      won't do anything on an

      already deallocated cluster. Use Start to restart the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeallocateAndWait(resourceGroupName: string, clusterName:
        string, options?: CassandraClustersDeallocateOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersDeallocateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginDelete(string, string, CassandraClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginDelete'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, clusterName: string,
        options?: CassandraClustersDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, CassandraClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginDeleteAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, clusterName:
        string, options?: CassandraClustersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginInvokeCommand(string, string, CommandPostBody,
      CassandraClustersInvokeCommandOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginInvokeCommand'
    package: '@azure/arm-cosmosdb'
    summary: Invoke a command like nodetool for cassandra maintenance
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInvokeCommand(resourceGroupName: string, clusterName:
        string, body: CommandPostBody, options?:
        CassandraClustersInvokeCommandOptionalParams):
        Promise<SimplePollerLike<OperationState<CommandOutput>, CommandOutput>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.CommandPostBody" />
          description: Specification which command to run where
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersInvokeCommandOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.CommandOutput" />&gt;, <xref
          uid="@azure/arm-cosmosdb.CommandOutput" />&gt;&gt;
  - name: >-
      beginInvokeCommandAndWait(string, string, CommandPostBody,
      CassandraClustersInvokeCommandOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginInvokeCommandAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Invoke a command like nodetool for cassandra maintenance
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInvokeCommandAndWait(resourceGroupName: string,
        clusterName: string, body: CommandPostBody, options?:
        CassandraClustersInvokeCommandOptionalParams): Promise<CommandOutput>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.CommandPostBody" />
          description: Specification which command to run where
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersInvokeCommandOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.CommandOutput" />&gt;
  - name: beginStart(string, string, CassandraClustersStartOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginStart'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Start the Managed Cassandra Cluster and Associated Data Centers. Start
      will start the host virtual

      machine of this cluster with reserved data disk. This won't do anything on
      an already running

      cluster. Use Deallocate to deallocate the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, clusterName: string,
        options?: CassandraClustersStartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraClustersStartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStartAndWait(string, string, CassandraClustersStartOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginStartAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Start the Managed Cassandra Cluster and Associated Data Centers. Start
      will start the host virtual

      machine of this cluster with reserved data disk. This won't do anything on
      an already running

      cluster. Use Deallocate to deallocate the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, clusterName:
        string, options?: CassandraClustersStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraClustersStartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, ClusterResource,
      CassandraClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginUpdate'
    package: '@azure/arm-cosmosdb'
    summary: Updates some of the properties of a managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, clusterName: string,
        body: ClusterResource, options?: CassandraClustersUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ClusterResource>,
        ClusterResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.ClusterResource" />
          description: Parameters to provide for specifying the managed Cassandra cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ClusterResource" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ClusterResource" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ClusterResource,
      CassandraClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.beginUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Updates some of the properties of a managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, clusterName:
        string, body: ClusterResource, options?:
        CassandraClustersUpdateOptionalParams): Promise<ClusterResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.ClusterResource" />
          description: Parameters to provide for specifying the managed Cassandra cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.ClusterResource" />&gt;
  - name: get(string, string, CassandraClustersGetOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.get'
    package: '@azure/arm-cosmosdb'
    summary: Get the properties of a managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options?:
        CassandraClustersGetOptionalParams): Promise<ClusterResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraClustersGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.ClusterResource" />&gt;
  - name: >-
      listByResourceGroup(string,
      CassandraClustersListByResourceGroupOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.listByResourceGroup'
    package: '@azure/arm-cosmosdb'
    summary: List all managed Cassandra clusters in this resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        CassandraClustersListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<ClusterResource, ClusterResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.ClusterResource" />, <xref
          uid="@azure/arm-cosmosdb.ClusterResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(CassandraClustersListBySubscriptionOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.listBySubscription'
    package: '@azure/arm-cosmosdb'
    summary: List all managed Cassandra clusters in this subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        CassandraClustersListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<ClusterResource, ClusterResource[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.ClusterResource" />, <xref
          uid="@azure/arm-cosmosdb.ClusterResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: status(string, string, CassandraClustersStatusOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraClusters.status'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the CPU, memory, and disk usage statistics for each Cassandra node in
      a cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function status(resourceGroupName: string, clusterName: string,
        options?: CassandraClustersStatusOptionalParams):
        Promise<CassandraClusterPublicStatus>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraClustersStatusOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraClusterPublicStatus" />&gt;
