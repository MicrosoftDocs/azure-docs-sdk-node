### YamlMime:TSType
name: WebPubSubServiceClient
uid: '@azure/web-pubsub.WebPubSubServiceClient'
package: '@azure/web-pubsub'
summary: Client for connecting to a Web PubSub hub
fullName: WebPubSubServiceClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      WebPubSubServiceClient(string, AzureKeyCredential | TokenCredential,
      string, WebPubSubServiceClientOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor_1'
    package: '@azure/web-pubsub'
    summary: >-
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.


      Example usage:

      ```ts snippet:ReadmeSampleCreateClient_KeyCredential

      import { AzureKeyCredential, WebPubSubServiceClient } from
      "@azure/web-pubsub";


      const key = new AzureKeyCredential("<Key>");

      const serviceClient = new WebPubSubServiceClient("<Endpoint>", key,
      "<hubName>");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(endpoint: string, credential:
        AzureKeyCredential | TokenCredential, hubName: string, options?:
        WebPubSubServiceClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: The endpoint to connect to
        - id: credential
          type: >-
            <xref uid="@azure/web-pubsub.AzureKeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: An AzureKeyCredential holding your service key
        - id: hubName
          type: string
          description: The name of the hub to connect to.
        - id: options
          type: <xref uid="@azure/web-pubsub.WebPubSubServiceClientOptions" />
          description: Options to configure the http pipeline
  - name: WebPubSubServiceClient(string, string, WebPubSubServiceClientOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.constructor'
    package: '@azure/web-pubsub'
    summary: >-
      Creates an instance of a WebPubSubServiceClient for sending messages and
      managing groups, connections, and users.


      Example usage:

      ```ts snippet:ReadmeSampleCreateClient_ConnectionString

      import { WebPubSubServiceClient } from "@azure/web-pubsub";


      const serviceClient = new WebPubSubServiceClient("<ConnectionString>",
      "<hubName>");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new WebPubSubServiceClient(connectionString: string, hubName: string,
        options?: WebPubSubServiceClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: The connection string
        - id: hubName
          type: string
          description: The name of the hub to connect to. If omitted, '_default' is used.
        - id: options
          type: <xref uid="@azure/web-pubsub.WebPubSubServiceClientOptions" />
          description: Options to configure the http pipeline
properties:
  - name: apiVersion
    uid: '@azure/web-pubsub.WebPubSubServiceClient.apiVersion'
    package: '@azure/web-pubsub'
    summary: The Web PubSub API version being used by this client
    fullName: apiVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/web-pubsub.WebPubSubServiceClient.endpoint'
    package: '@azure/web-pubsub'
    summary: The Web PubSub endpoint this client is connected to
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: hubName
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hubName'
    package: '@azure/web-pubsub'
    summary: The name of the hub this client is connected to
    fullName: hubName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hubName: string'
      return:
        description: ''
        type: string
methods:
  - name: addConnectionsToGroups(string[], string, GroupAddConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.addConnectionsToGroups'
    package: '@azure/web-pubsub'
    summary: Add filtered connections to multiple groups
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addConnectionsToGroups(groups: string[], filter: string,
        options?: GroupAddConnectionOptions): Promise<void>
      parameters:
        - id: groups
          type: string[]
          description: A list of groups which target connections will be added into
        - id: filter
          type: string
          description: An OData filter which target connections satisfy
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupAddConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeAllConnections(HubCloseAllConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeAllConnections'
    package: '@azure/web-pubsub'
    summary: Close all connections to this hub
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function closeAllConnections(options?: HubCloseAllConnectionsOptions):
        Promise<void>
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseAllConnectionsOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeConnection(string, HubCloseConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeConnection'
    package: '@azure/web-pubsub'
    summary: Close a specific connection to this hub
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function closeConnection(connectionId: string, options?:
        HubCloseConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to close
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeUserConnections(string, HubCloseUserConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.closeUserConnections'
    package: '@azure/web-pubsub'
    summary: Close all connections with the given user id
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function closeUserConnections(userId: string, options?:
        HubCloseUserConnectionsOptions): Promise<void>
      parameters:
        - id: userId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseUserConnectionsOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: connectionExists(string, HasConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.connectionExists'
    package: '@azure/web-pubsub'
    summary: Check if a specific connection is connected to this hub
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function connectionExists(connectionId: string, options?:
        HasConnectionOptions): Promise<boolean>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to check
        - id: options
          type: <xref uid="@azure/web-pubsub.HasConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: getClientAccessToken(GenerateClientTokenOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.getClientAccessToken'
    package: '@azure/web-pubsub'
    summary: Generate a token for a client to connect to the Azure Web PubSub service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getClientAccessToken(options?: GenerateClientTokenOptions):
        Promise<ClientTokenResponse>
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.GenerateClientTokenOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/web-pubsub.ClientTokenResponse" />&gt;
  - name: grantPermission(string, Permission, HubGrantPermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.grantPermission'
    package: '@azure/web-pubsub'
    summary: Grant permissions to a connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function grantPermission(connectionId: string, permission: Permission,
        options?: HubGrantPermissionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to grant permissions to
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubGrantPermissionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: group(string)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.group'
    package: '@azure/web-pubsub'
    summary: Get a client for a group
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function group(groupName: string): WebPubSubGroup'
      parameters:
        - id: groupName
          type: string
          description: The name of the group to connect to.
      return:
        description: ''
        type: <xref uid="@azure/web-pubsub.WebPubSubGroup" />
  - name: groupExists(string, HubHasGroupOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.groupExists'
    package: '@azure/web-pubsub'
    summary: Check if a particular group exists (i.e. has active connections).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function groupExists(groupName: string, options?: HubHasGroupOptions):
        Promise<boolean>
      parameters:
        - id: groupName
          type: string
          description: The group name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasGroupOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: hasPermission(string, Permission, HubHasPermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.hasPermission'
    package: '@azure/web-pubsub'
    summary: Check if the connection has the specified permission
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function hasPermission(connectionId: string, permission: Permission,
        options?: HubHasPermissionOptions): Promise<boolean>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to check permission
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasPermissionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: removeConnectionFromAllGroups(string, HubCloseConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.removeConnectionFromAllGroups'
    package: '@azure/web-pubsub'
    summary: Remove a specific connection from all groups they are joined to
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeConnectionFromAllGroups(connectionId: string, options?:
        HubCloseConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to remove from all groups
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      removeConnectionsFromGroups(string[], string,
      GroupRemoveConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.removeConnectionsFromGroups'
    package: '@azure/web-pubsub'
    summary: Remove filtered connections from multiple groups
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeConnectionsFromGroups(groups: string[], filter: string,
        options?: GroupRemoveConnectionOptions): Promise<void>
      parameters:
        - id: groups
          type: string[]
          description: A list of groups which target connections will be removed from
        - id: filter
          type: string
          description: An OData filter which target connections satisfy
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupRemoveConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: removeUserFromAllGroups(string, HubCloseConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.removeUserFromAllGroups'
    package: '@azure/web-pubsub'
    summary: Remove a specific user from all groups they are joined to
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeUserFromAllGroups(userId: string, options?:
        HubCloseConnectionOptions): Promise<void>
      parameters:
        - id: userId
          type: string
          description: The user id to remove from all groups
        - id: options
          type: <xref uid="@azure/web-pubsub.HubCloseConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: revokePermission(string, Permission, HubRevokePermissionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.revokePermission'
    package: '@azure/web-pubsub'
    summary: Revoke permissions from a connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function revokePermission(connectionId: string, permission: Permission,
        options?: HubRevokePermissionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to revoke permissions from
        - id: permission
          type: <xref uid="@azure/web-pubsub.Permission" />
          description: ''
        - id: options
          type: <xref uid="@azure/web-pubsub.HubRevokePermissionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(JSONTypes, HubSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_1'
    package: '@azure/web-pubsub'
    summary: Broadcast a JSON message to all connections on this hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: JSONTypes, options?: HubSendToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The JSON message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(RequestBodyType, HubSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll_2'
    package: '@azure/web-pubsub'
    summary: Broadcast a binary message to all connections on this hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: RequestBodyType, options?:
        HubSendToAllOptions): Promise<void>
      parameters:
        - id: message
          type: <xref uid="@azure/core-rest-pipeline.RequestBodyType" />
          description: The message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(string, HubSendTextToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToAll'
    package: '@azure/web-pubsub'
    summary: Broadcast a text message to all connections on this hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: string, options: HubSendTextToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToConnection(string, JSONTypes, HubSendToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_1'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: JSONTypes,
        options?: HubSendToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The JSON message
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendToConnection(string, RequestBodyType, HubSendTextToConnectionOptions |
      HubSendToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection_2'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message:
        RequestBodyType, options?: HubSendTextToConnectionOptions |
        HubSendToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: <xref uid="@azure/core-rest-pipeline.RequestBodyType" />
          description: The binary message
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendTextToConnectionOptions" /> |
            <xref uid="@azure/web-pubsub.HubSendToConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToConnection(string, string, HubSendTextToConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToConnection'
    package: '@azure/web-pubsub'
    summary: Send a text message to a specific connection
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToConnection(connectionId: string, message: string,
        options: HubSendTextToConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: Connection id to send to
        - id: message
          type: string
          description: The text message
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToUser(string, JSONTypes, HubSendToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_1'
    package: '@azure/web-pubsub'
    summary: Send a JSON message to a specific user
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: JSONTypes, options?:
        HubSendToUserOptions): Promise<void>
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The josn message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendToUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      sendToUser(string, RequestBodyType, HubSendTextToUserOptions |
      HubSendToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser_2'
    package: '@azure/web-pubsub'
    summary: Send a binary message to a specific user
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: RequestBodyType,
        options?: HubSendTextToUserOptions | HubSendToUserOptions):
        Promise<void>
      parameters:
        - id: username
          type: string
          description: The user name to send to
        - id: message
          type: <xref uid="@azure/core-rest-pipeline.RequestBodyType" />
          description: The binary message to send
        - id: options
          type: >-
            <xref uid="@azure/web-pubsub.HubSendTextToUserOptions" /> | <xref
            uid="@azure/web-pubsub.HubSendToUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToUser(string, string, HubSendTextToUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.sendToUser'
    package: '@azure/web-pubsub'
    summary: Send a text message to a specific user
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToUser(username: string, message: string, options:
        HubSendTextToUserOptions): Promise<void>
      parameters:
        - id: username
          type: string
          description: User name to send to
        - id: message
          type: string
          description: The text message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.HubSendTextToUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: userExists(string, HubHasUserOptions)
    uid: '@azure/web-pubsub.WebPubSubServiceClient.userExists'
    package: '@azure/web-pubsub'
    summary: Check if a particular user is connected to this hub.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function userExists(username: string, options?: HubHasUserOptions):
        Promise<boolean>
      parameters:
        - id: username
          type: string
          description: The user name to check for
        - id: options
          type: <xref uid="@azure/web-pubsub.HubHasUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;boolean&gt;
