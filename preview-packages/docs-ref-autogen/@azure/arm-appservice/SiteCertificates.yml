### YamlMime:TSType
name: SiteCertificates
uid: '@azure/arm-appservice.SiteCertificates'
package: '@azure/arm-appservice'
summary: Interface representing a SiteCertificates.
fullName: SiteCertificates
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, Certificate,
      SiteCertificatesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.createOrUpdate'
    package: '@azure/arm-appservice'
    summary: Create or update a certificate under a given site.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, name: string,
        certificateName: string, certificateEnvelope: Certificate, options?:
        SiteCertificatesCreateOrUpdateOptionalParams): Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: certificateEnvelope
          type: <xref uid="@azure/arm-appservice.Certificate" />
          description: Details of certificate, if it exists already.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
  - name: >-
      createOrUpdateSlot(string, string, string, string, Certificate,
      SiteCertificatesCreateOrUpdateSlotOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.createOrUpdateSlot'
    package: '@azure/arm-appservice'
    summary: Create or update a certificate in a given site and deployment slot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateSlot(resourceGroupName: string, name: string,
        slot: string, certificateName: string, certificateEnvelope: Certificate,
        options?: SiteCertificatesCreateOrUpdateSlotOptionalParams):
        Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a binding
                        for the production slot.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: certificateEnvelope
          type: <xref uid="@azure/arm-appservice.Certificate" />
          description: Details of certificate, if it exists already.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesCreateOrUpdateSlotOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
  - name: delete(string, string, string, SiteCertificatesDeleteOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.delete'
    package: '@azure/arm-appservice'
    summary: Delete a certificate from the site.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, name: string,
        certificateName: string, options?:
        SiteCertificatesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      deleteSlot(string, string, string, string,
      SiteCertificatesDeleteSlotOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.deleteSlot'
    package: '@azure/arm-appservice'
    summary: Delete a certificate for a given site and deployment slot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteSlot(resourceGroupName: string, name: string, slot:
        string, certificateName: string, options?:
        SiteCertificatesDeleteSlotOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a binding
                        for the production slot.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesDeleteSlotOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, SiteCertificatesGetOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.get'
    package: '@azure/arm-appservice'
    summary: Get a certificate belonging to a given site.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, certificateName:
        string, options?: SiteCertificatesGetOptionalParams):
        Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: options
          type: >-
            <xref uid="@azure/arm-appservice.SiteCertificatesGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
  - name: >-
      getSlot(string, string, string, string,
      SiteCertificatesGetSlotOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.getSlot'
    package: '@azure/arm-appservice'
    summary: Get a certificate for a given site and deployment slot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSlot(resourceGroupName: string, name: string, slot: string,
        certificateName: string, options?:
        SiteCertificatesGetSlotOptionalParams): Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a binding
                        for the production slot.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesGetSlotOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
  - name: list(string, string, SiteCertificatesListOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.list'
    package: '@azure/arm-appservice'
    summary: Get all certificates in a resource group under a site.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, name: string, options?:
        SiteCertificatesListOptionalParams):
        PagedAsyncIterableIterator<Certificate, Certificate[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: options
          type: >-
            <xref uid="@azure/arm-appservice.SiteCertificatesListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appservice.Certificate" />, <xref
          uid="@azure/arm-appservice.Certificate" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listSlot(string, string, string, SiteCertificatesListSlotOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.listSlot'
    package: '@azure/arm-appservice'
    summary: >-
      Get all certificates in a resource group for a given site and a deployment
      slot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSlot(resourceGroupName: string, name: string, slot: string,
        options?: SiteCertificatesListSlotOptionalParams):
        PagedAsyncIterableIterator<Certificate, Certificate[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a binding
                        for the production slot.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesListSlotOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appservice.Certificate" />, <xref
          uid="@azure/arm-appservice.Certificate" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, CertificatePatchResource,
      SiteCertificatesUpdateOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.update'
    package: '@azure/arm-appservice'
    summary: Create or update a certificate under a given site.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string,
        certificateName: string, certificateEnvelope: CertificatePatchResource,
        options?: SiteCertificatesUpdateOptionalParams): Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: certificateEnvelope
          type: <xref uid="@azure/arm-appservice.CertificatePatchResource" />
          description: Details of certificate, if it exists already.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
  - name: >-
      updateSlot(string, string, string, string, CertificatePatchResource,
      SiteCertificatesUpdateSlotOptionalParams)
    uid: '@azure/arm-appservice.SiteCertificates.updateSlot'
    package: '@azure/arm-appservice'
    summary: Create or update a certificate for a site and deployment slot.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateSlot(resourceGroupName: string, name: string, slot:
        string, certificateName: string, certificateEnvelope:
        CertificatePatchResource, options?:
        SiteCertificatesUpdateSlotOptionalParams): Promise<Certificate>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of the site.
        - id: slot
          type: string
          description: >-
            Name of the deployment slot. If a slot is not specified, the API
            will create a binding
                        for the production slot.
        - id: certificateName
          type: string
          description: Name of the certificate.
        - id: certificateEnvelope
          type: <xref uid="@azure/arm-appservice.CertificatePatchResource" />
          description: Details of certificate, if it exists already.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appservice.SiteCertificatesUpdateSlotOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appservice.Certificate" />&gt;
