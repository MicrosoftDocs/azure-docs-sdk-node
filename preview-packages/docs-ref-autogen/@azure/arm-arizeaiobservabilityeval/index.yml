### YamlMime:TSPackage
uid: '@azure/arm-arizeaiobservabilityeval'
name: '@azure/arm-arizeaiobservabilityeval'
summary: ''
type: package
enums:
  - '@azure/arm-arizeaiobservabilityeval.KnownActionType'
  - '@azure/arm-arizeaiobservabilityeval.KnownCreatedByType'
  - '@azure/arm-arizeaiobservabilityeval.KnownManagedServiceIdentityType'
  - '@azure/arm-arizeaiobservabilityeval.KnownMarketplaceSubscriptionStatus'
  - '@azure/arm-arizeaiobservabilityeval.KnownOrigin'
  - '@azure/arm-arizeaiobservabilityeval.KnownResourceProvisioningState'
  - '@azure/arm-arizeaiobservabilityeval.KnownSingleSignOnStates'
  - '@azure/arm-arizeaiobservabilityeval.KnownSingleSignOnType'
  - '@azure/arm-arizeaiobservabilityeval.KnownVersions'
classes:
  - '@azure/arm-arizeaiobservabilityeval.ObservabilityEvalClient'
interfaces:
  - '@azure/arm-arizeaiobservabilityeval.ErrorAdditionalInfo'
  - '@azure/arm-arizeaiobservabilityeval.ErrorDetail'
  - '@azure/arm-arizeaiobservabilityeval.ErrorResponse'
  - '@azure/arm-arizeaiobservabilityeval.ManagedServiceIdentity'
  - '@azure/arm-arizeaiobservabilityeval.MarketplaceDetails'
  - '@azure/arm-arizeaiobservabilityeval.ObservabilityEvalClientOptionalParams'
  - '@azure/arm-arizeaiobservabilityeval.OfferDetails'
  - '@azure/arm-arizeaiobservabilityeval.Operation'
  - '@azure/arm-arizeaiobservabilityeval.OperationDisplay'
  - '@azure/arm-arizeaiobservabilityeval.OperationsListOptionalParams'
  - '@azure/arm-arizeaiobservabilityeval.OperationsOperations'
  - '@azure/arm-arizeaiobservabilityeval.OrganizationProperties'
  - '@azure/arm-arizeaiobservabilityeval.OrganizationResource'
  - '@azure/arm-arizeaiobservabilityeval.OrganizationResourceUpdate'
  - >-
    @azure/arm-arizeaiobservabilityeval.OrganizationsCreateOrUpdateOptionalParams
  - '@azure/arm-arizeaiobservabilityeval.OrganizationsDeleteOptionalParams'
  - '@azure/arm-arizeaiobservabilityeval.OrganizationsGetOptionalParams'
  - >-
    @azure/arm-arizeaiobservabilityeval.OrganizationsListByResourceGroupOptionalParams
  - >-
    @azure/arm-arizeaiobservabilityeval.OrganizationsListBySubscriptionOptionalParams
  - '@azure/arm-arizeaiobservabilityeval.OrganizationsOperations'
  - '@azure/arm-arizeaiobservabilityeval.OrganizationsUpdateOptionalParams'
  - '@azure/arm-arizeaiobservabilityeval.PageSettings'
  - '@azure/arm-arizeaiobservabilityeval.PagedAsyncIterableIterator'
  - '@azure/arm-arizeaiobservabilityeval.PartnerProperties'
  - '@azure/arm-arizeaiobservabilityeval.Resource'
  - '@azure/arm-arizeaiobservabilityeval.RestorePollerOptions'
  - '@azure/arm-arizeaiobservabilityeval.SingleSignOnPropertiesV2'
  - '@azure/arm-arizeaiobservabilityeval.SystemData'
  - '@azure/arm-arizeaiobservabilityeval.TrackedResource'
  - '@azure/arm-arizeaiobservabilityeval.UserAssignedIdentity'
  - '@azure/arm-arizeaiobservabilityeval.UserDetails'
typeAliases:
  - '@azure/arm-arizeaiobservabilityeval.ActionType'
  - '@azure/arm-arizeaiobservabilityeval.ContinuablePage'
  - '@azure/arm-arizeaiobservabilityeval.CreatedByType'
  - '@azure/arm-arizeaiobservabilityeval.ManagedServiceIdentityType'
  - '@azure/arm-arizeaiobservabilityeval.MarketplaceSubscriptionStatus'
  - '@azure/arm-arizeaiobservabilityeval.Origin'
  - '@azure/arm-arizeaiobservabilityeval.ResourceProvisioningState'
  - '@azure/arm-arizeaiobservabilityeval.SingleSignOnStates'
  - '@azure/arm-arizeaiobservabilityeval.SingleSignOnType'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(ObservabilityEvalClient, string, (args:
      any[]) => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-arizeaiobservabilityeval.restorePoller'
    package: '@azure/arm-arizeaiobservabilityeval'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client:
        ObservabilityEvalClient, serializedState: string, sourceOperation:
        (args: any[]) => PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-arizeaiobservabilityeval.ObservabilityEvalClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-arizeaiobservabilityeval.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
