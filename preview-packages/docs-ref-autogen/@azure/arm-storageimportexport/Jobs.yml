### YamlMime:TSType
name: Jobs
uid: '@azure/arm-storageimportexport.Jobs'
package: '@azure/arm-storageimportexport'
summary: Interface representing a Jobs.
fullName: Jobs
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: create(string, string, PutJobParameters, JobsCreateOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.create'
    package: '@azure/arm-storageimportexport'
    summary: >-
      Creates a new job or updates an existing job in the specified
      subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(jobName: string, resourceGroupName: string, body:
        PutJobParameters, options?: JobsCreateOptionalParams):
        Promise<JobResponse>
      parameters:
        - id: jobName
          type: string
          description: The name of the import/export job.
        - id: resourceGroupName
          type: string
          description: >-
            The resource group name uniquely identifies the resource group
            within the
                                     user subscription.
        - id: body
          type: <xref uid="@azure/arm-storageimportexport.PutJobParameters" />
          description: The parameters used for creating the job
        - id: options
          type: >-
            <xref uid="@azure/arm-storageimportexport.JobsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-storageimportexport.JobResponse"
          />&gt;
  - name: delete(string, string, JobsDeleteOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.delete'
    package: '@azure/arm-storageimportexport'
    summary: >-
      Deletes an existing job. Only jobs in the Creating or Completed states can
      be deleted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(jobName: string, resourceGroupName: string, options?:
        JobsDeleteOptionalParams): Promise<void>
      parameters:
        - id: jobName
          type: string
          description: The name of the import/export job.
        - id: resourceGroupName
          type: string
          description: >-
            The resource group name uniquely identifies the resource group
            within the
                                     user subscription.
        - id: options
          type: >-
            <xref uid="@azure/arm-storageimportexport.JobsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, JobsGetOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.get'
    package: '@azure/arm-storageimportexport'
    summary: Gets information about an existing job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(jobName: string, resourceGroupName: string, options?:
        JobsGetOptionalParams): Promise<JobResponse>
      parameters:
        - id: jobName
          type: string
          description: The name of the import/export job.
        - id: resourceGroupName
          type: string
          description: >-
            The resource group name uniquely identifies the resource group
            within the
                                     user subscription.
        - id: options
          type: <xref uid="@azure/arm-storageimportexport.JobsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-storageimportexport.JobResponse"
          />&gt;
  - name: listByResourceGroup(string, JobsListByResourceGroupOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.listByResourceGroup'
    package: '@azure/arm-storageimportexport'
    summary: Returns all active and completed jobs in a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        JobsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<JobResponse, JobResponse[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The resource group name uniquely identifies the resource group
            within the
                                     user subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storageimportexport.JobsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-storageimportexport.JobResponse" />, <xref
          uid="@azure/arm-storageimportexport.JobResponse" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(JobsListBySubscriptionOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.listBySubscription'
    package: '@azure/arm-storageimportexport'
    summary: Returns all active and completed jobs in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        JobsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<JobResponse, JobResponse[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storageimportexport.JobsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-storageimportexport.JobResponse" />, <xref
          uid="@azure/arm-storageimportexport.JobResponse" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, string, UpdateJobParameters, JobsUpdateOptionalParams)
    uid: '@azure/arm-storageimportexport.Jobs.update'
    package: '@azure/arm-storageimportexport'
    summary: >-
      Updates specific properties of a job. You can call this operation to
      notify the Import/Export

      service that the hard drives comprising the import or export job have been
      shipped to the Microsoft

      data center. It can also be used to cancel an existing job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(jobName: string, resourceGroupName: string, body:
        UpdateJobParameters, options?: JobsUpdateOptionalParams):
        Promise<JobResponse>
      parameters:
        - id: jobName
          type: string
          description: The name of the import/export job.
        - id: resourceGroupName
          type: string
          description: >-
            The resource group name uniquely identifies the resource group
            within the
                                     user subscription.
        - id: body
          type: <xref uid="@azure/arm-storageimportexport.UpdateJobParameters" />
          description: The parameters to update in the job
        - id: options
          type: >-
            <xref uid="@azure/arm-storageimportexport.JobsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-storageimportexport.JobResponse"
          />&gt;
