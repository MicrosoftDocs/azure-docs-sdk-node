### YamlMime:TSType
name: Form
uid: '@azure/functions.Form'
package: '@azure/functions'
summary: ''
fullName: Form
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: length
    uid: '@azure/functions.Form.length'
    package: '@azure/functions'
    summary: The number of parts in this form
    fullName: length
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'length: number'
      return:
        description: ''
        type: number
inheritedMethods:
  - name: '[iterator]()'
    uid: '@azure/functions.Form.[iterator]'
    package: '@azure/functions'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function [iterator](): Iterator<[string, FormPart], any, undefined>'
      return:
        description: ''
        type: Iterator&lt;[string, FormPart], any, undefined&gt;
    inheritanceDescription: <b>Inherited From</b> Iterable.__@iterator@101
methods:
  - name: get(string)
    uid: '@azure/functions.Form.get'
    package: '@azure/functions'
    summary: >-
      Returns the value of the first name-value pair whose name is `name`. If
      there are no such pairs, `null` is returned.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function get(name: string): null | FormPart'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        description: ''
        type: null | <xref uid="@azure/functions.FormPart" />
  - name: getAll(string)
    uid: '@azure/functions.Form.getAll'
    package: '@azure/functions'
    summary: >-
      Returns the values of all name-value pairs whose name is `name`. If there
      are no such pairs, an empty array is returned.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getAll(name: string): FormPart[]'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/functions.FormPart" />[]
  - name: has(string)
    uid: '@azure/functions.Form.has'
    package: '@azure/functions'
    summary: >-
      Returns `true` if there is at least one name-value pair whose name is
      `name`.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function has(name: string): boolean'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        description: ''
        type: boolean
extends: Iterable&lt;[string, FormPart]&gt;
