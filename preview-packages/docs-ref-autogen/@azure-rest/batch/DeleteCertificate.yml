### YamlMime:TSType
name: DeleteCertificate
uid: '@azure-rest/batch.DeleteCertificate'
package: '@azure-rest/batch'
summary: ''
fullName: DeleteCertificate
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: delete(DeleteCertificateParameters)
    uid: '@azure-rest/batch.DeleteCertificate.delete'
    package: '@azure-rest/batch'
    summary: >-
      You cannot delete a Certificate if a resource (Pool or Compute Node) is
      using

      it. Before you can delete a Certificate, you must therefore make sure that
      the

      Certificate is not associated with any existing Pools, the Certificate is
      not

      installed on any Nodes (even if you remove a Certificate from a Pool, it
      is not

      removed from existing Compute Nodes in that Pool until they restart), and
      no

      running Tasks depend on the Certificate. If you try to delete a
      Certificate

      that is in use, the deletion fails. The Certificate status changes to

      deleteFailed. You can use Cancel Delete Certificate to set the status back
      to

      active if you decide that you want to continue using the Certificate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(options?: DeleteCertificateParameters):
        StreamableMethod<DeleteCertificate202Response |
        DeleteCertificateDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.DeleteCertificateParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.DeleteCertificate202Response" /> | <xref
          uid="@azure-rest/batch.DeleteCertificateDefaultResponse" />&gt;
  - name: get(GetCertificateParameters)
    uid: '@azure-rest/batch.DeleteCertificate.get'
    package: '@azure-rest/batch'
    summary: Gets information about the specified Certificate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: GetCertificateParameters):
        StreamableMethod<GetCertificate200Response |
        GetCertificateDefaultResponse>
      parameters:
        - id: options
          type: <xref uid="@azure-rest/batch.GetCertificateParameters" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/batch.GetCertificate200Response" /> | <xref
          uid="@azure-rest/batch.GetCertificateDefaultResponse" />&gt;
