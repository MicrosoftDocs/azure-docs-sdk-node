### YamlMime:TSPackage
uid: '@azure/arm-playwrighttesting'
name: '@azure/arm-playwrighttesting'
summary: ''
type: package
enums:
  - '@azure/arm-playwrighttesting.KnownActionType'
  - '@azure/arm-playwrighttesting.KnownCheckNameAvailabilityReason'
  - '@azure/arm-playwrighttesting.KnownCreatedByType'
  - '@azure/arm-playwrighttesting.KnownEnablementStatus'
  - '@azure/arm-playwrighttesting.KnownFreeTrialState'
  - '@azure/arm-playwrighttesting.KnownOfferingType'
  - '@azure/arm-playwrighttesting.KnownOrigin'
  - '@azure/arm-playwrighttesting.KnownProvisioningState'
  - '@azure/arm-playwrighttesting.KnownQuotaNames'
  - '@azure/arm-playwrighttesting.KnownVersions'
classes:
  - '@azure/arm-playwrighttesting.AzurePlaywrightServiceClient'
interfaces:
  - '@azure/arm-playwrighttesting.Account'
  - '@azure/arm-playwrighttesting.AccountFreeTrialProperties'
  - '@azure/arm-playwrighttesting.AccountProperties'
  - '@azure/arm-playwrighttesting.AccountQuota'
  - '@azure/arm-playwrighttesting.AccountQuotaProperties'
  - '@azure/arm-playwrighttesting.AccountQuotasGetOptionalParams'
  - '@azure/arm-playwrighttesting.AccountQuotasListByAccountOptionalParams'
  - '@azure/arm-playwrighttesting.AccountQuotasOperations'
  - '@azure/arm-playwrighttesting.AccountUpdate'
  - '@azure/arm-playwrighttesting.AccountUpdateProperties'
  - '@azure/arm-playwrighttesting.AccountsCheckNameAvailabilityOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsCreateOrUpdateOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsDeleteOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsGetOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsListByResourceGroupOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsListBySubscriptionOptionalParams'
  - '@azure/arm-playwrighttesting.AccountsOperations'
  - '@azure/arm-playwrighttesting.AccountsUpdateOptionalParams'
  - '@azure/arm-playwrighttesting.AzurePlaywrightServiceClientOptionalParams'
  - '@azure/arm-playwrighttesting.CheckNameAvailabilityRequest'
  - '@azure/arm-playwrighttesting.CheckNameAvailabilityResponse'
  - '@azure/arm-playwrighttesting.FreeTrialProperties'
  - '@azure/arm-playwrighttesting.Operation'
  - '@azure/arm-playwrighttesting.OperationDisplay'
  - '@azure/arm-playwrighttesting.OperationsListOptionalParams'
  - '@azure/arm-playwrighttesting.OperationsOperations'
  - '@azure/arm-playwrighttesting.PageSettings'
  - '@azure/arm-playwrighttesting.PagedAsyncIterableIterator'
  - '@azure/arm-playwrighttesting.ProxyResource'
  - '@azure/arm-playwrighttesting.Quota'
  - '@azure/arm-playwrighttesting.QuotaProperties'
  - '@azure/arm-playwrighttesting.QuotasGetOptionalParams'
  - '@azure/arm-playwrighttesting.QuotasListBySubscriptionOptionalParams'
  - '@azure/arm-playwrighttesting.QuotasOperations'
  - '@azure/arm-playwrighttesting.Resource'
  - '@azure/arm-playwrighttesting.RestorePollerOptions'
  - '@azure/arm-playwrighttesting.SystemData'
  - '@azure/arm-playwrighttesting.TrackedResource'
typeAliases:
  - '@azure/arm-playwrighttesting.ActionType'
  - '@azure/arm-playwrighttesting.CheckNameAvailabilityReason'
  - '@azure/arm-playwrighttesting.ContinuablePage'
  - '@azure/arm-playwrighttesting.CreatedByType'
  - '@azure/arm-playwrighttesting.EnablementStatus'
  - '@azure/arm-playwrighttesting.FreeTrialState'
  - '@azure/arm-playwrighttesting.OfferingType'
  - '@azure/arm-playwrighttesting.Origin'
  - '@azure/arm-playwrighttesting.ProvisioningState'
  - '@azure/arm-playwrighttesting.QuotaNames'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(AzurePlaywrightServiceClient, string,
      (args: any[]) => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-playwrighttesting.restorePoller'
    package: '@azure/arm-playwrighttesting'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client:
        AzurePlaywrightServiceClient, serializedState: string, sourceOperation:
        (args: any[]) => PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AzurePlaywrightServiceClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-playwrighttesting.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
