### YamlMime:TSType
name: DialogServiceConnector
uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector
package: microsoft-cognitiveservices-speech-sdk
summary: Dialog Service Connector
fullName: DialogServiceConnector
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: DialogServiceConnector(DialogServiceConfig, AudioConfig)
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: Initializes an instance of the DialogServiceConnector.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new DialogServiceConnector(dialogConfig: DialogServiceConfig,
        audioConfig?: AudioConfig)
      parameters:
        - id: dialogConfig
          type: >-
            <xref
            uid="microsoft-cognitiveservices-speech-sdk.DialogServiceConfig" />
          description: Set of properties to configure this recognizer.
        - id: audioConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.AudioConfig" />
          description: An optional audio config associated with the recognizer
properties:
  - name: activityReceived
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.activityReceived
    package: microsoft-cognitiveservices-speech-sdk
    summary: The event activityReceived signals that an activity has been received.
    fullName: activityReceived
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public activityReceived: (sender: DialogServiceConnector, event:
        ActivityReceivedEventArgs) => void
      return:
        description: ''
        type: >-
          (sender: DialogServiceConnector, event: ActivityReceivedEventArgs)
          =&gt; void
  - name: authorizationToken
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.authorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the authorization token used to communicate with the service.
    fullName: authorizationToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: string authorizationToken
      return:
        description: Authorization token.
        type: string
  - name: canceled
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.canceled
    package: microsoft-cognitiveservices-speech-sdk
    summary: The event canceled signals that an error occurred during recognition.
    fullName: canceled
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public canceled: (sender: DialogServiceConnector, event:
        SpeechRecognitionCanceledEventArgs) => void
      return:
        description: ''
        type: >-
          (sender: DialogServiceConnector, event:
          SpeechRecognitionCanceledEventArgs) =&gt; void
  - name: internalData
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.internalData
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    fullName: internalData
    remarks: ''
    isDeprecated: false
    syntax:
      content: object internalData
      return:
        description: ''
        type: object
  - name: properties
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.properties
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The collection of properties and their values defined for this
      DialogServiceConnector.
    fullName: properties
    remarks: ''
    isDeprecated: false
    syntax:
      content: PropertyCollection properties
      return:
        description: >-
          The collection of properties and their values defined for this
          DialogServiceConnector.
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.PropertyCollection"
          />
  - name: recognized
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.recognized
    package: microsoft-cognitiveservices-speech-sdk
    summary: The event recognized signals that a final recognition result is received.
    fullName: recognized
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public recognized: (sender: DialogServiceConnector, event:
        SpeechRecognitionEventArgs) => void
      return:
        description: ''
        type: >-
          (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs)
          =&gt; void
  - name: recognizing
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.recognizing
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The event recognizing signals that an intermediate recognition result is
      received.
    fullName: recognizing
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public recognizing: (sender: DialogServiceConnector, event:
        SpeechRecognitionEventArgs) => void
      return:
        description: ''
        type: >-
          (sender: DialogServiceConnector, event: SpeechRecognitionEventArgs)
          =&gt; void
  - name: speechActivityTemplate
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.speechActivityTemplate
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Gets the template for the activity generated by service from speech.
      Properties from the template will be stamped on the generated activity.
      It can be empty
    fullName: speechActivityTemplate
    remarks: ''
    isDeprecated: false
    syntax:
      content: string speechActivityTemplate
      return:
        description: ''
        type: string
  - name: telemetryEnabled
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.telemetryEnabled
    package: microsoft-cognitiveservices-speech-sdk
    summary: This method returns the current state of the telemetry setting.
    fullName: telemetryEnabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: static boolean telemetryEnabled
      return:
        description: true if the telemetry is enabled, false otherwise.
        type: boolean
  - name: turnStatusReceived
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.turnStatusReceived
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The event turnStatusReceived signals that a turn status message has been
      received. These messages are

      associated with both an interaction and a conversation. They are used to
      notify the client in the event

      of an interaction failure with the dialog backend, e.g. in the event of a
      network issue, timeout, crash,

      or other problem.
    fullName: turnStatusReceived
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public turnStatusReceived: (sender: DialogServiceConnector, event:
        TurnStatusReceivedEventArgs) => void
      return:
        description: ''
        type: >-
          (sender: DialogServiceConnector, event: TurnStatusReceivedEventArgs)
          =&gt; void
inheritedProperties:
  - name: sessionStarted
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.sessionStarted
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for session started events.
    fullName: sessionStarted
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public sessionStarted: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        description: ''
        type: '(sender: Recognizer, event: SessionEventArgs) =&gt; void'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Recognizer.sessionStarted](xref:microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStarted)
  - name: sessionStopped
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.sessionStopped
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for session stopped events.
    fullName: sessionStopped
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public sessionStopped: (sender: Recognizer, event: SessionEventArgs) =>
        void
      return:
        description: ''
        type: '(sender: Recognizer, event: SessionEventArgs) =&gt; void'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Recognizer.sessionStopped](xref:microsoft-cognitiveservices-speech-sdk.Recognizer.sessionStopped)
  - name: speechEndDetected
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.speechEndDetected
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for speech stopped events.
    fullName: speechEndDetected
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public speechEndDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        description: ''
        type: '(sender: Recognizer, event: RecognitionEventArgs) =&gt; void'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Recognizer.speechEndDetected](xref:microsoft-cognitiveservices-speech-sdk.Recognizer.speechEndDetected)
  - name: speechStartDetected
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.speechStartDetected
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for speech started events.
    fullName: speechStartDetected
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public speechStartDetected: (sender: Recognizer, event:
        RecognitionEventArgs) => void
      return:
        description: ''
        type: '(sender: Recognizer, event: RecognitionEventArgs) =&gt; void'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Recognizer.speechStartDetected](xref:microsoft-cognitiveservices-speech-sdk.Recognizer.speechStartDetected)
inheritedMethods:
  - name: enableTelemetry(boolean)
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.enableTelemetry
    package: microsoft-cognitiveservices-speech-sdk
    summary: This method globally enables or disables telemetry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static function enableTelemetry(enabled: boolean)'
      parameters:
        - id: enabled
          type: boolean
          description: |-
            Global setting for telemetry collection.
            If set to true, telemetry information like microphone errors,
            recognition errors are collected and sent to Microsoft.
            If set to false, no telemetry is sent to Microsoft.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Recognizer.enableTelemetry](xref:microsoft-cognitiveservices-speech-sdk.Recognizer.enableTelemetry)
methods:
  - name: 'close(() => void, (error: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.close
    package: microsoft-cognitiveservices-speech-sdk
    summary: closes all external resources held by an instance of this class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function close(cb?: () => void, err?: (error: string) => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(error: string) =&gt; void'
          description: ''
  - name: 'connect(() => void, (error: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.connect
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Starts a connection to the service.

      Users can optionally call connect() to manually set up a connection in
      advance, before starting interactions.


      Note: On return, the connection might not be ready yet. Please subscribe
      to the Connected event to

      be notified when the connection is established.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function connect(cb?: () => void, err?: (error: string) => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(error: string) =&gt; void'
          description: ''
  - name: 'disconnect(() => void, (error: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.disconnect
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Closes the connection the service.

      Users can optionally call disconnect() to manually shutdown the connection
      of the associated DialogServiceConnector.


      If disconnect() is called during a recognition, recognition will fail and
      cancel with an error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function disconnect(cb?: () => void, err?: (error: string) => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(error: string) =&gt; void'
          description: ''
  - name: 'listenOnceAsync((e: SpeechRecognitionResult) => void, (e: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.listenOnceAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Starts recognition and stops after the first utterance is recognized.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listenOnceAsync(cb?: (e: SpeechRecognitionResult) => void,
        err?: (e: string) => void)
      parameters:
        - id: cb
          type: '(e: SpeechRecognitionResult) =&gt; void'
          description: Callback that received the result when the reco has completed.
        - id: err
          type: '(e: string) =&gt; void'
          description: Callback invoked in case of an error.
  - name: 'sendActivityAsync(string, () => void, (error: string) => void)'
    uid: >-
      microsoft-cognitiveservices-speech-sdk.DialogServiceConnector.sendActivityAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendActivityAsync(activity: string, cb?: () => void, errCb?:
        (error: string) => void)
      parameters:
        - id: activity
          type: string
          description: ''
        - id: cb
          type: () =&gt; void
          description: ''
        - id: errCb
          type: '(error: string) =&gt; void'
          description: ''
extends: <xref uid="microsoft-cognitiveservices-speech-sdk.Recognizer" />
