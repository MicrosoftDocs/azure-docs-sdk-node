### YamlMime:TSType
name: LoggerContext
uid: '@typespec/ts-http-runtime.LoggerContext'
package: '@typespec/ts-http-runtime'
summary: todo doc
fullName: LoggerContext
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: logger
    uid: '@typespec/ts-http-runtime.LoggerContext.logger'
    package: '@typespec/ts-http-runtime'
    summary: >-
      The TypeSpecRuntimeClientLogger provides a mechanism for overriding where
      logs are output to.

      By default, logs are sent to stderr.

      Override the `log` method to redirect logs to another location.
    fullName: logger
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'logger: Debugger'
      return:
        description: ''
        type: <xref uid="@typespec/ts-http-runtime.Debugger" />
methods:
  - name: getLogLevel()
    uid: '@typespec/ts-http-runtime.LoggerContext.getLogLevel'
    package: '@typespec/ts-http-runtime'
    summary: Retrieves the currently specified log level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getLogLevel(): undefined | TypeSpecRuntimeLogLevel'
      return:
        description: ''
        type: >-
          undefined | <xref
          uid="@typespec/ts-http-runtime.TypeSpecRuntimeLogLevel" />
  - name: setLogLevel(TypeSpecRuntimeLogLevel)
    uid: '@typespec/ts-http-runtime.LoggerContext.setLogLevel'
    package: '@typespec/ts-http-runtime'
    summary: >-
      Immediately enables logging at the specified log level. If no level is
      specified, logging is disabled.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setLogLevel(logLevel?: TypeSpecRuntimeLogLevel)'
      parameters:
        - id: logLevel
          type: <xref uid="@typespec/ts-http-runtime.TypeSpecRuntimeLogLevel" />
          description: ''
