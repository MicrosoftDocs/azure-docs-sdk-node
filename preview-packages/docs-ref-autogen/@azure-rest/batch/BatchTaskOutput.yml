### YamlMime:TSType
name: BatchTaskOutput
uid: '@azure-rest/batch.BatchTaskOutput'
package: '@azure-rest/batch'
summary: |-
  Batch will retry Tasks when a recovery operation is triggered on a Node.
  Examples of recovery operations include (but are not limited to) when an
  unhealthy Node is rebooted or a Compute Node disappeared due to host failure.
  Retries due to recovery operations are independent of and are not counted
  against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal
  retry due to a recovery operation may occur. Because of this, all Tasks should
  be idempotent. This means Tasks need to tolerate being interrupted and
  restarted without causing any corruption or duplicate data. The best practice
  for long running Tasks is to use some form of checkpointing.
fullName: BatchTaskOutput
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: affinityInfo
    uid: '@azure-rest/batch.BatchTaskOutput.affinityInfo'
    package: '@azure-rest/batch'
    summary: >-
      A locality hint that can be used by the Batch service to select a Compute
      Node on which to start the new Task.
    fullName: affinityInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'affinityInfo?: BatchAffinityInfoOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchAffinityInfoOutput" />
  - name: applicationPackageReferences
    uid: '@azure-rest/batch.BatchTaskOutput.applicationPackageReferences'
    package: '@azure-rest/batch'
    summary: >-
      A list of Packages that the Batch service will deploy to the Compute Node
      before running the command line. Application packages are downloaded and
      deployed to a shared directory, not the Task working directory. Therefore,
      if a referenced package is already on the Node, and is up to date, then it
      is not re-downloaded; the existing copy on the Compute Node is used. If a
      referenced Package cannot be installed, for example because the package
      has been deleted or because download failed, the Task fails.
    fullName: applicationPackageReferences
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'applicationPackageReferences?: BatchApplicationPackageReferenceOutput[]'
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/batch.BatchApplicationPackageReferenceOutput"
          />[]
  - name: authenticationTokenSettings
    uid: '@azure-rest/batch.BatchTaskOutput.authenticationTokenSettings'
    package: '@azure-rest/batch'
    summary: >-
      The settings for an authentication token that the Task can use to perform
      Batch service operations. If this property is set, the Batch service
      provides the Task with an authentication token which can be used to
      authenticate Batch service operations without requiring an Account access
      key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
      environment variable. The operations that the Task can carry out using the
      token depend on the settings. For example, a Task can request Job
      permissions in order to add other Tasks to the Job, or check the status of
      the Job or of other Tasks under the Job.
    fullName: authenticationTokenSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettingsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.AuthenticationTokenSettingsOutput" />
  - name: commandLine
    uid: '@azure-rest/batch.BatchTaskOutput.commandLine'
    package: '@azure-rest/batch'
    summary: >-
      The command line of the Task. For multi-instance Tasks, the command line
      is executed as the primary Task, after the primary Task and all subtasks
      have finished executing the coordination command line. The command line
      does not run under a shell, and therefore cannot take advantage of shell
      features such as environment variable expansion. If you want to take
      advantage of such features, you should invoke the shell in the command
      line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c
      MyCommand" in Linux. If the command line refers to file paths, it should
      use a relative path (relative to the Task working directory), or use the
      Batch provided environment variable
      (https://learn.microsoft.com/azure/batch/batch-compute-node-environment-variables).
    fullName: commandLine
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'commandLine?: string'
      return:
        description: ''
        type: string
  - name: constraints
    uid: '@azure-rest/batch.BatchTaskOutput.constraints'
    package: '@azure-rest/batch'
    summary: The execution constraints that apply to this Task.
    fullName: constraints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constraints?: BatchTaskConstraintsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskConstraintsOutput" />
  - name: containerSettings
    uid: '@azure-rest/batch.BatchTaskOutput.containerSettings'
    package: '@azure-rest/batch'
    summary: >-
      The settings for the container under which the Task runs. If the Pool that
      will run this Task has containerConfiguration set, this must be set as
      well. If the Pool that will run this Task doesn't have
      containerConfiguration set, this must not be set. When this is specified,
      all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of
      Azure Batch directories on the node) are mapped into the container, all
      Task environment variables are mapped into the container, and the Task
      command line is executed in the container. Files produced in the container
      outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
      meaning that Batch file APIs will not be able to access those files.
    fullName: containerSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'containerSettings?: BatchTaskContainerSettingsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskContainerSettingsOutput" />
  - name: creationTime
    uid: '@azure-rest/batch.BatchTaskOutput.creationTime'
    package: '@azure-rest/batch'
    summary: The creation time of the Task.
    fullName: creationTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'creationTime?: string'
      return:
        description: ''
        type: string
  - name: dependsOn
    uid: '@azure-rest/batch.BatchTaskOutput.dependsOn'
    package: '@azure-rest/batch'
    summary: >-
      The Tasks that this Task depends on. This Task will not be scheduled until
      all Tasks that it depends on have completed successfully. If any of those
      Tasks fail and exhaust their retry counts, this Task will never be
      scheduled.
    fullName: dependsOn
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dependsOn?: BatchTaskDependenciesOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskDependenciesOutput" />
  - name: displayName
    uid: '@azure-rest/batch.BatchTaskOutput.displayName'
    package: '@azure-rest/batch'
    summary: >-
      A display name for the Task. The display name need not be unique and can
      contain any Unicode characters up to a maximum length of 1024.
    fullName: displayName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'displayName?: string'
      return:
        description: ''
        type: string
  - name: environmentSettings
    uid: '@azure-rest/batch.BatchTaskOutput.environmentSettings'
    package: '@azure-rest/batch'
    summary: A list of environment variable settings for the Task.
    fullName: environmentSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'environmentSettings?: EnvironmentSettingOutput[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.EnvironmentSettingOutput" />[]
  - name: eTag
    uid: '@azure-rest/batch.BatchTaskOutput.eTag'
    package: '@azure-rest/batch'
    summary: >-
      The ETag of the Task. This is an opaque string. You can use it to detect
      whether the Task has changed between requests. In particular, you can be
      pass the ETag when updating a Task to specify that your changes should
      take effect only if nobody else has modified the Task in the meantime.
    fullName: eTag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'eTag?: string'
      return:
        description: ''
        type: string
  - name: executionInfo
    uid: '@azure-rest/batch.BatchTaskOutput.executionInfo'
    package: '@azure-rest/batch'
    summary: Information about the execution of the Task.
    fullName: executionInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'executionInfo?: BatchTaskExecutionInfoOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskExecutionInfoOutput" />
  - name: exitConditions
    uid: '@azure-rest/batch.BatchTaskOutput.exitConditions'
    package: '@azure-rest/batch'
    summary: How the Batch service should respond when the Task completes.
    fullName: exitConditions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'exitConditions?: ExitConditionsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.ExitConditionsOutput" />
  - name: id
    uid: '@azure-rest/batch.BatchTaskOutput.id'
    package: '@azure-rest/batch'
    summary: >-
      A string that uniquely identifies the Task within the Job. The ID can
      contain any combination of alphanumeric characters including hyphens and
      underscores, and cannot contain more than 64 characters.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
  - name: lastModified
    uid: '@azure-rest/batch.BatchTaskOutput.lastModified'
    package: '@azure-rest/batch'
    summary: The last modified time of the Task.
    fullName: lastModified
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastModified?: string'
      return:
        description: ''
        type: string
  - name: multiInstanceSettings
    uid: '@azure-rest/batch.BatchTaskOutput.multiInstanceSettings'
    package: '@azure-rest/batch'
    summary: >-
      An object that indicates that the Task is a multi-instance Task, and
      contains information about how to run the multi-instance Task.
    fullName: multiInstanceSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'multiInstanceSettings?: MultiInstanceSettingsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.MultiInstanceSettingsOutput" />
  - name: nodeInfo
    uid: '@azure-rest/batch.BatchTaskOutput.nodeInfo'
    package: '@azure-rest/batch'
    summary: Information about the Compute Node on which the Task ran.
    fullName: nodeInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodeInfo?: BatchNodeInfoOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchNodeInfoOutput" />
  - name: outputFiles
    uid: '@azure-rest/batch.BatchTaskOutput.outputFiles'
    package: '@azure-rest/batch'
    summary: >-
      A list of files that the Batch service will upload from the Compute Node
      after running the command line. For multi-instance Tasks, the files will
      only be uploaded from the Compute Node on which the primary Task is
      executed.
    fullName: outputFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'outputFiles?: OutputFileOutput[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.OutputFileOutput" />[]
  - name: previousState
    uid: '@azure-rest/batch.BatchTaskOutput.previousState'
    package: '@azure-rest/batch'
    summary: >-
      The previous state of the Task. This property is not set if the Task is in
      its initial Active state.


      Possible values: "active", "preparing", "running", "completed"
    fullName: previousState
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'previousState?: string'
      return:
        description: ''
        type: string
  - name: previousStateTransitionTime
    uid: '@azure-rest/batch.BatchTaskOutput.previousStateTransitionTime'
    package: '@azure-rest/batch'
    summary: >-
      The time at which the Task entered its previous state. This property is
      not set if the Task is in its initial Active state.
    fullName: previousStateTransitionTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'previousStateTransitionTime?: string'
      return:
        description: ''
        type: string
  - name: requiredSlots
    uid: '@azure-rest/batch.BatchTaskOutput.requiredSlots'
    package: '@azure-rest/batch'
    summary: >-
      The number of scheduling slots that the Task requires to run. The default
      is 1. A Task can only be scheduled to run on a compute node if the node
      has enough free scheduling slots available. For multi-instance Tasks, this
      must be 1.
    fullName: requiredSlots
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'requiredSlots?: number'
      return:
        description: ''
        type: number
  - name: resourceFiles
    uid: '@azure-rest/batch.BatchTaskOutput.resourceFiles'
    package: '@azure-rest/batch'
    summary: >-
      A list of files that the Batch service will download to the Compute Node
      before running the command line. For multi-instance Tasks, the resource
      files will only be downloaded to the Compute Node on which the primary
      Task is executed. There is a maximum size for the list of resource files. 
      When the max size is exceeded, the request will fail and the response
      error code will be RequestEntityTooLarge. If this occurs, the collection
      of ResourceFiles must be reduced in size. This can be achieved using .zip
      files, Application Packages, or Docker Containers.
    fullName: resourceFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceFiles?: ResourceFileOutput[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.ResourceFileOutput" />[]
  - name: state
    uid: '@azure-rest/batch.BatchTaskOutput.state'
    package: '@azure-rest/batch'
    summary: |-
      The current state of the Task.

      Possible values: "active", "preparing", "running", "completed"
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state?: string'
      return:
        description: ''
        type: string
  - name: stateTransitionTime
    uid: '@azure-rest/batch.BatchTaskOutput.stateTransitionTime'
    package: '@azure-rest/batch'
    summary: The time at which the Task entered its current state.
    fullName: stateTransitionTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stateTransitionTime?: string'
      return:
        description: ''
        type: string
  - name: stats
    uid: '@azure-rest/batch.BatchTaskOutput.stats'
    package: '@azure-rest/batch'
    summary: Resource usage statistics for the Task.
    fullName: stats
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stats?: BatchTaskStatisticsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskStatisticsOutput" />
  - name: url
    uid: '@azure-rest/batch.BatchTaskOutput.url'
    package: '@azure-rest/batch'
    summary: The URL of the Task.
    fullName: url
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'url?: string'
      return:
        description: ''
        type: string
  - name: userIdentity
    uid: '@azure-rest/batch.BatchTaskOutput.userIdentity'
    package: '@azure-rest/batch'
    summary: >-
      The user identity under which the Task runs. If omitted, the Task runs as
      a non-administrative user unique to the Task.
    fullName: userIdentity
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userIdentity?: UserIdentityOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.UserIdentityOutput" />
