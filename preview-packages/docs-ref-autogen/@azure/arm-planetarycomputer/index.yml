### YamlMime:TSPackage
uid: '@azure/arm-planetarycomputer'
name: '@azure/arm-planetarycomputer'
summary: ''
type: package
enums:
  - '@azure/arm-planetarycomputer.KnownAutoGeneratedDomainNameLabelScope'
  - '@azure/arm-planetarycomputer.KnownCatalogTier'
  - '@azure/arm-planetarycomputer.KnownCreatedByType'
  - '@azure/arm-planetarycomputer.KnownManagedServiceIdentityType'
  - '@azure/arm-planetarycomputer.KnownProvisioningState'
  - '@azure/arm-planetarycomputer.KnownVersions'
classes:
  - '@azure/arm-planetarycomputer.SpatioClient'
interfaces:
  - '@azure/arm-planetarycomputer.ErrorAdditionalInfo'
  - '@azure/arm-planetarycomputer.ErrorDetail'
  - '@azure/arm-planetarycomputer.ErrorResponse'
  - '@azure/arm-planetarycomputer.GeoCatalog'
  - '@azure/arm-planetarycomputer.GeoCatalogProperties'
  - '@azure/arm-planetarycomputer.GeoCatalogUpdate'
  - '@azure/arm-planetarycomputer.GeoCatalogsCreateOptionalParams'
  - '@azure/arm-planetarycomputer.GeoCatalogsDeleteOptionalParams'
  - '@azure/arm-planetarycomputer.GeoCatalogsGetOptionalParams'
  - '@azure/arm-planetarycomputer.GeoCatalogsListByResourceGroupOptionalParams'
  - '@azure/arm-planetarycomputer.GeoCatalogsListBySubscriptionOptionalParams'
  - '@azure/arm-planetarycomputer.GeoCatalogsOperations'
  - '@azure/arm-planetarycomputer.GeoCatalogsUpdateOptionalParams'
  - '@azure/arm-planetarycomputer.ManagedServiceIdentity'
  - '@azure/arm-planetarycomputer.ManagedServiceIdentityUpdate'
  - '@azure/arm-planetarycomputer.PageSettings'
  - '@azure/arm-planetarycomputer.PagedAsyncIterableIterator'
  - '@azure/arm-planetarycomputer.Resource'
  - '@azure/arm-planetarycomputer.RestorePollerOptions'
  - '@azure/arm-planetarycomputer.SpatioClientOptionalParams'
  - '@azure/arm-planetarycomputer.SystemData'
  - '@azure/arm-planetarycomputer.TrackedResource'
  - '@azure/arm-planetarycomputer.UserAssignedIdentity'
typeAliases:
  - '@azure/arm-planetarycomputer.AutoGeneratedDomainNameLabelScope'
  - '@azure/arm-planetarycomputer.CatalogTier'
  - '@azure/arm-planetarycomputer.ContinuablePage'
  - '@azure/arm-planetarycomputer.CreatedByType'
  - '@azure/arm-planetarycomputer.ManagedServiceIdentityType'
  - '@azure/arm-planetarycomputer.ProvisioningState'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(SpatioClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-planetarycomputer.restorePoller'
    package: '@azure/arm-planetarycomputer'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: SpatioClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-planetarycomputer.SpatioClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-planetarycomputer.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
