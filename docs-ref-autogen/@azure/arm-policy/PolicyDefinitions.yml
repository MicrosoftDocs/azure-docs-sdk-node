### YamlMime:TSType
name: PolicyDefinitions
uid: '@azure/arm-policy.PolicyDefinitions'
package: '@azure/arm-policy'
summary: Interface representing a PolicyDefinitions.
fullName: PolicyDefinitions
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, PolicyDefinition,
      PolicyDefinitionsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.createOrUpdate'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a policy definition in the given
      subscription with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(policyDefinitionName: string, parameters:
        PolicyDefinition, options?:
        PolicyDefinitionsCreateOrUpdateOptionalParams):
        Promise<PolicyDefinition>
      parameters:
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to create.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicyDefinition" />
          description: The policy definition properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicyDefinition" />&gt;
  - name: >-
      createOrUpdateAtManagementGroup(string, string, PolicyDefinition,
      PolicyDefinitionsCreateOrUpdateAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.createOrUpdateAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a policy definition in the given
      management group with the given

      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        policyDefinitionName: string, parameters: PolicyDefinition, options?:
        PolicyDefinitionsCreateOrUpdateAtManagementGroupOptionalParams):
        Promise<PolicyDefinition>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to create.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicyDefinition" />
          description: The policy definition properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsCreateOrUpdateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicyDefinition" />&gt;
  - name: delete(string, PolicyDefinitionsDeleteOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.delete'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes the policy definition in the given subscription
      with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(policyDefinitionName: string, options?:
        PolicyDefinitionsDeleteOptionalParams): Promise<void>
      parameters:
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to delete.
        - id: options
          type: >-
            <xref uid="@azure/arm-policy.PolicyDefinitionsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      deleteAtManagementGroup(string, string,
      PolicyDefinitionsDeleteAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.deleteAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes the policy definition in the given management group
      with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        policyDefinitionName: string, options?:
        PolicyDefinitionsDeleteAtManagementGroupOptionalParams): Promise<void>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsDeleteAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, PolicyDefinitionsGetOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.get'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the policy definition in the given subscription
      with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(policyDefinitionName: string, options?:
        PolicyDefinitionsGetOptionalParams): Promise<PolicyDefinition>
      parameters:
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to get.
        - id: options
          type: <xref uid="@azure/arm-policy.PolicyDefinitionsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicyDefinition" />&gt;
  - name: >-
      getAtManagementGroup(string, string,
      PolicyDefinitionsGetAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.getAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the policy definition in the given management
      group with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        policyDefinitionName: string, options?:
        PolicyDefinitionsGetAtManagementGroupOptionalParams):
        Promise<PolicyDefinition>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policyDefinitionName
          type: string
          description: The name of the policy definition to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsGetAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicyDefinition" />&gt;
  - name: getBuiltIn(string, PolicyDefinitionsGetBuiltInOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.getBuiltIn'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the built-in policy definition with the given
      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBuiltIn(policyDefinitionName: string, options?:
        PolicyDefinitionsGetBuiltInOptionalParams): Promise<PolicyDefinition>
      parameters:
        - id: policyDefinitionName
          type: string
          description: The name of the built-in policy definition to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsGetBuiltInOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicyDefinition" />&gt;
  - name: list(PolicyDefinitionsListOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.list'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the policy definitions in a given
      subscription that match the

      optional given $filter. Valid values for $filter are: 'atExactScope()',
      'policyType -eq {value}' or

      'category eq '{value}''. If $filter is not provided, the unfiltered list
      includes all policy

      definitions associated with the subscription, including those that apply
      directly or from management

      groups that contain the given subscription. If $filter=atExactScope() is
      provided, the returned list

      only includes all policy definitions that at the given subscription. If
      $filter='policyType -eq

      {value}' is provided, the returned list only includes all policy
      definitions whose type match the

      {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and
      Static. If

      $filter='category -eq {value}' is provided, the returned list only
      includes all policy definitions

      whose category match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: PolicyDefinitionsListOptionalParams):
        PagedAsyncIterableIterator<PolicyDefinition, PolicyDefinition[],
        PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-policy.PolicyDefinitionsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicyDefinition" />, <xref
          uid="@azure/arm-policy.PolicyDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBuiltIn(PolicyDefinitionsListBuiltInOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.listBuiltIn'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the built-in policy definitions
      that match the optional given

      $filter. If $filter='policyType -eq {value}' is provided, the returned
      list only includes all

      built-in policy definitions whose type match the {value}. Possible
      policyType values are

      NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq
      {value}' is provided, the

      returned list only includes all built-in policy definitions whose category
      match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBuiltIn(options?:
        PolicyDefinitionsListBuiltInOptionalParams):
        PagedAsyncIterableIterator<PolicyDefinition, PolicyDefinition[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsListBuiltInOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicyDefinition" />, <xref
          uid="@azure/arm-policy.PolicyDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listByManagementGroup(string,
      PolicyDefinitionsListByManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicyDefinitions.listByManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the policy definitions in a given
      management group that match

      the optional given $filter. Valid values for $filter are:
      'atExactScope()', 'policyType -eq {value}'

      or 'category eq '{value}''. If $filter is not provided, the unfiltered
      list includes all policy

      definitions associated with the management group, including those that
      apply directly or from

      management groups that contain the given management group. If
      $filter=atExactScope() is provided,

      the returned list only includes all policy definitions that at the given
      management group. If

      $filter='policyType -eq {value}' is provided, the returned list only
      includes all policy definitions

      whose type match the {value}. Possible policyType values are NotSpecified,
      BuiltIn, Custom, and

      Static. If $filter='category -eq {value}' is provided, the returned list
      only includes all policy

      definitions whose category match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByManagementGroup(managementGroupId: string, options?:
        PolicyDefinitionsListByManagementGroupOptionalParams):
        PagedAsyncIterableIterator<PolicyDefinition, PolicyDefinition[],
        PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicyDefinitionsListByManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicyDefinition" />, <xref
          uid="@azure/arm-policy.PolicyDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
