### YamlMime:TSType
name: WebServices
uid: '@azure/arm-webservices.WebServices'
package: '@azure/arm-webservices'
summary: Interface representing a WebServices.
fullName: WebServices
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, WebService,
      WebServicesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginCreateOrUpdate'
    package: '@azure/arm-webservices'
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that there is

      no warning or confirmation. This is a nonrecoverable operation. If your
      intent is to create a new

      web service, call the Get operation first to verify that it does not
      exist.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, webServiceName:
        string, createOrUpdatePayload: WebService, options?:
        WebServicesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<WebService>, WebService>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload that is used to create or update the web service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-webservices.WebService" />&gt;, <xref
          uid="@azure/arm-webservices.WebService" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, WebService,
      WebServicesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginCreateOrUpdateAndWait'
    package: '@azure/arm-webservices'
    summary: >-
      Create or update a web service. This call will overwrite an existing web
      service. Note that there is

      no warning or confirmation. This is a nonrecoverable operation. If your
      intent is to create a new

      web service, call the Get operation first to verify that it does not
      exist.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        webServiceName: string, createOrUpdatePayload: WebService, options?:
        WebServicesCreateOrUpdateOptionalParams): Promise<WebService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: createOrUpdatePayload
          type: <xref uid="@azure/arm-webservices.WebService" />
          description: The payload that is used to create or update the web service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-webservices.WebService" />&gt;
  - name: >-
      beginCreateRegionalProperties(string, string, string,
      WebServicesCreateRegionalPropertiesOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginCreateRegionalProperties'
    package: '@azure/arm-webservices'
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in that

      region. You only need to do this before the first time that you get the
      web service in the new

      region.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateRegionalProperties(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        WebServicesCreateRegionalPropertiesOptionalParams):
        Promise<PollerLike<PollOperationState<AsyncOperationStatus>,
        AsyncOperationStatus>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: region
          type: string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesCreateRegionalPropertiesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-webservices.AsyncOperationStatus" />&gt;, <xref
          uid="@azure/arm-webservices.AsyncOperationStatus" />&gt;&gt;
  - name: >-
      beginCreateRegionalPropertiesAndWait(string, string, string,
      WebServicesCreateRegionalPropertiesOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginCreateRegionalPropertiesAndWait'
    package: '@azure/arm-webservices'
    summary: >-
      Creates an encrypted credentials parameter blob for the specified region.
      To get the web service

      from a region other than the region in which it has been created, you must
      first call Create

      Regional Web Services Properties to create a copy of the encrypted
      credential parameter blob in that

      region. You only need to do this before the first time that you get the
      web service in the new

      region.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateRegionalPropertiesAndWait(resourceGroupName: string,
        webServiceName: string, region: string, options?:
        WebServicesCreateRegionalPropertiesOptionalParams):
        Promise<AsyncOperationStatus>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: region
          type: string
          description: The region for which encrypted credential parameters are created.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesCreateRegionalPropertiesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-webservices.AsyncOperationStatus"
          />&gt;
  - name: >-
      beginPatch(string, string, PatchedWebService,
      WebServicesPatchOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginPatch'
    package: '@azure/arm-webservices'
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPatch(resourceGroupName: string, webServiceName: string,
        patchPayload: PatchedWebService, options?:
        WebServicesPatchOptionalParams):
        Promise<PollerLike<PollOperationState<WebService>, WebService>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: patchPayload
          type: <xref uid="@azure/arm-webservices.PatchedWebService" />
          description: The payload to use to patch the web service.
        - id: options
          type: <xref uid="@azure/arm-webservices.WebServicesPatchOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-webservices.WebService" />&gt;, <xref
          uid="@azure/arm-webservices.WebService" />&gt;&gt;
  - name: >-
      beginPatchAndWait(string, string, PatchedWebService,
      WebServicesPatchOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginPatchAndWait'
    package: '@azure/arm-webservices'
    summary: >-
      Modifies an existing web service resource. The PATCH API call is an
      asynchronous operation. To

      determine whether it has completed successfully, you must perform a Get
      operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPatchAndWait(resourceGroupName: string, webServiceName:
        string, patchPayload: PatchedWebService, options?:
        WebServicesPatchOptionalParams): Promise<WebService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: patchPayload
          type: <xref uid="@azure/arm-webservices.PatchedWebService" />
          description: The payload to use to patch the web service.
        - id: options
          type: <xref uid="@azure/arm-webservices.WebServicesPatchOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-webservices.WebService" />&gt;
  - name: beginRemove(string, string, WebServicesRemoveOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginRemove'
    package: '@azure/arm-webservices'
    summary: Deletes the specified web service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRemove(resourceGroupName: string, webServiceName: string,
        options?: WebServicesRemoveOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: >-
            <xref uid="@azure/arm-webservices.WebServicesRemoveOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginRemoveAndWait(string, string, WebServicesRemoveOptionalParams)
    uid: '@azure/arm-webservices.WebServices.beginRemoveAndWait'
    package: '@azure/arm-webservices'
    summary: Deletes the specified web service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRemoveAndWait(resourceGroupName: string, webServiceName:
        string, options?: WebServicesRemoveOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: >-
            <xref uid="@azure/arm-webservices.WebServicesRemoveOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, WebServicesGetOptionalParams)
    uid: '@azure/arm-webservices.WebServices.get'
    package: '@azure/arm-webservices'
    summary: >-
      Gets the Web Service Definition as specified by a subscription, resource
      group, and name. Note that

      the storage credentials and web service keys are not returned by this
      call. To get the web service

      access keys, call List Keys.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, webServiceName: string,
        options?: WebServicesGetOptionalParams): Promise<WebService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: <xref uid="@azure/arm-webservices.WebServicesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-webservices.WebService" />&gt;
  - name: listByResourceGroup(string, WebServicesListByResourceGroupOptionalParams)
    uid: '@azure/arm-webservices.WebServices.listByResourceGroup'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        WebServicesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<WebService, WebService[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-webservices.WebService" />, <xref
          uid="@azure/arm-webservices.WebService" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscriptionId(WebServicesListBySubscriptionIdOptionalParams)
    uid: '@azure/arm-webservices.WebServices.listBySubscriptionId'
    package: '@azure/arm-webservices'
    summary: Gets the web services in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscriptionId(options?:
        WebServicesListBySubscriptionIdOptionalParams):
        PagedAsyncIterableIterator<WebService, WebService[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-webservices.WebServicesListBySubscriptionIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-webservices.WebService" />, <xref
          uid="@azure/arm-webservices.WebService" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, WebServicesListKeysOptionalParams)
    uid: '@azure/arm-webservices.WebServices.listKeys'
    package: '@azure/arm-webservices'
    summary: Gets the access keys for the specified web service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, webServiceName: string,
        options?: WebServicesListKeysOptionalParams): Promise<WebServiceKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group in which the web service is located.
        - id: webServiceName
          type: string
          description: The name of the web service.
        - id: options
          type: >-
            <xref uid="@azure/arm-webservices.WebServicesListKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-webservices.WebServiceKeys" />&gt;
