### YamlMime:TSPackage
uid: '@azure-rest/maps-route'
name: '@azure-rest/maps-route'
summary: ''
type: package
interfaces:
  - '@azure-rest/maps-route.BatchRequest'
  - '@azure-rest/maps-route.BatchRequestItem'
  - '@azure-rest/maps-route.BatchResultItemOutput'
  - '@azure-rest/maps-route.BatchResultOutput'
  - '@azure-rest/maps-route.BatchResultSummaryOutput'
  - '@azure-rest/maps-route.EffectiveSettingOutput'
  - '@azure-rest/maps-route.ErrorDetailOutput'
  - '@azure-rest/maps-route.ErrorResponseOutput'
  - '@azure-rest/maps-route.GeoJsonFeature'
  - '@azure-rest/maps-route.GeoJsonFeatureCollection'
  - '@azure-rest/maps-route.GeoJsonFeatureCollectionData'
  - '@azure-rest/maps-route.GeoJsonFeatureData'
  - '@azure-rest/maps-route.GeoJsonGeometryCollection'
  - '@azure-rest/maps-route.GeoJsonGeometryCollectionData'
  - '@azure-rest/maps-route.GeoJsonGeometryParent'
  - '@azure-rest/maps-route.GeoJsonLineString'
  - '@azure-rest/maps-route.GeoJsonLineStringData'
  - '@azure-rest/maps-route.GeoJsonMultiLineString'
  - '@azure-rest/maps-route.GeoJsonMultiLineStringData'
  - '@azure-rest/maps-route.GeoJsonMultiPoint'
  - '@azure-rest/maps-route.GeoJsonMultiPointData'
  - '@azure-rest/maps-route.GeoJsonMultiPolygon'
  - '@azure-rest/maps-route.GeoJsonMultiPolygonData'
  - '@azure-rest/maps-route.GeoJsonObjectParent'
  - '@azure-rest/maps-route.GeoJsonPoint'
  - '@azure-rest/maps-route.GeoJsonPointData'
  - '@azure-rest/maps-route.GeoJsonPolygon'
  - '@azure-rest/maps-route.GeoJsonPolygonData'
  - '@azure-rest/maps-route.GetRouteDirections'
  - '@azure-rest/maps-route.GetRouteRange'
  - '@azure-rest/maps-route.LatLongPairOutput'
  - '@azure-rest/maps-route.MapsRouteClientOptions'
  - '@azure-rest/maps-route.RequestRouteDirectionsBatch'
  - '@azure-rest/maps-route.RequestRouteDirectionsBatchSync'
  - '@azure-rest/maps-route.RequestRouteMatrix'
  - '@azure-rest/maps-route.RequestRouteMatrixSync'
  - '@azure-rest/maps-route.RouteDirectionParameters'
  - '@azure-rest/maps-route.RouteDirectionsBatchItemOutput'
  - '@azure-rest/maps-route.RouteDirectionsBatchItemResponseOutput'
  - '@azure-rest/maps-route.RouteDirectionsBatchResultOutput'
  - '@azure-rest/maps-route.RouteDirectionsOutput'
  - '@azure-rest/maps-route.RouteGetRouteDirections200Response'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsBatch200Response'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Headers'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsDefaultResponse'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsQueryParam'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsQueryParamProperties'
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParameters200Response
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersBodyParam
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersDefaultResponse
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersMediaTypesParam
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersQueryParam
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersQueryParamProperties
  - '@azure-rest/maps-route.RouteGetRouteMatrix200Response'
  - '@azure-rest/maps-route.RouteGetRouteMatrix202Headers'
  - '@azure-rest/maps-route.RouteGetRouteMatrix202Response'
  - '@azure-rest/maps-route.RouteGetRouteRange200Response'
  - '@azure-rest/maps-route.RouteGetRouteRangeDefaultResponse'
  - '@azure-rest/maps-route.RouteGetRouteRangeQueryParam'
  - '@azure-rest/maps-route.RouteGetRouteRangeQueryParamProperties'
  - '@azure-rest/maps-route.RouteGuidanceOutput'
  - '@azure-rest/maps-route.RouteInstructionGroupOutput'
  - '@azure-rest/maps-route.RouteInstructionOutput'
  - '@azure-rest/maps-route.RouteLegOutput'
  - '@azure-rest/maps-route.RouteMatrixOutput'
  - '@azure-rest/maps-route.RouteMatrixQuery'
  - '@azure-rest/maps-route.RouteMatrixResultOutput'
  - '@azure-rest/maps-route.RouteMatrixResultResponseOutput'
  - '@azure-rest/maps-route.RouteMatrixSummaryOutput'
  - '@azure-rest/maps-route.RouteOptimizedWaypointOutput'
  - '@azure-rest/maps-route.RouteOutput'
  - '@azure-rest/maps-route.RouteRangeOutput'
  - '@azure-rest/maps-route.RouteRangeResultOutput'
  - '@azure-rest/maps-route.RouteReportOutput'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatch200Response'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatch202Headers'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatch202Response'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchBodyParam'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchMediaTypesParam'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSync200Response'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSync408Response'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSyncBodyParam'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSyncDefaultResponse'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSyncMediaTypesParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrix200Response'
  - '@azure-rest/maps-route.RouteRequestRouteMatrix202Headers'
  - '@azure-rest/maps-route.RouteRequestRouteMatrix202Response'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixBodyParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixMediaTypesParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixQueryParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixQueryParamProperties'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSync200Response'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSync408Response'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncBodyParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncDefaultResponse'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncMediaTypesParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncQueryParam'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncQueryParamProperties'
  - '@azure-rest/maps-route.RouteSectionOutput'
  - '@azure-rest/maps-route.RouteSectionTecCauseOutput'
  - '@azure-rest/maps-route.RouteSectionTecOutput'
  - '@azure-rest/maps-route.RouteSummaryOutput'
  - '@azure-rest/maps-route.Routes'
  - '@azure-rest/maps-route.SimplePollerLike'
typeAliases:
  - '@azure-rest/maps-route.GeoJsonGeometry'
  - '@azure-rest/maps-route.GeoJsonObject'
  - '@azure-rest/maps-route.MapsRouteClient'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsBatchParameters'
  - '@azure-rest/maps-route.RouteGetRouteDirectionsParameters'
  - >-
    @azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersParameters
  - '@azure-rest/maps-route.RouteGetRouteMatrixParameters'
  - '@azure-rest/maps-route.RouteGetRouteRangeParameters'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchParameters'
  - '@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSyncParameters'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixParameters'
  - '@azure-rest/maps-route.RouteRequestRouteMatrixSyncParameters'
functions:
  - name: buildMultiCollection(string[], string)
    uid: '@azure-rest/maps-route.buildMultiCollection'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function buildMultiCollection(items: string[], parameterName: string):
        string
      parameters:
        - id: items
          type: string[]
          description: ''
        - id: parameterName
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: >-
      createRouteDirectionsBatchRequest(RouteGetRouteDirectionsQueryParamProperties[])
    uid: '@azure-rest/maps-route.createRouteDirectionsBatchRequest'
    package: '@azure-rest/maps-route'
    summary: Create a batch request body of a bunch of route direction requests.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRouteDirectionsBatchRequest(queryParamProperties:
        RouteGetRouteDirectionsQueryParamProperties[]): BatchRequest
      parameters:
        - id: queryParamProperties
          type: >-
            <xref
            uid="@azure-rest/maps-route.RouteGetRouteDirectionsQueryParamProperties"
            />[]
          description: An object of the query parameters for a route direction request
      return:
        description: The composed batch request.
        type: <xref uid="@azure-rest/maps-route.BatchRequest" />
  - name: default(AzureKeyCredential, ClientOptions)
    uid: '@azure-rest/maps-route.default'
    package: '@azure-rest/maps-route'
    summary: |+
      Creates an instance of MapsRouteClient from a subscription key.

      **Example**

      ```ts snippet:ReadmeSampleCreateClient_SubscriptionKey
      import { AzureKeyCredential } from "@azure/core-auth";
      import MapsRoute from "@azure-rest/maps-route";

      const credential = new AzureKeyCredential("<subscription-key>");
      const client = MapsRoute(credential);
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureKeyCredential, options?:
        ClientOptions): MapsRouteClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureKeyCredential" />
          description: >-
            An AzureKeyCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Route Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-route.MapsRouteClient" />
  - name: default(TokenCredential, string, ClientOptions)
    uid: '@azure-rest/maps-route.default_1'
    package: '@azure-rest/maps-route'
    summary: |+
      Creates an instance of MapsRoute from an Azure Identity `TokenCredential`.

      **Example**

      ```ts snippet:ReadmeSampleCreateClient_TokenCredential
      import { DefaultAzureCredential } from "@azure/identity";
      import MapsRoute from "@azure-rest/maps-route";

      const credential = new DefaultAzureCredential();
      const client = MapsRoute(credential, "<maps-account-client-id>");
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: TokenCredential, mapsAccountClientId:
        string, options?: ClientOptions): MapsRouteClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            An TokenCredential instance used to authenticate requests to the
            service
        - id: mapsAccountClientId
          type: string
          description: The Azure Maps client id of a specific map resource
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Route Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-route.MapsRouteClient" />
  - name: default(AzureSASCredential, ClientOptions)
    uid: '@azure-rest/maps-route.default_2'
    package: '@azure-rest/maps-route'
    summary: >+
      Creates an instance of MapsRoute from an Azure Identity
      `AzureSASCredential`.


      **Example**


      ```ts snippet:ReadmeSampleCreateClient_SASToken

      import { AzureSASCredential } from "@azure/core-auth";

      import MapsRoute from "@azure-rest/maps-route";


      const credential = new AzureSASCredential("<SAS Token>");

      const client = MapsRoute(credential);

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureSASCredential, options?:
        ClientOptions): MapsRouteClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureSASCredential" />
          description: >-
            An AzureSASCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the Route Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-route.MapsRouteClient" />
  - name: >-
      getLongRunningPoller<TResult>(Client, TResult,
      CreateHttpPollerOptions<TResult, OperationState<TResult>>)
    uid: '@azure-rest/maps-route.getLongRunningPoller'
    package: '@azure-rest/maps-route'
    summary: >-
      Helper function that builds a Poller object to help polling a long running
      operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getLongRunningPoller<TResult>(client: Client, initialResponse:
        TResult, options?: CreateHttpPollerOptions<TResult,
        OperationState<TResult>>):
        Promise<SimplePollerLike<OperationState<TResult>, TResult>>
      parameters:
        - id: client
          type: <xref uid="@azure-rest/core-client.Client" />
          description: Client to use for sending the request to get additional pages.
        - id: initialResponse
          type: TResult
          description: The initial response.
        - id: options
          type: >-
            <xref uid="@azure/core-lro.CreateHttpPollerOptions" />&lt;TResult,
            <xref uid="@azure/core-lro.OperationState" />&lt;TResult&gt;&gt;
          description: Options to set a resume state or custom polling interval.
      return:
        description: >-
          - A poller object to poll for operation state updates and eventually
          get the final response.
        type: >-
          Promise&lt;<xref uid="@azure-rest/maps-route.SimplePollerLike"
          />&lt;<xref uid="@azure/core-lro.OperationState" />&lt;TResult&gt;,
          TResult&gt;&gt;
  - name: >-
      isUnexpected(RouteRequestRouteMatrixSync200Response |
      RouteRequestRouteMatrixSync408Response |
      RouteRequestRouteMatrixSyncDefaultResponse)
    uid: '@azure-rest/maps-route.isUnexpected'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: RouteRequestRouteMatrixSync200Response |
        RouteRequestRouteMatrixSync408Response |
        RouteRequestRouteMatrixSyncDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-route.RouteRequestRouteMatrixSync200Response"
            /> | <xref
            uid="@azure-rest/maps-route.RouteRequestRouteMatrixSync408Response"
            /> | <xref
            uid="@azure-rest/maps-route.RouteRequestRouteMatrixSyncDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(RouteGetRouteDirections200Response |
      RouteGetRouteDirectionsDefaultResponse)
    uid: '@azure-rest/maps-route.isUnexpected_1'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: RouteGetRouteDirections200Response |
        RouteGetRouteDirectionsDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-route.RouteGetRouteDirections200Response" /> |
            <xref
            uid="@azure-rest/maps-route.RouteGetRouteDirectionsDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(RouteGetRouteDirectionsWithAdditionalParameters200Response |
      RouteGetRouteDirectionsWithAdditionalParametersDefaultResponse)
    uid: '@azure-rest/maps-route.isUnexpected_2'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response:
        RouteGetRouteDirectionsWithAdditionalParameters200Response |
        RouteGetRouteDirectionsWithAdditionalParametersDefaultResponse):
        response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParameters200Response"
            /> | <xref
            uid="@azure-rest/maps-route.RouteGetRouteDirectionsWithAdditionalParametersDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(RouteGetRouteRange200Response |
      RouteGetRouteRangeDefaultResponse)
    uid: '@azure-rest/maps-route.isUnexpected_3'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: RouteGetRouteRange200Response |
        RouteGetRouteRangeDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/maps-route.RouteGetRouteRange200Response" />
            | <xref
            uid="@azure-rest/maps-route.RouteGetRouteRangeDefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(RouteRequestRouteDirectionsBatchSync200Response |
      RouteRequestRouteDirectionsBatchSync408Response |
      RouteRequestRouteDirectionsBatchSyncDefaultResponse)
    uid: '@azure-rest/maps-route.isUnexpected_4'
    package: '@azure-rest/maps-route'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response:
        RouteRequestRouteDirectionsBatchSync200Response |
        RouteRequestRouteDirectionsBatchSync408Response |
        RouteRequestRouteDirectionsBatchSyncDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSync200Response"
            /> | <xref
            uid="@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSync408Response"
            /> | <xref
            uid="@azure-rest/maps-route.RouteRequestRouteDirectionsBatchSyncDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: toColonDelimitedLatLonString(LatLon[])
    uid: '@azure-rest/maps-route.toColonDelimitedLatLonString'
    package: '@azure-rest/maps-route'
    summary: >-
      Transform an array of [Latitude, Longtitute] to a string in the following
      format:

      "Latitude_1,Longtitute_1:Latitude_2,Longtitute_2:..."
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toColonDelimitedLatLonString(coordinates: LatLon[]): string'
      parameters:
        - id: coordinates
          type: <xref uid="@azure/maps-common.LatLon" />[]
          description: An array of Latitude/Longtitute pair to transform.
      return:
        description: The transformed string.
        type: string
