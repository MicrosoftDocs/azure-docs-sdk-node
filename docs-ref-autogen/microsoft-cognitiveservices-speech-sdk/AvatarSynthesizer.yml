### YamlMime:TSType
name: AvatarSynthesizer
uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer
package: microsoft-cognitiveservices-speech-sdk
summary: Defines the avatar synthesizer.
fullName: AvatarSynthesizer
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AvatarSynthesizer(SpeechConfig, AvatarConfig)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: Creates and initializes an instance of this class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AvatarSynthesizer(speechConfig: SpeechConfig, avatarConfig:
        AvatarConfig)
      parameters:
        - id: speechConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechConfig" />
          description: The speech config.
        - id: avatarConfig
          type: <xref uid="microsoft-cognitiveservices-speech-sdk.AvatarConfig" />
          description: The talking avatar config.
properties:
  - name: authorizationToken
    uid: >-
      microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.authorizationToken
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the authorization token used to communicate with the service.
    fullName: authorizationToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: string authorizationToken
      return:
        description: Authorization token.
        type: string
  - name: autoDetectSourceLanguage
    uid: >-
      microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.autoDetectSourceLanguage
    package: microsoft-cognitiveservices-speech-sdk
    summary: Indicates if auto detect source language is enabled
    fullName: autoDetectSourceLanguage
    remarks: ''
    isDeprecated: false
    syntax:
      content: boolean autoDetectSourceLanguage
      return:
        description: if auto detect source language is enabled
        type: boolean
  - name: avatarEventReceived
    uid: >-
      microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.avatarEventReceived
    package: microsoft-cognitiveservices-speech-sdk
    summary: Defines event handler for avatar events.
    fullName: avatarEventReceived
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        public avatarEventReceived: (sender: AvatarSynthesizer, event:
        AvatarEventArgs) => void
      return:
        description: ''
        type: '(sender: AvatarSynthesizer, event: AvatarEventArgs) =&gt; void'
  - name: iceServers
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.iceServers
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the ICE servers. Internal use only.
    fullName: iceServers
    remarks: ''
    isDeprecated: false
    syntax:
      content: RTCIceServer[] iceServers
      return:
        description: ''
        type: RTCIceServer[]
  - name: properties
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.properties
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The collection of properties and their values defined for this
      Synthesizer.
    fullName: properties
    remarks: ''
    isDeprecated: false
    syntax:
      content: PropertyCollection properties
      return:
        description: >-
          The collection of properties and their values defined for this
          SpeechSynthesizer.
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.PropertyCollection"
          />
inheritedMethods:
  - name: buildSsml(string)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.buildSsml
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function buildSsml(text: string): string'
      parameters:
        - id: text
          type: string
          description: ''
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Synthesizer.buildSsml](xref:microsoft-cognitiveservices-speech-sdk.Synthesizer.buildSsml)
  - name: dispose(boolean)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.dispose
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      This method performs cleanup of resources.

      The Boolean parameter disposing indicates whether the method is called

      from Dispose (if disposing is true) or from the finalizer (if disposing is
      false).

      Derived classes should override this method to dispose resource if needed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function dispose(disposing: boolean): Promise<void>'
      parameters:
        - id: disposing
          type: boolean
          description: Flag to request disposal.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Synthesizer.dispose](xref:microsoft-cognitiveservices-speech-sdk.Synthesizer.dispose)
methods:
  - name: close()
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.close
    package: microsoft-cognitiveservices-speech-sdk
    summary: Dispose of associated resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function close(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: speakSsmlAsync(string)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.speakSsmlAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Speaks SSML asynchronously. The rendered audio and video will be sent via
      the WebRTC connection.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function speakSsmlAsync(ssml: string): Promise<SynthesisResult>'
      parameters:
        - id: ssml
          type: string
          description: The SSML text to speak.
      return:
        description: The promise of the synthesis result.
        type: >-
          Promise&lt;<xref
          uid="microsoft-cognitiveservices-speech-sdk.SynthesisResult" />&gt;
  - name: speakTextAsync(string)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.speakTextAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Speaks plain text asynchronously. The rendered audio and video will be
      sent via the WebRTC connection.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function speakTextAsync(text: string): Promise<SynthesisResult>'
      parameters:
        - id: text
          type: string
          description: The plain text to speak.
      return:
        description: The promise of the synthesis result.
        type: >-
          Promise&lt;<xref
          uid="microsoft-cognitiveservices-speech-sdk.SynthesisResult" />&gt;
  - name: startAvatarAsync(RTCPeerConnection)
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.startAvatarAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Starts the talking avatar session and establishes the WebRTC connection.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startAvatarAsync(peerConnection: RTCPeerConnection):
        Promise<SynthesisResult>
      parameters:
        - id: peerConnection
          type: RTCPeerConnection
          description: The peer connection.
      return:
        description: The promise of the connection result.
        type: >-
          Promise&lt;<xref
          uid="microsoft-cognitiveservices-speech-sdk.SynthesisResult" />&gt;
  - name: stopAvatarAsync()
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.stopAvatarAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Stops the talking avatar session and closes the WebRTC connection.

      For now, this is the same as close().

      You need to create a new AvatarSynthesizer instance to start a new
      session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopAvatarAsync(): Promise<void>'
      return:
        description: The promise of the void result.
        type: Promise&lt;void&gt;
  - name: stopSpeakingAsync()
    uid: microsoft-cognitiveservices-speech-sdk.AvatarSynthesizer.stopSpeakingAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: Speaks text asynchronously. The avatar will switch to idle state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopSpeakingAsync(): Promise<void>'
      return:
        description: The promise of the void result.
        type: Promise&lt;void&gt;
extends: <xref uid="microsoft-cognitiveservices-speech-sdk.Synthesizer" />
