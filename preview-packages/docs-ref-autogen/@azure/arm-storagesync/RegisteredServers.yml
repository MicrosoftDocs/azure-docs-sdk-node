### YamlMime:TSType
name: RegisteredServers
uid: '@azure/arm-storagesync.RegisteredServers'
package: '@azure/arm-storagesync'
summary: Interface representing a RegisteredServers.
fullName: RegisteredServers
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, RegisteredServerCreateParameters,
      RegisteredServersCreateOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginCreate'
    package: '@azure/arm-storagesync'
    summary: Add a new registered server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, storageSyncServiceName:
        string, serverId: string, parameters: RegisteredServerCreateParameters,
        options?: RegisteredServersCreateOptionalParams):
        Promise<PollerLike<PollOperationState<RegisteredServersCreateResponse>,
        RegisteredServersCreateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: GUID identifying the on-premises server.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-storagesync.RegisteredServerCreateParameters"
            />
          description: Body of Registered Server object.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersCreateResponse" />&gt;,
          <xref uid="@azure/arm-storagesync.RegisteredServersCreateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string,
      RegisteredServerCreateParameters, RegisteredServersCreateOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginCreateAndWait'
    package: '@azure/arm-storagesync'
    summary: Add a new registered server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string,
        storageSyncServiceName: string, serverId: string, parameters:
        RegisteredServerCreateParameters, options?:
        RegisteredServersCreateOptionalParams):
        Promise<RegisteredServersCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: GUID identifying the on-premises server.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-storagesync.RegisteredServerCreateParameters"
            />
          description: Body of Registered Server object.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersCreateResponse" />&gt;
  - name: beginDelete(string, string, string, RegisteredServersDeleteOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginDelete'
    package: '@azure/arm-storagesync'
    summary: Delete the given registered server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, storageSyncServiceName:
        string, serverId: string, options?:
        RegisteredServersDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<RegisteredServersDeleteHeaders>,
        RegisteredServersDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: GUID identifying the on-premises server.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersDeleteHeaders" />&gt;,
          <xref uid="@azure/arm-storagesync.RegisteredServersDeleteHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      RegisteredServersDeleteOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginDeleteAndWait'
    package: '@azure/arm-storagesync'
    summary: Delete the given registered server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        storageSyncServiceName: string, serverId: string, options?:
        RegisteredServersDeleteOptionalParams):
        Promise<RegisteredServersDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: GUID identifying the on-premises server.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersDeleteHeaders" />&gt;
  - name: >-
      beginTriggerRollover(string, string, string, TriggerRolloverRequest,
      RegisteredServersTriggerRolloverOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginTriggerRollover'
    package: '@azure/arm-storagesync'
    summary: Triggers Server certificate rollover.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginTriggerRollover(resourceGroupName: string,
        storageSyncServiceName: string, serverId: string, parameters:
        TriggerRolloverRequest, options?:
        RegisteredServersTriggerRolloverOptionalParams):
        Promise<PollerLike<PollOperationState<RegisteredServersTriggerRolloverHeaders>,
        RegisteredServersTriggerRolloverHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: Server Id
        - id: parameters
          type: <xref uid="@azure/arm-storagesync.TriggerRolloverRequest" />
          description: Body of Trigger Rollover request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersTriggerRolloverOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersTriggerRolloverHeaders"
          />&gt;, <xref
          uid="@azure/arm-storagesync.RegisteredServersTriggerRolloverHeaders"
          />&gt;&gt;
  - name: >-
      beginTriggerRolloverAndWait(string, string, string,
      TriggerRolloverRequest, RegisteredServersTriggerRolloverOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.beginTriggerRolloverAndWait'
    package: '@azure/arm-storagesync'
    summary: Triggers Server certificate rollover.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginTriggerRolloverAndWait(resourceGroupName: string,
        storageSyncServiceName: string, serverId: string, parameters:
        TriggerRolloverRequest, options?:
        RegisteredServersTriggerRolloverOptionalParams):
        Promise<RegisteredServersTriggerRolloverHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: Server Id
        - id: parameters
          type: <xref uid="@azure/arm-storagesync.TriggerRolloverRequest" />
          description: Body of Trigger Rollover request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersTriggerRolloverOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersTriggerRolloverHeaders"
          />&gt;
  - name: get(string, string, string, RegisteredServersGetOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.get'
    package: '@azure/arm-storagesync'
    summary: Get a given registered server.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, storageSyncServiceName: string,
        serverId: string, options?: RegisteredServersGetOptionalParams):
        Promise<RegisteredServersGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: serverId
          type: string
          description: GUID identifying the on-premises server.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServersGetResponse" />&gt;
  - name: >-
      listByStorageSyncService(string, string,
      RegisteredServersListByStorageSyncServiceOptionalParams)
    uid: '@azure/arm-storagesync.RegisteredServers.listByStorageSyncService'
    package: '@azure/arm-storagesync'
    summary: Get a given registered server list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByStorageSyncService(resourceGroupName: string,
        storageSyncServiceName: string, options?:
        RegisteredServersListByStorageSyncServiceOptionalParams):
        PagedAsyncIterableIterator<RegisteredServer, RegisteredServer[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: storageSyncServiceName
          type: string
          description: Name of Storage Sync Service resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagesync.RegisteredServersListByStorageSyncServiceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-storagesync.RegisteredServer" />, <xref
          uid="@azure/arm-storagesync.RegisteredServer" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
