### YamlMime:TSType
name: VisualStudioCodeCredential
uid: '@azure/identity.VisualStudioCodeCredential'
package: '@azure/identity'
summary: >-
  Connects to Azure using the user account signed in through the Azure Resources
  extension in Visual Studio Code.

  Once the user has logged in via the extension, this credential can share the
  same refresh token

  that is cached by the extension.
fullName: VisualStudioCodeCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: VisualStudioCodeCredential(VisualStudioCodeCredentialOptions)
    uid: '@azure/identity.VisualStudioCodeCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of VisualStudioCodeCredential to use for automatically
      authenticating via VSCode.


      **Note**: `VisualStudioCodeCredential` is provided by a plugin package:

      `@azure/identity-vscode`. If this package is not installed, then
      authentication using

      `VisualStudioCodeCredential` will not be available.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new VisualStudioCodeCredential(options?:
        VisualStudioCodeCredentialOptions)
      parameters:
        - id: options
          type: <xref uid="@azure/identity.VisualStudioCodeCredentialOptions" />
          description: >-
            Options for configuring the client which makes the authentication
            request.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.VisualStudioCodeCredential.getToken'
    package: '@azure/identity'
    summary: |-
      Returns the token found by searching VSCode's authentication cache or
      returns null if no token could be found.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           `TokenCredential` implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
