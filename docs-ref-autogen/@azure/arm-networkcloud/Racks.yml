### YamlMime:TSType
name: Racks
uid: '@azure/arm-networkcloud.Racks'
package: '@azure/arm-networkcloud'
summary: Interface representing a Racks.
fullName: Racks
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Rack,
      RacksCreateOrUpdateOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginCreateOrUpdate'
    package: '@azure/arm-networkcloud'
    summary: >-
      Create a new rack or update properties of the existing one.

      All customer initiated requests will be rejected as the life cycle of this
      resource is managed by

      the system.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, rackName:
        string, rackParameters: Rack, options?:
        RacksCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Rack>, Rack>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: rackParameters
          type: <xref uid="@azure/arm-networkcloud.Rack" />
          description: The request body.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-networkcloud.RacksCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-networkcloud.Rack" />&gt;, <xref
          uid="@azure/arm-networkcloud.Rack" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Rack,
      RacksCreateOrUpdateOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginCreateOrUpdateAndWait'
    package: '@azure/arm-networkcloud'
    summary: >-
      Create a new rack or update properties of the existing one.

      All customer initiated requests will be rejected as the life cycle of this
      resource is managed by

      the system.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string, rackName:
        string, rackParameters: Rack, options?:
        RacksCreateOrUpdateOptionalParams): Promise<Rack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: rackParameters
          type: <xref uid="@azure/arm-networkcloud.Rack" />
          description: The request body.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-networkcloud.RacksCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-networkcloud.Rack" />&gt;
  - name: beginDelete(string, string, RacksDeleteOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginDelete'
    package: '@azure/arm-networkcloud'
    summary: >-
      Delete the provided rack.

      All customer initiated requests will be rejected as the life cycle of this
      resource is managed by

      the system.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, rackName: string,
        options?: RacksDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<OperationStatusResult>,
        OperationStatusResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: options
          type: <xref uid="@azure/arm-networkcloud.RacksDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-networkcloud.OperationStatusResult" />&gt;, <xref
          uid="@azure/arm-networkcloud.OperationStatusResult" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, RacksDeleteOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginDeleteAndWait'
    package: '@azure/arm-networkcloud'
    summary: >-
      Delete the provided rack.

      All customer initiated requests will be rejected as the life cycle of this
      resource is managed by

      the system.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, rackName: string,
        options?: RacksDeleteOptionalParams): Promise<OperationStatusResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: options
          type: <xref uid="@azure/arm-networkcloud.RacksDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-networkcloud.OperationStatusResult"
          />&gt;
  - name: beginUpdate(string, string, RacksUpdateOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginUpdate'
    package: '@azure/arm-networkcloud'
    summary: >-
      Patch properties of the provided rack, or update the tags associated with
      the rack. Properties and

      tag updates can be done independently.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, rackName: string,
        options?: RacksUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Rack>, Rack>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: options
          type: <xref uid="@azure/arm-networkcloud.RacksUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-networkcloud.Rack" />&gt;, <xref
          uid="@azure/arm-networkcloud.Rack" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, RacksUpdateOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.beginUpdateAndWait'
    package: '@azure/arm-networkcloud'
    summary: >-
      Patch properties of the provided rack, or update the tags associated with
      the rack. Properties and

      tag updates can be done independently.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, rackName: string,
        options?: RacksUpdateOptionalParams): Promise<Rack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: options
          type: <xref uid="@azure/arm-networkcloud.RacksUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-networkcloud.Rack" />&gt;
  - name: get(string, string, RacksGetOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.get'
    package: '@azure/arm-networkcloud'
    summary: Get properties of the provided rack.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, rackName: string, options?:
        RacksGetOptionalParams): Promise<Rack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: rackName
          type: string
          description: The name of the rack.
        - id: options
          type: <xref uid="@azure/arm-networkcloud.RacksGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-networkcloud.Rack" />&gt;
  - name: listByResourceGroup(string, RacksListByResourceGroupOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.listByResourceGroup'
    package: '@azure/arm-networkcloud'
    summary: Get a list of racks in the provided resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        RacksListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Rack, Rack[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-networkcloud.RacksListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-networkcloud.Rack" />, <xref
          uid="@azure/arm-networkcloud.Rack" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(RacksListBySubscriptionOptionalParams)
    uid: '@azure/arm-networkcloud.Racks.listBySubscription'
    package: '@azure/arm-networkcloud'
    summary: Get a list of racks in the provided subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        RacksListBySubscriptionOptionalParams): PagedAsyncIterableIterator<Rack,
        Rack[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-networkcloud.RacksListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-networkcloud.Rack" />, <xref
          uid="@azure/arm-networkcloud.Rack" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
