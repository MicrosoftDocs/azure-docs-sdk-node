### YamlMime:TSType
name: AccountsOperations
uid: '@azure/arm-playwrighttesting.AccountsOperations'
package: '@azure/arm-playwrighttesting'
summary: Interface representing a Accounts operations.
fullName: AccountsOperations
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: checkNameAvailability
    uid: '@azure/arm-playwrighttesting.AccountsOperations.checkNameAvailability'
    package: '@azure/arm-playwrighttesting'
    summary: >-
      Adds check global name availability operation, normally used if a resource
      name must be globally unique.
    fullName: checkNameAvailability
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        checkNameAvailability: (body: CheckNameAvailabilityRequest, options?:
        AccountsCheckNameAvailabilityOptionalParams) =>
        Promise<CheckNameAvailabilityResponse>
      return:
        description: ''
        type: >-
          (body: CheckNameAvailabilityRequest, options?:
          AccountsCheckNameAvailabilityOptionalParams) =&gt;
          Promise&lt;CheckNameAvailabilityResponse&gt;
  - name: createOrUpdate
    uid: '@azure/arm-playwrighttesting.AccountsOperations.createOrUpdate'
    package: '@azure/arm-playwrighttesting'
    summary: Create a Account
    fullName: createOrUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createOrUpdate: (resourceGroupName: string, accountName: string,
        resource: Account, options?: AccountsCreateOrUpdateOptionalParams) =>
        PollerLike<OperationState<Account>, Account>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, accountName: string, resource: Account,
          options?: AccountsCreateOrUpdateOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;Account&gt;, Account&gt;
  - name: delete
    uid: '@azure/arm-playwrighttesting.AccountsOperations.delete'
    package: '@azure/arm-playwrighttesting'
    summary: Delete a Account
    fullName: delete
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        delete: (resourceGroupName: string, accountName: string, options?:
        AccountsDeleteOptionalParams) => PollerLike<OperationState<void>, void>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, accountName: string, options?:
          AccountsDeleteOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;void&gt;, void&gt;
  - name: get
    uid: '@azure/arm-playwrighttesting.AccountsOperations.get'
    package: '@azure/arm-playwrighttesting'
    summary: Get a Account
    fullName: get
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        get: (resourceGroupName: string, accountName: string, options?:
        AccountsGetOptionalParams) => Promise<Account>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, accountName: string, options?:
          AccountsGetOptionalParams) =&gt; Promise&lt;Account&gt;
  - name: listByResourceGroup
    uid: '@azure/arm-playwrighttesting.AccountsOperations.listByResourceGroup'
    package: '@azure/arm-playwrighttesting'
    summary: List Account resources by resource group
    fullName: listByResourceGroup
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listByResourceGroup: (resourceGroupName: string, options?:
        AccountsListByResourceGroupOptionalParams) =>
        PagedAsyncIterableIterator<Account, Account[], PageSettings>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, options?:
          AccountsListByResourceGroupOptionalParams) =&gt;
          PagedAsyncIterableIterator&lt;Account, Account[], PageSettings&gt;
  - name: listBySubscription
    uid: '@azure/arm-playwrighttesting.AccountsOperations.listBySubscription'
    package: '@azure/arm-playwrighttesting'
    summary: List Account resources by subscription ID
    fullName: listBySubscription
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listBySubscription: (options?: AccountsListBySubscriptionOptionalParams)
        => PagedAsyncIterableIterator<Account, Account[], PageSettings>
      return:
        description: ''
        type: >-
          (options?: AccountsListBySubscriptionOptionalParams) =&gt;
          PagedAsyncIterableIterator&lt;Account, Account[], PageSettings&gt;
  - name: update
    uid: '@azure/arm-playwrighttesting.AccountsOperations.update'
    package: '@azure/arm-playwrighttesting'
    summary: Update a Account
    fullName: update
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        update: (resourceGroupName: string, accountName: string, properties:
        AccountUpdate, options?: AccountsUpdateOptionalParams) =>
        Promise<Account>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, accountName: string, properties:
          AccountUpdate, options?: AccountsUpdateOptionalParams) =&gt;
          Promise&lt;Account&gt;
