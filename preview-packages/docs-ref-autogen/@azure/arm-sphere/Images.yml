### YamlMime:TSType
name: Images
uid: '@azure/arm-sphere.Images'
package: '@azure/arm-sphere'
summary: Interface representing a Images.
fullName: Images
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, Image,
      ImagesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sphere.Images.beginCreateOrUpdate'
    package: '@azure/arm-sphere'
    summary: Create a Image
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, catalogName:
        string, imageName: string, resource: Image, options?:
        ImagesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Image>, Image>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: imageName
          type: string
          description: Image name. Use an image GUID for GA versions of the API.
        - id: resource
          type: <xref uid="@azure/arm-sphere.Image" />
          description: Resource create parameters.
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-sphere.Image" />&gt;, <xref
          uid="@azure/arm-sphere.Image" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, Image,
      ImagesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sphere.Images.beginCreateOrUpdateAndWait'
    package: '@azure/arm-sphere'
    summary: Create a Image
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        catalogName: string, imageName: string, resource: Image, options?:
        ImagesCreateOrUpdateOptionalParams): Promise<Image>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: imageName
          type: string
          description: Image name. Use an image GUID for GA versions of the API.
        - id: resource
          type: <xref uid="@azure/arm-sphere.Image" />
          description: Resource create parameters.
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sphere.Image" />&gt;
  - name: beginDelete(string, string, string, ImagesDeleteOptionalParams)
    uid: '@azure/arm-sphere.Images.beginDelete'
    package: '@azure/arm-sphere'
    summary: Delete a Image
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, catalogName: string,
        imageName: string, options?: ImagesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: imageName
          type: string
          description: Image name. Use an image GUID for GA versions of the API.
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, ImagesDeleteOptionalParams)
    uid: '@azure/arm-sphere.Images.beginDeleteAndWait'
    package: '@azure/arm-sphere'
    summary: Delete a Image
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, catalogName:
        string, imageName: string, options?: ImagesDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: imageName
          type: string
          description: Image name. Use an image GUID for GA versions of the API.
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, ImagesGetOptionalParams)
    uid: '@azure/arm-sphere.Images.get'
    package: '@azure/arm-sphere'
    summary: Get a Image
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, catalogName: string, imageName:
        string, options?: ImagesGetOptionalParams): Promise<Image>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: imageName
          type: string
          description: Image name. Use an image GUID for GA versions of the API.
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sphere.Image" />&gt;
  - name: listByCatalog(string, string, ImagesListByCatalogOptionalParams)
    uid: '@azure/arm-sphere.Images.listByCatalog'
    package: '@azure/arm-sphere'
    summary: List Image resources by Catalog
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByCatalog(resourceGroupName: string, catalogName: string,
        options?: ImagesListByCatalogOptionalParams):
        PagedAsyncIterableIterator<Image, Image[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: catalogName
          type: string
          description: Name of catalog
        - id: options
          type: <xref uid="@azure/arm-sphere.ImagesListByCatalogOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-sphere.Image" />, <xref uid="@azure/arm-sphere.Image"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
