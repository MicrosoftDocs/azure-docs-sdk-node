### YamlMime:TSType
name: PolicyAssignments
uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments'
package: '@azure/arm-policy-profile-2020-09-01-hybrid'
summary: Interface representing a PolicyAssignments.
fullName: PolicyAssignments
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      create(string, string, PolicyAssignment,
      PolicyAssignmentsCreateOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.create'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: >-
      Policy assignments are inherited by child resources. For example, when you
      apply a policy to a

      resource group that policy is assigned to all resources in the group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(scope: string, policyAssignmentName: string, parameters:
        PolicyAssignment, options?: PolicyAssignmentsCreateOptionalParams):
        Promise<PolicyAssignment>
      parameters:
        - id: scope
          type: string
          description: The scope of the policy assignment.
        - id: policyAssignmentName
          type: string
          description: The name of the policy assignment.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
            />
          description: Parameters for the policy assignment.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: >-
      createById(string, PolicyAssignment,
      PolicyAssignmentsCreateByIdOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.createById'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: >-
      Policy assignments are inherited by child resources. For example, when you
      apply a policy to a

      resource group that policy is assigned to all resources in the group. When
      providing a scope for the

      assignment, use '/subscriptions/{subscription-id}/' for subscriptions,

      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
      for resource groups, and

      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}'

      for resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createById(policyAssignmentId: string, parameters:
        PolicyAssignment, options?: PolicyAssignmentsCreateByIdOptionalParams):
        Promise<PolicyAssignment>
      parameters:
        - id: policyAssignmentId
          type: string
          description: |-
            The ID of the policy assignment to create. Use the format
                                      '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
            />
          description: Parameters for policy assignment.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsCreateByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: delete(string, string, PolicyAssignmentsDeleteOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.delete'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: Deletes a policy assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(scope: string, policyAssignmentName: string, options?:
        PolicyAssignmentsDeleteOptionalParams): Promise<PolicyAssignment>
      parameters:
        - id: scope
          type: string
          description: The scope of the policy assignment.
        - id: policyAssignmentName
          type: string
          description: The name of the policy assignment to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: deleteById(string, PolicyAssignmentsDeleteByIdOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.deleteById'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: >-
      When providing a scope for the assignment, use
      '/subscriptions/{subscription-id}/' for

      subscriptions,
      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
      for resource

      groups, and

      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}'

      for resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(policyAssignmentId: string, options?:
        PolicyAssignmentsDeleteByIdOptionalParams): Promise<PolicyAssignment>
      parameters:
        - id: policyAssignmentId
          type: string
          description: |-
            The ID of the policy assignment to delete. Use the format
                                      '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsDeleteByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: get(string, string, PolicyAssignmentsGetOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.get'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: Gets a policy assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, policyAssignmentName: string, options?:
        PolicyAssignmentsGetOptionalParams): Promise<PolicyAssignment>
      parameters:
        - id: scope
          type: string
          description: The scope of the policy assignment.
        - id: policyAssignmentName
          type: string
          description: The name of the policy assignment to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: getById(string, PolicyAssignmentsGetByIdOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.getById'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: >-
      When providing a scope for the assignment, use
      '/subscriptions/{subscription-id}/' for

      subscriptions,
      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
      for resource

      groups, and

      '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider-namespace}/{resource-type}/{resource-name}'

      for resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getById(policyAssignmentId: string, options?:
        PolicyAssignmentsGetByIdOptionalParams): Promise<PolicyAssignment>
      parameters:
        - id: policyAssignmentId
          type: string
          description: |-
            The ID of the policy assignment to get. Use the format
                                      '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policy-assignment-name}'.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsGetByIdOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />&gt;
  - name: list(PolicyAssignmentsListOptionalParams)
    uid: '@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.list'
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: Gets all the policy assignments for a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: PolicyAssignmentsListOptionalParams):
        PagedAsyncIterableIterator<PolicyAssignment, PolicyAssignment[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment" />,
          <xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listForResource(string, string, string, string, string,
      PolicyAssignmentsListForResourceOptionalParams)
    uid: >-
      @azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.listForResource
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: Gets policy assignments for a resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        PolicyAssignmentsListForResourceOptionalParams):
        PagedAsyncIterableIterator<PolicyAssignment, PolicyAssignment[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group containing the resource. The name is
            case
                                     insensitive.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource path.
        - id: resourceType
          type: string
          description: The resource type.
        - id: resourceName
          type: string
          description: The name of the resource with policy assignments.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsListForResourceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment" />,
          <xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listForResourceGroup(string,
      PolicyAssignmentsListForResourceGroupOptionalParams)
    uid: >-
      @azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignments.listForResourceGroup
    package: '@azure/arm-policy-profile-2020-09-01-hybrid'
    summary: Gets policy assignments for the resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        PolicyAssignmentsListForResourceGroupOptionalParams):
        PagedAsyncIterableIterator<PolicyAssignment, PolicyAssignment[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group that contains policy assignments.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignmentsListForResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment" />,
          <xref
          uid="@azure/arm-policy-profile-2020-09-01-hybrid.PolicyAssignment"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
