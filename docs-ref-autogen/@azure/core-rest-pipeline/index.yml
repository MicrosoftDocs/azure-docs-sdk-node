### YamlMime:TSPackage
uid: '@azure/core-rest-pipeline'
name: '@azure/core-rest-pipeline'
summary: ''
type: package
interfaces:
  - '@azure/core-rest-pipeline.AddPipelineOptions'
  - '@azure/core-rest-pipeline.Agent'
  - '@azure/core-rest-pipeline.AuthorizeRequestOnChallengeOptions'
  - '@azure/core-rest-pipeline.AuthorizeRequestOptions'
  - '@azure/core-rest-pipeline.AuxiliaryAuthenticationHeaderPolicyOptions'
  - '@azure/core-rest-pipeline.BearerTokenAuthenticationPolicyOptions'
  - '@azure/core-rest-pipeline.BodyPart'
  - '@azure/core-rest-pipeline.ChallengeCallbacks'
  - '@azure/core-rest-pipeline.CreateFileFromStreamOptions'
  - '@azure/core-rest-pipeline.CreateFileOptions'
  - '@azure/core-rest-pipeline.DefaultRetryPolicyOptions'
  - '@azure/core-rest-pipeline.ExponentialRetryPolicyOptions'
  - '@azure/core-rest-pipeline.HttpClient'
  - '@azure/core-rest-pipeline.HttpHeaders'
  - '@azure/core-rest-pipeline.InternalPipelineOptions'
  - '@azure/core-rest-pipeline.KeyObject'
  - '@azure/core-rest-pipeline.LogPolicyOptions'
  - '@azure/core-rest-pipeline.MultipartRequestBody'
  - '@azure/core-rest-pipeline.Pipeline'
  - '@azure/core-rest-pipeline.PipelineOptions'
  - '@azure/core-rest-pipeline.PipelinePolicy'
  - '@azure/core-rest-pipeline.PipelineRequest'
  - '@azure/core-rest-pipeline.PipelineRequestOptions'
  - '@azure/core-rest-pipeline.PipelineResponse'
  - '@azure/core-rest-pipeline.PipelineRetryOptions'
  - '@azure/core-rest-pipeline.ProxySettings'
  - '@azure/core-rest-pipeline.PxfObject'
  - '@azure/core-rest-pipeline.RedirectPolicyOptions'
  - '@azure/core-rest-pipeline.RestError'
  - '@azure/core-rest-pipeline.RestErrorConstructor'
  - '@azure/core-rest-pipeline.RestErrorOptions'
  - '@azure/core-rest-pipeline.RetryInformation'
  - '@azure/core-rest-pipeline.RetryModifiers'
  - '@azure/core-rest-pipeline.RetryPolicyOptions'
  - '@azure/core-rest-pipeline.RetryStrategy'
  - '@azure/core-rest-pipeline.SystemErrorRetryPolicyOptions'
  - '@azure/core-rest-pipeline.TelemetryOptions'
  - '@azure/core-rest-pipeline.ThrottlingRetryPolicyOptions'
  - '@azure/core-rest-pipeline.TlsSettings'
  - '@azure/core-rest-pipeline.TracingPolicyOptions'
  - '@azure/core-rest-pipeline.UserAgentPolicyOptions'
typeAliases:
  - '@azure/core-rest-pipeline.FormDataMap'
  - '@azure/core-rest-pipeline.FormDataValue'
  - '@azure/core-rest-pipeline.HttpMethods'
  - '@azure/core-rest-pipeline.PipelinePhase'
  - '@azure/core-rest-pipeline.RawHttpHeaders'
  - '@azure/core-rest-pipeline.RawHttpHeadersInput'
  - '@azure/core-rest-pipeline.RequestBodyType'
  - '@azure/core-rest-pipeline.SendRequest'
  - '@azure/core-rest-pipeline.TransferProgressEvent'
functions:
  - name: agentPolicy(Agent)
    uid: '@azure/core-rest-pipeline.agentPolicy'
    package: '@azure/core-rest-pipeline'
    summary: Gets a pipeline policy that sets http.agent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function agentPolicy(agent?: Agent): PipelinePolicy'
      parameters:
        - id: agent
          type: <xref uid="@azure/core-rest-pipeline.Agent" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: >-
      auxiliaryAuthenticationHeaderPolicy(AuxiliaryAuthenticationHeaderPolicyOptions)
    uid: '@azure/core-rest-pipeline.auxiliaryAuthenticationHeaderPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy for external tokens to `x-ms-authorization-auxiliary` header.

      This header will be used when creating a cross-tenant application we may
      need to handle authentication requests

      for resources that are in different tenants.

      You could see [ARM
      docs](https://learn.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant)
      for a rundown of how this feature works
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function auxiliaryAuthenticationHeaderPolicy(options:
        AuxiliaryAuthenticationHeaderPolicyOptions): PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/core-rest-pipeline.AuxiliaryAuthenticationHeaderPolicyOptions"
            />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: bearerTokenAuthenticationPolicy(BearerTokenAuthenticationPolicyOptions)
    uid: '@azure/core-rest-pipeline.bearerTokenAuthenticationPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy that can request a token from a TokenCredential implementation
      and

      then apply it to the Authorization header of a request as a Bearer token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function bearerTokenAuthenticationPolicy(options:
        BearerTokenAuthenticationPolicyOptions): PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/core-rest-pipeline.BearerTokenAuthenticationPolicyOptions"
            />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: createDefaultHttpClient()
    uid: '@azure/core-rest-pipeline.createDefaultHttpClient'
    package: '@azure/core-rest-pipeline'
    summary: Create the correct HttpClient for the current environment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createDefaultHttpClient(): HttpClient'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.HttpClient" />
  - name: createEmptyPipeline()
    uid: '@azure/core-rest-pipeline.createEmptyPipeline'
    package: '@azure/core-rest-pipeline'
    summary: |-
      Creates a totally empty pipeline.
      Useful for testing or creating a custom one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function createEmptyPipeline(): Pipeline'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.Pipeline" />
  - name: createFile(Uint8Array, string, CreateFileOptions)
    uid: '@azure/core-rest-pipeline.createFile'
    package: '@azure/core-rest-pipeline'
    summary: >-
      Create an object that implements the File interface. This object is
      intended to be

      passed into RequestBodyType.formData, and is not guaranteed to work as
      expected in

      other situations.


      Use this function create a File object for use in RequestBodyType.formData
      in environments where the global File object is unavailable.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createFile(content: Uint8Array, name: string, options?:
        CreateFileOptions): File
      parameters:
        - id: content
          type: Uint8Array
          description: the content of the file as a Uint8Array in memory.
        - id: name
          type: string
          description: the name of the file.
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.CreateFileOptions" />
          description: >-
            optional metadata about the file, e.g. file name, file size, MIME
            type.
      return:
        description: ''
        type: File
  - name: >-
      createFileFromStream(() => ReadableStream<Uint8Array> | ReadableStream,
      string, CreateFileFromStreamOptions)
    uid: '@azure/core-rest-pipeline.createFileFromStream'
    package: '@azure/core-rest-pipeline'
    summary: >-
      Create an object that implements the File interface. This object is
      intended to be

      passed into RequestBodyType.formData, and is not guaranteed to work as
      expected in

      other situations.


      Use this function to:

      - Create a File object for use in RequestBodyType.formData in environments
      where the
        global File object is unavailable.
      - Create a File-like object from a readable stream without reading the
      stream into memory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createFileFromStream(stream: () => ReadableStream<Uint8Array> |
        ReadableStream, name: string, options?: CreateFileFromStreamOptions):
        File
      parameters:
        - id: stream
          type: () =&gt; ReadableStream&lt;Uint8Array&gt; | ReadableStream
          description: >-
            the content of the file as a callback returning a stream. When a
            File object made using createFile is
                             passed in a request's form data map, the stream will not be read into memory
                             and instead will be streamed when the request is made. In the event of a retry, the
                             stream needs to be read again, so this callback SHOULD return a fresh stream if possible.
        - id: name
          type: string
          description: the name of the file.
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.CreateFileFromStreamOptions" />
          description: >-
            optional metadata about the file, e.g. file name, file size, MIME
            type.
      return:
        description: ''
        type: File
  - name: createHttpHeaders(RawHttpHeadersInput)
    uid: '@azure/core-rest-pipeline.createHttpHeaders'
    package: '@azure/core-rest-pipeline'
    summary: Creates an object that satisfies the `HttpHeaders` interface.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createHttpHeaders(rawHeaders?: RawHttpHeadersInput):
        HttpHeaders
      parameters:
        - id: rawHeaders
          type: <xref uid="@azure/core-rest-pipeline.RawHttpHeadersInput" />
          description: A simple object representing initial headers
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.HttpHeaders" />
  - name: createPipelineFromOptions(InternalPipelineOptions)
    uid: '@azure/core-rest-pipeline.createPipelineFromOptions'
    package: '@azure/core-rest-pipeline'
    summary: Create a new pipeline with a default set of customizable policies.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPipelineFromOptions(options: InternalPipelineOptions):
        Pipeline
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.InternalPipelineOptions" />
          description: Options to configure a custom pipeline.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.Pipeline" />
  - name: createPipelineRequest(PipelineRequestOptions)
    uid: '@azure/core-rest-pipeline.createPipelineRequest'
    package: '@azure/core-rest-pipeline'
    summary: >-
      Creates a new pipeline request with the given options.

      This method is to allow for the easy setting of default values and not
      required.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPipelineRequest(options: PipelineRequestOptions):
        PipelineRequest
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.PipelineRequestOptions" />
          description: The options to create the request with.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelineRequest" />
  - name: decompressResponsePolicy()
    uid: '@azure/core-rest-pipeline.decompressResponsePolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy to enable response decompression according to Accept-Encoding
      header

      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function decompressResponsePolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: defaultRetryPolicy(DefaultRetryPolicyOptions)
    uid: '@azure/core-rest-pipeline.defaultRetryPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy that retries according to three strategies:

      - When the server sends a 429 response with a Retry-After header.

      - When there are errors in the underlying transport layer (e.g. DNS lookup
      failures).

      - Or otherwise if the outgoing request fails, it will retry with an
      exponentially increasing delay.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function defaultRetryPolicy(options?: DefaultRetryPolicyOptions):
        PipelinePolicy
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.DefaultRetryPolicyOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: exponentialRetryPolicy(ExponentialRetryPolicyOptions)
    uid: '@azure/core-rest-pipeline.exponentialRetryPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy that attempts to retry requests while introducing an
      exponentially increasing delay.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function exponentialRetryPolicy(options?:
        ExponentialRetryPolicyOptions): PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/core-rest-pipeline.ExponentialRetryPolicyOptions"
            />
          description: Options that configure retry logic.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: formDataPolicy()
    uid: '@azure/core-rest-pipeline.formDataPolicy'
    package: '@azure/core-rest-pipeline'
    summary: A policy that encodes FormData on the request into the body.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function formDataPolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: getDefaultProxySettings(string)
    uid: '@azure/core-rest-pipeline.getDefaultProxySettings'
    package: '@azure/core-rest-pipeline'
    summary: >-
      This method converts a proxy url into `ProxySettings` for use with
      ProxyPolicy.

      If no argument is given, it attempts to parse a proxy URL from the
      environment

      variables `HTTPS_PROXY` or `HTTP_PROXY`.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      - Internally this method is no longer necessary when setting proxy
      information.
    syntax:
      content: >-
        function getDefaultProxySettings(proxyUrl?: string): ProxySettings |
        undefined
      parameters:
        - id: proxyUrl
          type: string
          description: The url of the proxy to use. May contain authentication information.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.ProxySettings" /> | undefined
  - name: isRestError(unknown)
    uid: '@azure/core-rest-pipeline.isRestError'
    package: '@azure/core-rest-pipeline'
    summary: Typeguard for RestError
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isRestError(e: unknown): e'
      parameters:
        - id: e
          type: unknown
          description: Something caught by a catch clause.
      return:
        description: ''
        type: e
  - name: logPolicy(LogPolicyOptions)
    uid: '@azure/core-rest-pipeline.logPolicy'
    package: '@azure/core-rest-pipeline'
    summary: A policy that logs all requests and responses.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function logPolicy(options?: LogPolicyOptions): PipelinePolicy'
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.LogPolicyOptions" />
          description: Options to configure logPolicy.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: multipartPolicy()
    uid: '@azure/core-rest-pipeline.multipartPolicy'
    package: '@azure/core-rest-pipeline'
    summary: Pipeline policy for multipart requests
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function multipartPolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: ndJsonPolicy()
    uid: '@azure/core-rest-pipeline.ndJsonPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      ndJsonPolicy is a policy used to control keep alive settings for every
      request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function ndJsonPolicy(): PipelinePolicy'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: 'proxyPolicy(ProxySettings, { customNoProxyList?: string[] })'
    uid: '@azure/core-rest-pipeline.proxyPolicy'
    package: '@azure/core-rest-pipeline'
    summary: |-
      A policy that allows one to apply proxy settings to all requests.
      If not passed static settings, they will be retrieved from the HTTPS_PROXY
      or HTTP_PROXY environment variables.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function proxyPolicy(proxySettings?: ProxySettings, options?: {
        customNoProxyList?: string[] }): PipelinePolicy
      parameters:
        - id: proxySettings
          type: <xref uid="@azure/core-rest-pipeline.ProxySettings" />
          description: ProxySettings to use on each request.
        - id: options
          type: '{ customNoProxyList?: string[] }'
          description: additional settings, for example, custom NO_PROXY patterns
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: redirectPolicy(RedirectPolicyOptions)
    uid: '@azure/core-rest-pipeline.redirectPolicy'
    package: '@azure/core-rest-pipeline'
    summary: |-
      A policy to follow Location headers from the server in order
      to support server-side redirection.
      In the browser, this policy is not used.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function redirectPolicy(options?: RedirectPolicyOptions): PipelinePolicy'
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.RedirectPolicyOptions" />
          description: Options to control policy behavior.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: retryPolicy(RetryStrategy[], RetryPolicyOptions)
    uid: '@azure/core-rest-pipeline.retryPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      retryPolicy is a generic policy to enable retrying requests when certain
      conditions are met
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function retryPolicy(strategies: RetryStrategy[], options?:
        RetryPolicyOptions): PipelinePolicy
      parameters:
        - id: strategies
          type: <xref uid="@azure/core-rest-pipeline.RetryStrategy" />[]
          description: ''
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.RetryPolicyOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: setClientRequestIdPolicy(string)
    uid: '@azure/core-rest-pipeline.setClientRequestIdPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      Each PipelineRequest gets a unique id upon creation.

      This policy passes that unique id along via an HTTP header to enable
      better

      telemetry and tracing.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setClientRequestIdPolicy(requestIdHeaderName?: string):
        PipelinePolicy
      parameters:
        - id: requestIdHeaderName
          type: string
          description: The name of the header to pass the request ID to.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: systemErrorRetryPolicy(SystemErrorRetryPolicyOptions)
    uid: '@azure/core-rest-pipeline.systemErrorRetryPolicy'
    package: '@azure/core-rest-pipeline'
    summary: |-
      A retry policy that specifically seeks to handle errors in the
      underlying transport layer (e.g. DNS lookup failures) rather than
      retryable error codes from the server itself.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function systemErrorRetryPolicy(options?:
        SystemErrorRetryPolicyOptions): PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/core-rest-pipeline.SystemErrorRetryPolicyOptions"
            />
          description: Options that customize the policy.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: throttlingRetryPolicy(ThrottlingRetryPolicyOptions)
    uid: '@azure/core-rest-pipeline.throttlingRetryPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A policy that retries when the server sends a 429 response with a
      Retry-After header.


      To learn more, please refer to

      https://learn.microsoft.com/azure/azure-resource-manager/resource-manager-request-limits,

      https://learn.microsoft.com/azure/azure-subscription-service-limits and

      https://learn.microsoft.com/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function throttlingRetryPolicy(options?: ThrottlingRetryPolicyOptions):
        PipelinePolicy
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/core-rest-pipeline.ThrottlingRetryPolicyOptions"
            />
          description: Options that configure retry logic.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: tlsPolicy(TlsSettings)
    uid: '@azure/core-rest-pipeline.tlsPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      Gets a pipeline policy that adds the client certificate to the HttpClient
      agent for authentication.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function tlsPolicy(tlsSettings?: TlsSettings): PipelinePolicy'
      parameters:
        - id: tlsSettings
          type: <xref uid="@azure/core-rest-pipeline.TlsSettings" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: tracingPolicy(TracingPolicyOptions)
    uid: '@azure/core-rest-pipeline.tracingPolicy'
    package: '@azure/core-rest-pipeline'
    summary: >-
      A simple policy to create OpenTelemetry Spans for each request made by the
      pipeline

      that has SpanOptions with a parent.

      Requests made without a parent Span will not be recorded.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function tracingPolicy(options?: TracingPolicyOptions): PipelinePolicy'
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.TracingPolicyOptions" />
          description: Options to configure the telemetry logged by the tracing policy.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
  - name: userAgentPolicy(UserAgentPolicyOptions)
    uid: '@azure/core-rest-pipeline.userAgentPolicy'
    package: '@azure/core-rest-pipeline'
    summary: |-
      A policy that sets the User-Agent header (or equivalent) to reflect
      the library version.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function userAgentPolicy(options?: UserAgentPolicyOptions):
        PipelinePolicy
      parameters:
        - id: options
          type: <xref uid="@azure/core-rest-pipeline.UserAgentPolicyOptions" />
          description: Options to customize the user agent value.
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelinePolicy" />
