### YamlMime:TSType
name: CassandraResources
uid: '@azure/arm-cosmosdb.CassandraResources'
package: '@azure/arm-cosmosdb'
summary: Interface representing a CassandraResources.
fullName: CassandraResources
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdateCassandraKeyspace(string, string, string,
      CassandraKeyspaceCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams):
        Promise<SimplePollerLike<OperationState<CassandraKeyspaceGetResults>,
        CassandraKeyspaceGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Cassandra
                                                           keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />&gt;&gt;
  - name: >-
      beginCreateUpdateCassandraKeyspaceAndWait(string, string, string,
      CassandraKeyspaceCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraKeyspaceAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra keyspace
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraKeyspaceAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        createUpdateCassandraKeyspaceParameters:
        CassandraKeyspaceCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams):
        Promise<CassandraKeyspaceGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: createUpdateCassandraKeyspaceParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraKeyspaceCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Cassandra
                                                           keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraKeyspaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults"
          />&gt;
  - name: >-
      beginCreateUpdateCassandraTable(string, string, string, string,
      CassandraTableCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraTableOptionalParams):
        Promise<SimplePollerLike<OperationState<CassandraTableGetResults>,
        CassandraTableGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
                                                        Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraTableGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraTableGetResults" />&gt;&gt;
  - name: >-
      beginCreateUpdateCassandraTableAndWait(string, string, string, string,
      CassandraTableCreateUpdateParameters,
      CassandraResourcesCreateUpdateCassandraTableOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginCreateUpdateCassandraTableAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Cassandra Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateCassandraTableAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        createUpdateCassandraTableParameters:
        CassandraTableCreateUpdateParameters, options?:
        CassandraResourcesCreateUpdateCassandraTableOptionalParams):
        Promise<CassandraTableGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateCassandraTableParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.CassandraTableCreateUpdateParameters"
            />
          description: |-
            The parameters to provide for the current Cassandra
                                                        Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesCreateUpdateCassandraTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.CassandraTableGetResults"
          />&gt;
  - name: >-
      beginDeleteCassandraKeyspace(string, string, string,
      CassandraResourcesDeleteCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraKeyspace(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesDeleteCassandraKeyspaceOptionalParams):
        Promise<SimplePollerLike<OperationState<CassandraResourcesDeleteCassandraKeyspaceHeaders>,
        CassandraResourcesDeleteCassandraKeyspaceHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteCassandraKeyspaceAndWait(string, string, string,
      CassandraResourcesDeleteCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraKeyspaceAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraKeyspaceAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesDeleteCassandraKeyspaceOptionalParams):
        Promise<CassandraResourcesDeleteCassandraKeyspaceHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraKeyspaceHeaders"
          />&gt;
  - name: >-
      beginDeleteCassandraTable(string, string, string, string,
      CassandraResourcesDeleteCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraTable(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesDeleteCassandraTableOptionalParams):
        Promise<SimplePollerLike<OperationState<CassandraResourcesDeleteCassandraTableHeaders>,
        CassandraResourcesDeleteCassandraTableHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteCassandraTableAndWait(string, string, string, string,
      CassandraResourcesDeleteCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginDeleteCassandraTableAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Cassandra table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteCassandraTableAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesDeleteCassandraTableOptionalParams):
        Promise<CassandraResourcesDeleteCassandraTableHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraResourcesDeleteCassandraTableHeaders"
          />&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToAutoscale(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraKeyspaceToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToAutoscaleAndWait(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToManualThroughput(string, string, string,
      CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateCassandraKeyspaceToManualThroughputAndWait(string, string,
      string,
      CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraKeyspaceToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraKeyspaceToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, options?:
        CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraKeyspaceToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateCassandraTableToAutoscale(string, string, string, string,
      CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscale(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateCassandraTableToAutoscaleAndWait(string, string, string,
      string, CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateCassandraTableToManualThroughput(string, string, string,
      string,
      CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateCassandraTableToManualThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateCassandraTableToManualThroughputAndWait(string, string,
      string, string,
      CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginMigrateCassandraTableToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Cassandra table from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateCassandraTableToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        options?:
        CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesMigrateCassandraTableToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginUpdateCassandraKeyspaceThroughput(string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughput
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraKeyspaceThroughput(resourceGroupName:
        string, accountName: string, keyspaceName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra Keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginUpdateCassandraKeyspaceThroughputAndWait(string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraKeyspaceThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginUpdateCassandraKeyspaceThroughputAndWait(resourceGroupName: string,
        accountName: string, keyspaceName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra Keyspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraKeyspaceThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginUpdateCassandraTableThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraTableThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginUpdateCassandraTableThroughputAndWait(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      CassandraResourcesUpdateCassandraTableThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.CassandraResources.beginUpdateCassandraTableThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Cassandra table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateCassandraTableThroughputAndWait(resourceGroupName:
        string, accountName: string, keyspaceName: string, tableName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        CassandraResourcesUpdateCassandraTableThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Cassandra table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesUpdateCassandraTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      getCassandraKeyspace(string, string, string,
      CassandraResourcesGetCassandraKeyspaceOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspace'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra keyspaces under an existing Azure Cosmos DB database
      account with the provided

      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspace(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?:
        CassandraResourcesGetCassandraKeyspaceOptionalParams):
        Promise<CassandraKeyspaceGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults"
          />&gt;
  - name: >-
      getCassandraKeyspaceThroughput(string, string, string,
      CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraKeyspaceThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra Keyspace under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraKeyspaceThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, options?:
        CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraKeyspaceThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      getCassandraTable(string, string, string, string,
      CassandraResourcesGetCassandraTableOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTable'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTable(resourceGroupName: string, accountName:
        string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesGetCassandraTableOptionalParams):
        Promise<CassandraTableGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.CassandraTableGetResults"
          />&gt;
  - name: >-
      getCassandraTableThroughput(string, string, string, string,
      CassandraResourcesGetCassandraTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.getCassandraTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Cassandra table under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCassandraTableThroughput(resourceGroupName: string,
        accountName: string, keyspaceName: string, tableName: string, options?:
        CassandraResourcesGetCassandraTableThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesGetCassandraTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      listCassandraKeyspaces(string, string,
      CassandraResourcesListCassandraKeyspacesOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraKeyspaces'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra keyspaces under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraKeyspaces(resourceGroupName: string, accountName:
        string, options?:
        CassandraResourcesListCassandraKeyspacesOptionalParams):
        PagedAsyncIterableIterator<CassandraKeyspaceGetResults,
        CassandraKeyspaceGetResults[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesListCassandraKeyspacesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />, <xref
          uid="@azure/arm-cosmosdb.CassandraKeyspaceGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listCassandraTables(string, string, string,
      CassandraResourcesListCassandraTablesOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraResources.listCassandraTables'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Cassandra table under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listCassandraTables(resourceGroupName: string, accountName:
        string, keyspaceName: string, options?:
        CassandraResourcesListCassandraTablesOptionalParams):
        PagedAsyncIterableIterator<CassandraTableGetResults,
        CassandraTableGetResults[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyspaceName
          type: string
          description: Cosmos DB keyspace name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraResourcesListCassandraTablesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraTableGetResults" />, <xref
          uid="@azure/arm-cosmosdb.CassandraTableGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
