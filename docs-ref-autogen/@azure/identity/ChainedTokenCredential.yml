### YamlMime:TSType
name: ChainedTokenCredential
uid: '@azure/identity.ChainedTokenCredential'
package: '@azure/identity'
summary: >-
  Enables multiple `TokenCredential` implementations to be tried in order until

  one of the getToken methods returns an access token. For more information, see

  [ChainedTokenCredential
  overview](https://aka.ms/azsdk/js/identity/credential-chains#use-chainedtokencredential-for-granularity).
fullName: ChainedTokenCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ChainedTokenCredential(TokenCredential[])
    uid: '@azure/identity.ChainedTokenCredential.constructor'
    package: '@azure/identity'
    summary: Creates an instance of ChainedTokenCredential using the given credentials.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ChainedTokenCredential(sources: TokenCredential[])'
      parameters:
        - id: sources
          type: <xref uid="@azure/identity.TokenCredential" />[]
          description: >-
            `TokenCredential` implementations to be tried in order.


            Example usage:

            ```ts snippet:chained_token_credential_example

            import { ClientSecretCredential, ChainedTokenCredential } from
            "@azure/identity";


            const tenantId = "<tenant-id>";

            const clientId = "<client-id>";

            const clientSecret = "<client-secret>";

            const anotherClientId = "<another-client-id>";

            const anotherSecret = "<another-client-secret>";


            const firstCredential = new ClientSecretCredential(tenantId,
            clientId, clientSecret);

            const secondCredential = new ClientSecretCredential(tenantId,
            anotherClientId, anotherSecret);


            const credentialChain = new ChainedTokenCredential(firstCredential,
            secondCredential);

            ```
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.ChainedTokenCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Returns the first access token returned by one of the chained

      `TokenCredential` implementations.  Throws an
      [AggregateAuthenticationError](xref:@azure/identity.AggregateAuthenticationError)

      when one or more credentials throws an
      [AuthenticationError](xref:@azure/identity.AuthenticationError) and

      no credentials have returned an access token.


      This method is called automatically by Azure SDK client libraries. You may
      call this method

      directly, but you must also handle token caching and token refreshing.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           `TokenCredential` implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
