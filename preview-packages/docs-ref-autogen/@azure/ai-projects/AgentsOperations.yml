### YamlMime:TSType
name: AgentsOperations
uid: '@azure/ai-projects.AgentsOperations'
package: '@azure/ai-projects'
summary: >-
  Agents Interface Contains operations for creating, listing, updating, and
  deleting agents, threads, runs, messages, and files.
fullName: AgentsOperations
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: cancelRun
    uid: '@azure/ai-projects.AgentsOperations.cancelRun'
    package: '@azure/ai-projects'
    summary: Cancels a run of an in progress thread.
    fullName: cancelRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        cancelRun: (threadId: string, runId: string, options?:
        CancelRunOptionalParams) => Promise<ThreadRunOutput>
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, options?: CancelRunOptionalParams)
          =&gt; Promise&lt;ThreadRunOutput&gt;
  - name: cancelVectorStoreFileBatch
    uid: '@azure/ai-projects.AgentsOperations.cancelVectorStoreFileBatch'
    package: '@azure/ai-projects'
    summary: >-
      Cancel a vector store file batch. This attempts to cancel the processing
      of files in this batch as soon as possible.
    fullName: cancelVectorStoreFileBatch
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        cancelVectorStoreFileBatch: (vectorStoreId: string, batchId: string,
        options?: CancelVectorStoreFileBatchOptionalParams) =>
        Promise<VectorStoreFileBatchOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, batchId: string, options?:
          CancelVectorStoreFileBatchOptionalParams) =&gt;
          Promise&lt;VectorStoreFileBatchOutput&gt;
  - name: createAgent
    uid: '@azure/ai-projects.AgentsOperations.createAgent'
    package: '@azure/ai-projects'
    summary: Creates a new agent.
    fullName: createAgent
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createAgent: (model: string, options?: CreateAgentOptionalParams) =>
        Promise<AgentOutput>
      return:
        description: ''
        type: >-
          (model: string, options?: CreateAgentOptionalParams) =&gt;
          Promise&lt;AgentOutput&gt;
  - name: createMessage
    uid: '@azure/ai-projects.AgentsOperations.createMessage'
    package: '@azure/ai-projects'
    summary: Creates a new message on a specified thread.
    fullName: createMessage
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createMessage: (threadId: string, messageOptions: ThreadMessageOptions,
        options?: CreateMessageOptionalParams) => Promise<ThreadMessageOutput>
      return:
        description: ''
        type: >-
          (threadId: string, messageOptions: ThreadMessageOptions, options?:
          CreateMessageOptionalParams) =&gt; Promise&lt;ThreadMessageOutput&gt;
  - name: createRun
    uid: '@azure/ai-projects.AgentsOperations.createRun'
    package: '@azure/ai-projects'
    summary: >-
      Creates and starts a new run of the specified thread using the specified
      agent.
    fullName: createRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createRun: (threadId: string, assistantId: string, options?:
        CreateRunOptionalParams) => AgentRunResponse
      return:
        description: ''
        type: >-
          (threadId: string, assistantId: string, options?:
          CreateRunOptionalParams) =&gt; AgentRunResponse
  - name: createThread
    uid: '@azure/ai-projects.AgentsOperations.createThread'
    package: '@azure/ai-projects'
    summary: Creates a new thread. Threads contain messages and can be run by agents.
    fullName: createThread
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createThread: (options?: CreateAgentThreadOptionalParams) =>
        Promise<AgentThreadOutput>
      return:
        description: ''
        type: >-
          (options?: CreateAgentThreadOptionalParams) =&gt;
          Promise&lt;AgentThreadOutput&gt;
  - name: createThreadAndRun
    uid: '@azure/ai-projects.AgentsOperations.createThreadAndRun'
    package: '@azure/ai-projects'
    summary: Creates a new thread and immediately starts a run of that thread.
    fullName: createThreadAndRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createThreadAndRun: (assistantId: string, options?:
        CreateAndRunThreadOptionalParams) => AgentRunResponse
      return:
        description: ''
        type: >-
          (assistantId: string, options?: CreateAndRunThreadOptionalParams)
          =&gt; AgentRunResponse
  - name: createVectorStore
    uid: '@azure/ai-projects.AgentsOperations.createVectorStore'
    package: '@azure/ai-projects'
    summary: Creates a vector store.
    fullName: createVectorStore
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStore: (options?: CreateVectorStoreOptionalParams) =>
        PollerLike<OperationState<VectorStoreOutput>, VectorStoreOutput>
      return:
        description: ''
        type: >-
          (options?: CreateVectorStoreOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;VectorStoreOutput&gt;,
          VectorStoreOutput&gt;
  - name: createVectorStoreAndPoll
    uid: '@azure/ai-projects.AgentsOperations.createVectorStoreAndPoll'
    package: '@azure/ai-projects'
    summary: Create vector store and poll.
    fullName: createVectorStoreAndPoll
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStoreAndPoll: (options?: CreateVectorStoreOptionalParams) =>
        PollerLike<OperationState<VectorStoreOutput>, VectorStoreOutput>
      return:
        description: ''
        type: >-
          (options?: CreateVectorStoreOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;VectorStoreOutput&gt;,
          VectorStoreOutput&gt;
  - name: createVectorStoreFile
    uid: '@azure/ai-projects.AgentsOperations.createVectorStoreFile'
    package: '@azure/ai-projects'
    summary: Create a vector store file by attching a file to a vector store.
    fullName: createVectorStoreFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStoreFile: (vectorStoreId: string, options?:
        CreateVectorStoreFileOptionalParams) =>
        PollerLike<OperationState<VectorStoreFileOutput>, VectorStoreFileOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: CreateVectorStoreFileOptionalParams)
          =&gt; PollerLike&lt;OperationState&lt;VectorStoreFileOutput&gt;,
          VectorStoreFileOutput&gt;
  - name: createVectorStoreFileAndPoll
    uid: '@azure/ai-projects.AgentsOperations.createVectorStoreFileAndPoll'
    package: '@azure/ai-projects'
    summary: Create a vector store file by attaching a file to a vector store and poll.
    fullName: createVectorStoreFileAndPoll
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStoreFileAndPoll: (vectorStoreId: string, options?:
        CreateVectorStoreFileOptionalParams) =>
        PollerLike<OperationState<VectorStoreFileOutput>, VectorStoreFileOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: CreateVectorStoreFileOptionalParams)
          =&gt; PollerLike&lt;OperationState&lt;VectorStoreFileOutput&gt;,
          VectorStoreFileOutput&gt;
  - name: createVectorStoreFileBatch
    uid: '@azure/ai-projects.AgentsOperations.createVectorStoreFileBatch'
    package: '@azure/ai-projects'
    summary: Create a vector store file batch.
    fullName: createVectorStoreFileBatch
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStoreFileBatch: (vectorStoreId: string, options?:
        CreateVectorStoreFileBatchOptionalParams) =>
        PollerLike<OperationState<VectorStoreFileBatchOutput>,
        VectorStoreFileBatchOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?:
          CreateVectorStoreFileBatchOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;VectorStoreFileBatchOutput&gt;,
          VectorStoreFileBatchOutput&gt;
  - name: createVectorStoreFileBatchAndPoll
    uid: '@azure/ai-projects.AgentsOperations.createVectorStoreFileBatchAndPoll'
    package: '@azure/ai-projects'
    summary: Create a vector store file batch and poll.
    fullName: createVectorStoreFileBatchAndPoll
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createVectorStoreFileBatchAndPoll: (vectorStoreId: string, options?:
        CreateVectorStoreFileBatchOptionalParams) =>
        PollerLike<OperationState<VectorStoreFileBatchOutput>,
        VectorStoreFileBatchOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?:
          CreateVectorStoreFileBatchOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;VectorStoreFileBatchOutput&gt;,
          VectorStoreFileBatchOutput&gt;
  - name: deleteAgent
    uid: '@azure/ai-projects.AgentsOperations.deleteAgent'
    package: '@azure/ai-projects'
    summary: Deletes an agent.
    fullName: deleteAgent
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        deleteAgent: (assistantId: string, options?: DeleteAgentOptionalParams)
        => Promise<AgentDeletionStatusOutput>
      return:
        description: ''
        type: >-
          (assistantId: string, options?: DeleteAgentOptionalParams) =&gt;
          Promise&lt;AgentDeletionStatusOutput&gt;
  - name: deleteFile
    uid: '@azure/ai-projects.AgentsOperations.deleteFile'
    package: '@azure/ai-projects'
    summary: Delete a previously uploaded file.
    fullName: deleteFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        deleteFile: (fileId: string, options?: DeleteFileOptionalParams) =>
        Promise<FileDeletionStatusOutput>
      return:
        description: ''
        type: >-
          (fileId: string, options?: DeleteFileOptionalParams) =&gt;
          Promise&lt;FileDeletionStatusOutput&gt;
  - name: deleteThread
    uid: '@azure/ai-projects.AgentsOperations.deleteThread'
    package: '@azure/ai-projects'
    summary: Deletes an existing thread.
    fullName: deleteThread
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        deleteThread: (threadId: string, options?:
        DeleteAgentThreadOptionalParams) => Promise<ThreadDeletionStatusOutput>
      return:
        description: ''
        type: >-
          (threadId: string, options?: DeleteAgentThreadOptionalParams) =&gt;
          Promise&lt;ThreadDeletionStatusOutput&gt;
  - name: deleteVectorStore
    uid: '@azure/ai-projects.AgentsOperations.deleteVectorStore'
    package: '@azure/ai-projects'
    summary: Deletes the vector store object matching the specified ID.
    fullName: deleteVectorStore
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        deleteVectorStore: (vectorStoreId: string, options?:
        DeleteVectorStoreOptionalParams) =>
        Promise<VectorStoreDeletionStatusOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: DeleteVectorStoreOptionalParams)
          =&gt; Promise&lt;VectorStoreDeletionStatusOutput&gt;
  - name: deleteVectorStoreFile
    uid: '@azure/ai-projects.AgentsOperations.deleteVectorStoreFile'
    package: '@azure/ai-projects'
    summary: >-
      Delete a vector store file. This will remove the file from the vector
      store but the file itself will not be deleted.

      To delete the file, use the delete file endpoint.
    fullName: deleteVectorStoreFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        deleteVectorStoreFile: (vectorStoreId: string, fileId: string, options?:
        DeleteVectorStoreFileOptionalParams) =>
        Promise<VectorStoreFileDeletionStatusOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, fileId: string, options?:
          DeleteVectorStoreFileOptionalParams) =&gt;
          Promise&lt;VectorStoreFileDeletionStatusOutput&gt;
  - name: getAgent
    uid: '@azure/ai-projects.AgentsOperations.getAgent'
    package: '@azure/ai-projects'
    summary: Retrieves an existing agent.
    fullName: getAgent
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getAgent: (assistantId: string, options?: GetAgentOptionalParams) =>
        Promise<AgentOutput>
      return:
        description: ''
        type: >-
          (assistantId: string, options?: GetAgentOptionalParams) =&gt;
          Promise&lt;AgentOutput&gt;
  - name: getFile
    uid: '@azure/ai-projects.AgentsOperations.getFile'
    package: '@azure/ai-projects'
    summary: Returns information about a specific file. Does not retrieve file content.
    fullName: getFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getFile: (fileId: string, options?: GetFileOptionalParams) =>
        Promise<OpenAIFileOutput>
      return:
        description: ''
        type: >-
          (fileId: string, options?: GetFileOptionalParams) =&gt;
          Promise&lt;OpenAIFileOutput&gt;
  - name: getFileContent
    uid: '@azure/ai-projects.AgentsOperations.getFileContent'
    package: '@azure/ai-projects'
    summary: Returns the content of a specific file.
    fullName: getFileContent
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getFileContent: (fileId: string, options?: GetFileContentOptionalParams)
        => StreamableMethod<string | Uint8Array>
      return:
        description: ''
        type: >-
          (fileId: string, options?: GetFileContentOptionalParams) =&gt;
          StreamableMethod&lt;string | Uint8Array&gt;
  - name: getRun
    uid: '@azure/ai-projects.AgentsOperations.getRun'
    package: '@azure/ai-projects'
    summary: Gets an existing run from an existing thread.
    fullName: getRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getRun: (threadId: string, runId: string, options?:
        GetRunOptionalParams) => Promise<ThreadRunOutput>
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, options?: GetRunOptionalParams)
          =&gt; Promise&lt;ThreadRunOutput&gt;
  - name: getRunStep
    uid: '@azure/ai-projects.AgentsOperations.getRunStep'
    package: '@azure/ai-projects'
    summary: Gets a single run step from a thread run.
    fullName: getRunStep
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getRunStep: (threadId: string, runId: string, stepId: string, options?:
        GetRunStepOptionalParams) => Promise<RunStepOutput>
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, stepId: string, options?:
          GetRunStepOptionalParams) =&gt; Promise&lt;RunStepOutput&gt;
  - name: getThread
    uid: '@azure/ai-projects.AgentsOperations.getThread'
    package: '@azure/ai-projects'
    summary: Gets information about an existing thread.
    fullName: getThread
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getThread: (threadId: string, options?: GetAgentThreadOptionalParams) =>
        Promise<AgentThreadOutput>
      return:
        description: ''
        type: >-
          (threadId: string, options?: GetAgentThreadOptionalParams) =&gt;
          Promise&lt;AgentThreadOutput&gt;
  - name: getVectorStore
    uid: '@azure/ai-projects.AgentsOperations.getVectorStore'
    package: '@azure/ai-projects'
    summary: Returns the vector store object object matching the specific ID.
    fullName: getVectorStore
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getVectorStore: (vectorStoreId: string, options?:
        DeleteVectorStoreOptionalParams) => Promise<VectorStoreOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: DeleteVectorStoreOptionalParams)
          =&gt; Promise&lt;VectorStoreOutput&gt;
  - name: getVectorStoreFile
    uid: '@azure/ai-projects.AgentsOperations.getVectorStoreFile'
    package: '@azure/ai-projects'
    summary: Retrieves a vector store file.
    fullName: getVectorStoreFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getVectorStoreFile: (vectorStoreId: string, fileId: string, options?:
        GetVectorStoreFileOptionalParams) => Promise<VectorStoreFileOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, fileId: string, options?:
          GetVectorStoreFileOptionalParams) =&gt;
          Promise&lt;VectorStoreFileOutput&gt;
  - name: getVectorStoreFileBatch
    uid: '@azure/ai-projects.AgentsOperations.getVectorStoreFileBatch'
    package: '@azure/ai-projects'
    summary: Retrieve a vector store file batch.
    fullName: getVectorStoreFileBatch
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getVectorStoreFileBatch: (vectorStoreId: string, batchId: string,
        options?: GetVectorStoreFileBatchOptionalParams) =>
        Promise<VectorStoreFileBatchOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, batchId: string, options?:
          GetVectorStoreFileBatchOptionalParams) =&gt;
          Promise&lt;VectorStoreFileBatchOutput&gt;
  - name: listAgents
    uid: '@azure/ai-projects.AgentsOperations.listAgents'
    package: '@azure/ai-projects'
    summary: Gets a list of agents that were previously created.
    fullName: listAgents
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listAgents: (options?: ListAgentsOptionalParams) =>
        Promise<OpenAIPageableListOfAgentOutput>
      return:
        description: ''
        type: >-
          (options?: ListAgentsOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfAgentOutput&gt;
  - name: listFiles
    uid: '@azure/ai-projects.AgentsOperations.listFiles'
    package: '@azure/ai-projects'
    summary: Gets a list of previously uploaded files.
    fullName: listFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listFiles: (options?: ListFilesOptionalParams) =>
        Promise<FileListResponseOutput>
      return:
        description: ''
        type: >-
          (options?: ListFilesOptionalParams) =&gt;
          Promise&lt;FileListResponseOutput&gt;
  - name: listMessages
    uid: '@azure/ai-projects.AgentsOperations.listMessages'
    package: '@azure/ai-projects'
    summary: Gets a list of messages that exist on a thread.
    fullName: listMessages
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listMessages: (threadId: string, options?: ListMessagesOptionalParams)
        => Promise<OpenAIPageableListOfThreadMessageOutput>
      return:
        description: ''
        type: >-
          (threadId: string, options?: ListMessagesOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfThreadMessageOutput&gt;
  - name: listRuns
    uid: '@azure/ai-projects.AgentsOperations.listRuns'
    package: '@azure/ai-projects'
    summary: Gets a list of runs for a specified thread.
    fullName: listRuns
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listRuns: (threadId: string, options?: ListRunQueryOptionalParams) =>
        Promise<OpenAIPageableListOfThreadRunOutput>
      return:
        description: ''
        type: >-
          (threadId: string, options?: ListRunQueryOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfThreadRunOutput&gt;
  - name: listRunSteps
    uid: '@azure/ai-projects.AgentsOperations.listRunSteps'
    package: '@azure/ai-projects'
    summary: Gets a list of run steps from a thread run.
    fullName: listRunSteps
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listRunSteps: (threadId: string, runId: string, options?:
        ListRunQueryOptionalParams) =>
        Promise<OpenAIPageableListOfRunStepOutput>
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, options?:
          ListRunQueryOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfRunStepOutput&gt;
  - name: listThreads
    uid: '@azure/ai-projects.AgentsOperations.listThreads'
    package: '@azure/ai-projects'
    summary: Gets a list of threads that were previously created.
    fullName: listThreads
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listThreads: (options?: ListAgentThreadOptionalParams) =>
        Promise<OpenAIPageableListOfAgentThreadOutput>
      return:
        description: ''
        type: >-
          (options?: ListAgentThreadOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfAgentThreadOutput&gt;
  - name: listVectorStoreFileBatchFiles
    uid: '@azure/ai-projects.AgentsOperations.listVectorStoreFileBatchFiles'
    package: '@azure/ai-projects'
    summary: Returns a list of vector store files in a batch.
    fullName: listVectorStoreFileBatchFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listVectorStoreFileBatchFiles: (vectorStoreId: string, batchId: string,
        options?: ListVectorStoreFileBatchFilesOptionalParams) =>
        Promise<OpenAIPageableListOfVectorStoreFileOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, batchId: string, options?:
          ListVectorStoreFileBatchFilesOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfVectorStoreFileOutput&gt;
  - name: listVectorStoreFiles
    uid: '@azure/ai-projects.AgentsOperations.listVectorStoreFiles'
    package: '@azure/ai-projects'
    summary: Returns a list of vector store files.
    fullName: listVectorStoreFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listVectorStoreFiles: (vectorStoreId: string, options?:
        ListVectorStoreFilesOptionalParams) =>
        Promise<OpenAIPageableListOfVectorStoreFileOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: ListVectorStoreFilesOptionalParams)
          =&gt; Promise&lt;OpenAIPageableListOfVectorStoreFileOutput&gt;
  - name: listVectorStores
    uid: '@azure/ai-projects.AgentsOperations.listVectorStores'
    package: '@azure/ai-projects'
    summary: Returns a list of vector stores.
    fullName: listVectorStores
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listVectorStores: (options?: DeleteVectorStoreOptionalParams) =>
        Promise<OpenAIPageableListOfVectorStoreOutput>
      return:
        description: ''
        type: >-
          (options?: DeleteVectorStoreOptionalParams) =&gt;
          Promise&lt;OpenAIPageableListOfVectorStoreOutput&gt;
  - name: modifyVectorStore
    uid: '@azure/ai-projects.AgentsOperations.modifyVectorStore'
    package: '@azure/ai-projects'
    summary: The ID of the vector store to modify.
    fullName: modifyVectorStore
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        modifyVectorStore: (vectorStoreId: string, options?:
        UpdateVectorStoreOptionalParams) => Promise<VectorStoreOutput>
      return:
        description: ''
        type: >-
          (vectorStoreId: string, options?: UpdateVectorStoreOptionalParams)
          =&gt; Promise&lt;VectorStoreOutput&gt;
  - name: submitToolOutputsToRun
    uid: '@azure/ai-projects.AgentsOperations.submitToolOutputsToRun'
    package: '@azure/ai-projects'
    summary: >-
      Submits outputs from tools as requested by tool calls in a run. Runs that
      need submitted tool outputs will have a status of 'requires_action' with a
      required_action.type of 'submit_tool_outputs'.
    fullName: submitToolOutputsToRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        submitToolOutputsToRun: (threadId: string, runId: string, toolOutputs:
        ToolOutput[], options?: SubmitToolOutputsToRunOptionalParams) =>
        AgentRunResponse
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, toolOutputs: ToolOutput[], options?:
          SubmitToolOutputsToRunOptionalParams) =&gt; AgentRunResponse
  - name: updateAgent
    uid: '@azure/ai-projects.AgentsOperations.updateAgent'
    package: '@azure/ai-projects'
    summary: Modifies an existing agent.
    fullName: updateAgent
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        updateAgent: (assistantId: string, options: UpdateAgentOptionalParams)
        => Promise<AgentOutput>
      return:
        description: ''
        type: >-
          (assistantId: string, options: UpdateAgentOptionalParams) =&gt;
          Promise&lt;AgentOutput&gt;
  - name: updateMessage
    uid: '@azure/ai-projects.AgentsOperations.updateMessage'
    package: '@azure/ai-projects'
    summary: Modifies an existing message on an existing thread.
    fullName: updateMessage
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        updateMessage: (threadId: string, messageId: string, options?:
        UpdateMessageOptionalParams) => Promise<ThreadMessageOutput>
      return:
        description: ''
        type: >-
          (threadId: string, messageId: string, options?:
          UpdateMessageOptionalParams) =&gt; Promise&lt;ThreadMessageOutput&gt;
  - name: updateRun
    uid: '@azure/ai-projects.AgentsOperations.updateRun'
    package: '@azure/ai-projects'
    summary: Modifies an existing thread run.
    fullName: updateRun
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        updateRun: (threadId: string, runId: string, options?:
        UpdateRunOptionalParams) => Promise<ThreadRunOutput>
      return:
        description: ''
        type: >-
          (threadId: string, runId: string, options?: UpdateRunOptionalParams)
          =&gt; Promise&lt;ThreadRunOutput&gt;
  - name: updateThread
    uid: '@azure/ai-projects.AgentsOperations.updateThread'
    package: '@azure/ai-projects'
    summary: Modifies an existing thread.
    fullName: updateThread
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        updateThread: (threadId: string, options?:
        UpdateAgentThreadOptionalParams) => Promise<AgentThreadOutput>
      return:
        description: ''
        type: >-
          (threadId: string, options?: UpdateAgentThreadOptionalParams) =&gt;
          Promise&lt;AgentThreadOutput&gt;
  - name: uploadFile
    uid: '@azure/ai-projects.AgentsOperations.uploadFile'
    package: '@azure/ai-projects'
    summary: Uploads a file for use by other operations.
    fullName: uploadFile
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        uploadFile: (data: ReadableStream<any> | ReadableStream, purpose:
        string, options?: UploadFileOptionalParams) =>
        PollerLike<OperationState<OpenAIFileOutput>, OpenAIFileOutput>
      return:
        description: ''
        type: >-
          (data: ReadableStream&lt;any&gt; | ReadableStream, purpose: string,
          options?: UploadFileOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;OpenAIFileOutput&gt;,
          OpenAIFileOutput&gt;
  - name: uploadFileAndPoll
    uid: '@azure/ai-projects.AgentsOperations.uploadFileAndPoll'
    package: '@azure/ai-projects'
    summary: Uploads a file for use by other operations.
    fullName: uploadFileAndPoll
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        uploadFileAndPoll: (data: ReadableStream<any> | ReadableStream, purpose:
        string, options?: UploadFileOptionalParams) =>
        PollerLike<OperationState<OpenAIFileOutput>, OpenAIFileOutput>
      return:
        description: ''
        type: >-
          (data: ReadableStream&lt;any&gt; | ReadableStream, purpose: string,
          options?: UploadFileOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;OpenAIFileOutput&gt;,
          OpenAIFileOutput&gt;
