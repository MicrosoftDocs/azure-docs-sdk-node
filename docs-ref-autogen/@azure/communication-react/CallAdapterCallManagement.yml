### YamlMime:TSType
name: CallAdapterCallManagement
uid: '@azure/communication-react.CallAdapterCallManagement'
package: '@azure/communication-react'
summary: Functionality for managing the current call or start a new call
fullName: CallAdapterCallManagement
remarks: ''
isDeprecated: true
customDeprecatedMessage: CallAdapter interface will be flatten, consider using CallAdapter directly
type: interface
inheritedProperties:
  - name: sendRealTimeText
    uid: '@azure/communication-react.CallAdapterCallManagement.sendRealTimeText'
    package: '@azure/communication-react'
    summary: Send real time text
    fullName: sendRealTimeText
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sendRealTimeText: (text: string, isFinalized: boolean) => Promise<void>'
      return:
        description: ''
        type: '(text: string, isFinalized: boolean) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.sendRealTimeText](xref:@azure/communication-react.CallAdapterCallOperations.sendRealTimeText)
inheritedMethods:
  - name: addParticipant(CommunicationUserIdentifier)
    uid: '@azure/communication-react.CallAdapterCallManagement.addParticipant_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(participant: CommunicationUserIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.addParticipant](xref:@azure/communication-react.CallAdapterCallOperations.addParticipant)
  - name: addParticipant(PhoneNumberIdentifier, AddPhoneNumberOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.addParticipant'
    package: '@azure/communication-react'
    summary: Add a participant to the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(participant: PhoneNumberIdentifier, options?:
        AddPhoneNumberOptions): Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.PhoneNumberIdentifier" />
          description: ''
        - id: options
          type: <xref uid="@azure/communication-calling.AddPhoneNumberOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.addParticipant](xref:@azure/communication-react.CallAdapterCallOperations.addParticipant)
  - name: createStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.createStreamView'
    package: '@azure/communication-react'
    summary: Create the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void | CreateVideoStreamViewResult>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to create the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.CreateVideoStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.createStreamView](xref:@azure/communication-react.CallAdapterCallOperations.createStreamView)
  - name: createTogetherModeStreamView(TogetherModeStreamOptions)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.createTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Create the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function createTogetherModeStreamView(options?:
        TogetherModeStreamOptions): Promise<void | TogetherModeStreamViewResult>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.TogetherModeStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.TogetherModeStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.createTogetherModeStreamView](xref:@azure/communication-react.CallAdapterCallOperations.createTogetherModeStreamView)
  - name: disposeLocalVideoStreamView()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.disposeLocalVideoStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a local video stream
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function disposeLocalVideoStreamView(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeLocalVideoStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeLocalVideoStreamView)
  - name: disposeRemoteVideoStreamView(string)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.disposeRemoteVideoStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a remote video stream
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function disposeRemoteVideoStreamView(remoteUserId: string):
        Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: Id of the participant to dispose
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeRemoteVideoStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeRemoteVideoStreamView)
  - name: disposeScreenShareStreamView(string)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.disposeScreenShareStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a screen share stream
    remarks: this method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function disposeScreenShareStreamView(remoteUserId: string):
        Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: Id of the participant to dispose the screen share stream view for.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeScreenShareStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeScreenShareStreamView)
  - name: disposeStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.disposeStreamView'
    package: '@azure/communication-react'
    summary: Dispose the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: true
    customDeprecatedMessage: >-
      Use
      [disposeRemoteVideoStreamView](xref:@azure/communication-react.CallAdapterCallManagement.disposeRemoteVideoStreamView),
      [disposeLocalVideoStreamView](xref:@azure/communication-react.CallAdapterCallManagement.disposeLocalVideoStreamView)
      and
      [disposeRemoteVideoStreamView](xref:@azure/communication-react.CallAdapterCallManagement.disposeRemoteVideoStreamView)
      instead.
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to dispose the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeStreamView)
  - name: disposeTogetherModeStreamView()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.disposeTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: 'function disposeTogetherModeStreamView(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeTogetherModeStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeTogetherModeStreamView)
  - name: forbidAudio(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.forbidAudio'
    package: '@azure/communication-react'
    summary: Forbid Teams meeting attendees audio by their user ids.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function forbidAudio(userIds: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.forbidAudio](xref:@azure/communication-react.CallAdapterCallOperations.forbidAudio)
  - name: forbidOthersAudio()
    uid: '@azure/communication-react.CallAdapterCallManagement.forbidOthersAudio'
    package: '@azure/communication-react'
    summary: Forbid Teams meeting audio.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function forbidOthersAudio(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.forbidOthersAudio](xref:@azure/communication-react.CallAdapterCallOperations.forbidOthersAudio)
  - name: forbidOthersVideo()
    uid: '@azure/communication-react.CallAdapterCallManagement.forbidOthersVideo'
    package: '@azure/communication-react'
    summary: Forbid Teams meeting video.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function forbidOthersVideo(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.forbidOthersVideo](xref:@azure/communication-react.CallAdapterCallOperations.forbidOthersVideo)
  - name: forbidVideo(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.forbidVideo'
    package: '@azure/communication-react'
    summary: Forbid Teams meeting attendees video by their user ids.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function forbidVideo(userIds: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.forbidVideo](xref:@azure/communication-react.CallAdapterCallOperations.forbidVideo)
  - name: holdCall()
    uid: '@azure/communication-react.CallAdapterCallManagement.holdCall'
    package: '@azure/communication-react'
    summary: Holds the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function holdCall(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.holdCall](xref:@azure/communication-react.CallAdapterCallOperations.holdCall)
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.CallAdapterCallManagement.leaveCall'
    package: '@azure/communication-react'
    summary: Leave the call
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean): Promise<void>'
      parameters:
        - id: forEveryone
          type: boolean
          description: Whether to remove all participants when leaving
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.leaveCall](xref:@azure/communication-react.CallAdapterCallOperations.leaveCall)
  - name: lowerHand()
    uid: '@azure/communication-react.CallAdapterCallManagement.lowerHand'
    package: '@azure/communication-react'
    summary: lower hand for current user
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function lowerHand(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.lowerHand](xref:@azure/communication-react.CallAdapterCallOperations.lowerHand)
  - name: mute()
    uid: '@azure/communication-react.CallAdapterCallManagement.mute'
    package: '@azure/communication-react'
    summary: Mute the current user during the call or disable microphone locally
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.mute](xref:@azure/communication-react.CallAdapterCallOperations.mute)
  - name: muteAllRemoteParticipants()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.muteAllRemoteParticipants
    package: '@azure/communication-react'
    summary: Mute All participants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function muteAllRemoteParticipants(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.muteAllRemoteParticipants](xref:@azure/communication-react.CallAdapterCallOperations.muteAllRemoteParticipants)
  - name: muteParticipant(string)
    uid: '@azure/communication-react.CallAdapterCallManagement.muteParticipant'
    package: '@azure/communication-react'
    summary: Mute a participant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function muteParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: Id of the participant to mute
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.muteParticipant](xref:@azure/communication-react.CallAdapterCallOperations.muteParticipant)
  - name: onReactionClick(Reaction)
    uid: '@azure/communication-react.CallAdapterCallManagement.onReactionClick'
    package: '@azure/communication-react'
    summary: Send reaction emoji
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onReactionClick(reaction: Reaction): Promise<void>'
      parameters:
        - id: reaction
          type: <xref uid="@azure/communication-calling.Reaction" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.onReactionClick](xref:@azure/communication-react.CallAdapterCallOperations.onReactionClick)
  - name: permitAudio(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.permitAudio'
    package: '@azure/communication-react'
    summary: Permit Teams meeting attendees audio by their user ids.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function permitAudio(userIds: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.permitAudio](xref:@azure/communication-react.CallAdapterCallOperations.permitAudio)
  - name: permitOthersAudio()
    uid: '@azure/communication-react.CallAdapterCallManagement.permitOthersAudio'
    package: '@azure/communication-react'
    summary: Permit Teams meeting audio.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function permitOthersAudio(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.permitOthersAudio](xref:@azure/communication-react.CallAdapterCallOperations.permitOthersAudio)
  - name: permitOthersVideo()
    uid: '@azure/communication-react.CallAdapterCallManagement.permitOthersVideo'
    package: '@azure/communication-react'
    summary: Permit Teams meeting video.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function permitOthersVideo(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.permitOthersVideo](xref:@azure/communication-react.CallAdapterCallOperations.permitOthersVideo)
  - name: permitVideo(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.permitVideo'
    package: '@azure/communication-react'
    summary: Permit Teams meeting attendees audio by their user ids.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function permitVideo(userIds: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.permitVideo](xref:@azure/communication-react.CallAdapterCallOperations.permitVideo)
  - name: raiseHand()
    uid: '@azure/communication-react.CallAdapterCallManagement.raiseHand'
    package: '@azure/communication-react'
    summary: Raise hand for current user
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function raiseHand(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.raiseHand](xref:@azure/communication-react.CallAdapterCallOperations.raiseHand)
  - name: removeParticipant(CommunicationIdentifier)
    uid: '@azure/communication-react.CallAdapterCallManagement.removeParticipant_1'
    package: '@azure/communication-react'
    summary: Remove a participant from the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeParticipant(participant: CommunicationIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.CommunicationIdentifier" />
          description: >-
            <xref:%40azure%2Fcommunication-common%23CommunicationIdentifier> of
            the participant to be removed
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.removeParticipant](xref:@azure/communication-react.CallAdapterCallOperations.removeParticipant)
  - name: removeParticipant(string)
    uid: '@azure/communication-react.CallAdapterCallManagement.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant from the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: Id of the participant to be removed
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.removeParticipant](xref:@azure/communication-react.CallAdapterCallOperations.removeParticipant)
  - name: resumeCall()
    uid: '@azure/communication-react.CallAdapterCallManagement.resumeCall'
    package: '@azure/communication-react'
    summary: Resumes the call from a `LocalHold` state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function resumeCall(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.resumeCall](xref:@azure/communication-react.CallAdapterCallOperations.resumeCall)
  - name: returnFromBreakoutRoom()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.returnFromBreakoutRoom
    package: '@azure/communication-react'
    summary: Return to origin call of breakout room
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function returnFromBreakoutRoom(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.returnFromBreakoutRoom](xref:@azure/communication-react.CallAdapterCallOperations.returnFromBreakoutRoom)
  - name: sendDtmfTone(DtmfTone)
    uid: '@azure/communication-react.CallAdapterCallManagement.sendDtmfTone'
    package: '@azure/communication-react'
    summary: send dtmf tone to another participant in a 1:1 PSTN call
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendDtmfTone(dtmfTone: DtmfTone): Promise<void>'
      parameters:
        - id: dtmfTone
          type: <xref uid="@azure/communication-calling.DtmfTone" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.sendDtmfTone](xref:@azure/communication-react.CallAdapterCallOperations.sendDtmfTone)
  - name: setCaptionLanguage(string)
    uid: '@azure/communication-react.CallAdapterCallManagement.setCaptionLanguage'
    package: '@azure/communication-react'
    summary: Function to set caption language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setCaptionLanguage(language: string): Promise<void>'
      parameters:
        - id: language
          type: string
          description: language set for caption
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.setCaptionLanguage](xref:@azure/communication-react.CallAdapterCallOperations.setCaptionLanguage)
  - name: setSpokenLanguage(string)
    uid: '@azure/communication-react.CallAdapterCallManagement.setSpokenLanguage'
    package: '@azure/communication-react'
    summary: Function to set spoken language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpokenLanguage(language: string): Promise<void>'
      parameters:
        - id: language
          type: string
          description: spoken language
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.setSpokenLanguage](xref:@azure/communication-react.CallAdapterCallOperations.setSpokenLanguage)
  - name: setTogetherModeSceneSize(number, number)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.setTogetherModeSceneSize
    package: '@azure/communication-react'
    summary: Recalculate the seating positions for together mode.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: 'function setTogetherModeSceneSize(width: number, height: number)'
      parameters:
        - id: width
          type: number
          description: Width of the container
        - id: height
          type: number
          description: Height of the container
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.setTogetherModeSceneSize](xref:@azure/communication-react.CallAdapterCallOperations.setTogetherModeSceneSize)
  - name: startCamera(VideoStreamOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.startCamera'
    package: '@azure/communication-react'
    summary: >-
      Start the camera

      This method will start rendering a local camera view when the call is not
      active
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCamera(options?: VideoStreamOptions): Promise<void>'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startCamera](xref:@azure/communication-react.CallAdapterCallOperations.startCamera)
  - name: startCaptions(StartCaptionsAdapterOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.startCaptions'
    package: '@azure/communication-react'
    summary: Function to Start captions
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCaptions(options?: StartCaptionsAdapterOptions):
        Promise<void>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/communication-react.StartCaptionsAdapterOptions"
            />
          description: options for start captions
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startCaptions](xref:@azure/communication-react.CallAdapterCallOperations.startCaptions)
  - name: startNoiseSuppressionEffect()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.startNoiseSuppressionEffect
    package: '@azure/communication-react'
    summary: Start the noise suppression effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startNoiseSuppressionEffect(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startNoiseSuppressionEffect](xref:@azure/communication-react.CallAdapterCallOperations.startNoiseSuppressionEffect)
  - name: startScreenShare()
    uid: '@azure/communication-react.CallAdapterCallManagement.startScreenShare'
    package: '@azure/communication-react'
    summary: Start sharing the screen during a call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startScreenShare](xref:@azure/communication-react.CallAdapterCallOperations.startScreenShare)
  - name: startSpotlight(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.startSpotlight'
    package: '@azure/communication-react'
    summary: >-
      Start spotlight for local and remote participants by their user ids.

      If no array of user ids is passed then action is performed on local
      participant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startSpotlight(userIds?: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startSpotlight](xref:@azure/communication-react.CallAdapterCallOperations.startSpotlight)
  - name: startTogetherMode()
    uid: '@azure/communication-react.CallAdapterCallManagement.startTogetherMode'
    package: '@azure/communication-react'
    summary: Start Together mode.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startTogetherMode(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startTogetherMode](xref:@azure/communication-react.CallAdapterCallOperations.startTogetherMode)
  - name: startVideoBackgroundEffect(VideoBackgroundEffect)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.startVideoBackgroundEffect
    package: '@azure/communication-react'
    summary: Start the video background effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startVideoBackgroundEffect(videoBackgroundEffect:
        VideoBackgroundEffect): Promise<void>
      parameters:
        - id: videoBackgroundEffect
          type: <xref uid="@azure/communication-react.VideoBackgroundEffect" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startVideoBackgroundEffect](xref:@azure/communication-react.CallAdapterCallOperations.startVideoBackgroundEffect)
  - name: stopAllSpotlight()
    uid: '@azure/communication-react.CallAdapterCallManagement.stopAllSpotlight'
    package: '@azure/communication-react'
    summary: Stop all spotlights
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopAllSpotlight(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopAllSpotlight](xref:@azure/communication-react.CallAdapterCallOperations.stopAllSpotlight)
  - name: stopCamera()
    uid: '@azure/communication-react.CallAdapterCallManagement.stopCamera'
    package: '@azure/communication-react'
    summary: >-
      Stop the camera

      This method will stop rendering a local camera view when the call is not
      active
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopCamera(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopCamera](xref:@azure/communication-react.CallAdapterCallOperations.stopCamera)
  - name: stopCaptions(StopCaptionsAdapterOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.stopCaptions'
    package: '@azure/communication-react'
    summary: Funtion to stop captions
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function stopCaptions(options?: StopCaptionsAdapterOptions):
        Promise<void>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.StopCaptionsAdapterOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopCaptions](xref:@azure/communication-react.CallAdapterCallOperations.stopCaptions)
  - name: stopNoiseSuppressionEffect()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.stopNoiseSuppressionEffect
    package: '@azure/communication-react'
    summary: Stop the noise suppression effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopNoiseSuppressionEffect(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopNoiseSuppressionEffect](xref:@azure/communication-react.CallAdapterCallOperations.stopNoiseSuppressionEffect)
  - name: stopScreenShare()
    uid: '@azure/communication-react.CallAdapterCallManagement.stopScreenShare'
    package: '@azure/communication-react'
    summary: Stop sharing the screen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopScreenShare](xref:@azure/communication-react.CallAdapterCallOperations.stopScreenShare)
  - name: stopSpotlight(string[])
    uid: '@azure/communication-react.CallAdapterCallManagement.stopSpotlight'
    package: '@azure/communication-react'
    summary: >-
      Stop spotlight for local and remote participants by their user ids.

      If no array of user ids is passed then action is performed on local
      participant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopSpotlight(userIds?: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopSpotlight](xref:@azure/communication-react.CallAdapterCallOperations.stopSpotlight)
  - name: stopVideoBackgroundEffects()
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.stopVideoBackgroundEffects
    package: '@azure/communication-react'
    summary: Stop the video background effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopVideoBackgroundEffects(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopVideoBackgroundEffects](xref:@azure/communication-react.CallAdapterCallOperations.stopVideoBackgroundEffects)
  - name: submitSurvey(CallSurvey)
    uid: '@azure/communication-react.CallAdapterCallManagement.submitSurvey'
    package: '@azure/communication-react'
    summary: Send the end of call survey result
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitSurvey(survey: CallSurvey): Promise<undefined |
        CallSurveyResponse>
      parameters:
        - id: survey
          type: <xref uid="@azure/communication-calling.CallSurvey" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;undefined | <xref
          uid="@azure/communication-calling.CallSurveyResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.submitSurvey](xref:@azure/communication-react.CallAdapterCallOperations.submitSurvey)
  - name: unmute()
    uid: '@azure/communication-react.CallAdapterCallManagement.unmute'
    package: '@azure/communication-react'
    summary: Unmute the current user during the call or enable microphone locally
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unmute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.unmute](xref:@azure/communication-react.CallAdapterCallOperations.unmute)
  - name: updateBackgroundPickerImages(VideoBackgroundImage[])
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.updateBackgroundPickerImages
    package: '@azure/communication-react'
    summary: Override the background picker images for background replacement effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateBackgroundPickerImages(backgroundImages:
        VideoBackgroundImage[])
      parameters:
        - id: backgroundImages
          type: <xref uid="@azure/communication-react.VideoBackgroundImage" />[]
          description: Array of custom background images.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.updateBackgroundPickerImages](xref:@azure/communication-react.CallAdapterCallOperations.updateBackgroundPickerImages)
  - name: updateSelectedVideoBackgroundEffect(VideoBackgroundEffect)
    uid: >-
      @azure/communication-react.CallAdapterCallManagement.updateSelectedVideoBackgroundEffect
    package: '@azure/communication-react'
    summary: Update the selected video background effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateSelectedVideoBackgroundEffect(selectedVideoBackground:
        VideoBackgroundEffect)
      parameters:
        - id: selectedVideoBackground
          type: <xref uid="@azure/communication-react.VideoBackgroundEffect" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.updateSelectedVideoBackgroundEffect](xref:@azure/communication-react.CallAdapterCallOperations.updateSelectedVideoBackgroundEffect)
methods:
  - name: joinCall(boolean)
    uid: '@azure/communication-react.CallAdapterCallManagement.joinCall'
    package: '@azure/communication-react'
    summary: Join the call with microphone initially on/off.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use joinCall(options?:JoinCallOptions) instead.
    syntax:
      content: 'function joinCall(microphoneOn?: boolean): undefined | Call'
      parameters:
        - id: microphoneOn
          type: boolean
          description: Whether microphone is initially enabled
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
  - name: joinCall(JoinCallOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.joinCall_1'
    package: '@azure/communication-react'
    summary: >-
      Join the call with options bag to set microphone/camera initial state when
      joining call

      true = turn on the device when joining call

      false = turn off the device when joining call

      'keep'/undefined = retain devices' precall state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function joinCall(options?: JoinCallOptions): undefined | Call'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.JoinCallOptions" />
          description: param to set microphone/camera initially on/off/use precall state.
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
  - name: startCall(CommunicationIdentifier[], StartCallOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.startCall_1'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: CommunicationIdentifier[], options?:
        StartCallOptions): undefined | Call
      parameters:
        - id: participants
          type: <xref uid="@azure/communication-common.CommunicationIdentifier" />[]
          description: >-
            An array of
            <xref:%40azure%2Fcommunication-common%23CommunicationIdentifier> to
            be called
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
  - name: startCall(string[], StartCallOptions)
    uid: '@azure/communication-react.CallAdapterCallManagement.startCall'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: string[], options?: StartCallOptions):
        undefined | Call
      parameters:
        - id: participants
          type: string[]
          description: An array of participant ids to join
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
extends: <xref uid="@azure/communication-react.CallAdapterCallOperations" />
