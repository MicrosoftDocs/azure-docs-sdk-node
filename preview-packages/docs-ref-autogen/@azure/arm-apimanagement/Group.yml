### YamlMime:TSType
name: Group
uid: '@azure/arm-apimanagement.Group'
package: '@azure/arm-apimanagement'
summary: Interface representing a Group.
fullName: Group
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, GroupCreateParameters,
      GroupCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Group.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        groupId: string, parameters: GroupCreateParameters, options?:
        GroupCreateOrUpdateOptionalParams): Promise<GroupCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupCreateParameters" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GroupCreateOrUpdateResponse" />&gt;
  - name: delete(string, string, string, string, GroupDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.Group.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes specific group of the API Management service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, groupId:
        string, ifMatch: string, options?: GroupDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.GroupDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, GroupGetOptionalParams)
    uid: '@azure/arm-apimanagement.Group.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the group specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, groupId:
        string, options?: GroupGetOptionalParams): Promise<GroupGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.GroupGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.GroupGetResponse"
          />&gt;
  - name: getEntityTag(string, string, string, GroupGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.Group.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the group specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        groupId: string, options?: GroupGetEntityTagOptionalParams):
        Promise<GroupGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.GroupGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GroupGetEntityTagHeaders" />&gt;
  - name: listByService(string, string, GroupListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Group.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of groups defined within a service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: GroupListByServiceOptionalParams):
        PagedAsyncIterableIterator<GroupContract, GroupContract[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupListByServiceOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.GroupContract" />, <xref
          uid="@azure/arm-apimanagement.GroupContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, string, GroupUpdateParameters,
      GroupUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Group.update'
    package: '@azure/arm-apimanagement'
    summary: Updates the details of the group specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, groupId:
        string, ifMatch: string, parameters: GroupUpdateParameters, options?:
        GroupUpdateOptionalParams): Promise<GroupUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.GroupUpdateParameters" />
          description: Update parameters.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.GroupUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.GroupUpdateResponse"
          />&gt;
