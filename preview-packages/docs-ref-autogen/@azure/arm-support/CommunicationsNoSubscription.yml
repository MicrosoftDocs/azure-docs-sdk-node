### YamlMime:TSType
name: CommunicationsNoSubscription
uid: '@azure/arm-support.CommunicationsNoSubscription'
package: '@azure/arm-support'
summary: Interface representing a CommunicationsNoSubscription.
fullName: CommunicationsNoSubscription
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, CommunicationDetails,
      CommunicationsNoSubscriptionCreateOptionalParams)
    uid: '@azure/arm-support.CommunicationsNoSubscription.beginCreate'
    package: '@azure/arm-support'
    summary: Adds a new customer communication to an Azure support ticket.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(supportTicketName: string, communicationName:
        string, createCommunicationParameters: CommunicationDetails, options?:
        CommunicationsNoSubscriptionCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<CommunicationDetails>,
        CommunicationDetails>>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: communicationName
          type: string
          description: Communication name.
        - id: createCommunicationParameters
          type: <xref uid="@azure/arm-support.CommunicationDetails" />
          description: Communication object.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.CommunicationsNoSubscriptionCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-support.CommunicationDetails" />&gt;, <xref
          uid="@azure/arm-support.CommunicationDetails" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, CommunicationDetails,
      CommunicationsNoSubscriptionCreateOptionalParams)
    uid: '@azure/arm-support.CommunicationsNoSubscription.beginCreateAndWait'
    package: '@azure/arm-support'
    summary: Adds a new customer communication to an Azure support ticket.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(supportTicketName: string,
        communicationName: string, createCommunicationParameters:
        CommunicationDetails, options?:
        CommunicationsNoSubscriptionCreateOptionalParams):
        Promise<CommunicationDetails>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: communicationName
          type: string
          description: Communication name.
        - id: createCommunicationParameters
          type: <xref uid="@azure/arm-support.CommunicationDetails" />
          description: Communication object.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.CommunicationsNoSubscriptionCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-support.CommunicationDetails" />&gt;
  - name: >-
      checkNameAvailability(string, CheckNameAvailabilityInput,
      CommunicationsNoSubscriptionCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-support.CommunicationsNoSubscription.checkNameAvailability'
    package: '@azure/arm-support'
    summary: >-
      Check the availability of a resource name. This API should be used to
      check the uniqueness of the

      name for adding a new communication to the support ticket.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(supportTicketName: string,
        checkNameAvailabilityInput: CheckNameAvailabilityInput, options?:
        CommunicationsNoSubscriptionCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityOutput>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: checkNameAvailabilityInput
          type: <xref uid="@azure/arm-support.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.CommunicationsNoSubscriptionCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-support.CheckNameAvailabilityOutput"
          />&gt;
  - name: get(string, string, CommunicationsNoSubscriptionGetOptionalParams)
    uid: '@azure/arm-support.CommunicationsNoSubscription.get'
    package: '@azure/arm-support'
    summary: Returns communication details for a support ticket.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(supportTicketName: string, communicationName: string,
        options?: CommunicationsNoSubscriptionGetOptionalParams):
        Promise<CommunicationDetails>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: communicationName
          type: string
          description: Communication name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.CommunicationsNoSubscriptionGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-support.CommunicationDetails" />&gt;
  - name: list(string, CommunicationsNoSubscriptionListOptionalParams)
    uid: '@azure/arm-support.CommunicationsNoSubscription.list'
    package: '@azure/arm-support'
    summary: >-
      Lists all communications (attachments not included) for a support ticket.
      <br/></br> You can also

      filter support ticket communications by _CreatedDate_ or
      _CommunicationType_ using the $filter

      parameter. The only type of communication supported today is _Web_. Output
      will be a paged result

      with _nextLink_, using which you can retrieve the next set of
      Communication results.

      <br/><br/>Support ticket data is available for 18 months after ticket
      creation. If a ticket was

      created more than 18 months ago, a request for data might cause an error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(supportTicketName: string, options?:
        CommunicationsNoSubscriptionListOptionalParams):
        PagedAsyncIterableIterator<CommunicationDetails, CommunicationDetails[],
        PageSettings>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.CommunicationsNoSubscriptionListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-support.CommunicationDetails" />, <xref
          uid="@azure/arm-support.CommunicationDetails" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
