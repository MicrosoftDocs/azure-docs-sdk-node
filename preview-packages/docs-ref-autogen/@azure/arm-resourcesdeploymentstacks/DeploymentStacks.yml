### YamlMime:TSType
name: DeploymentStacks
uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks'
package: '@azure/arm-resourcesdeploymentstacks'
summary: Interface representing a DeploymentStacks.
fullName: DeploymentStacks
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdateAtManagementGroup(string, string, DeploymentStack,
      DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtManagementGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Management Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtManagementGroup(managementGroupId: string,
        deploymentStackName: string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStack>,
        DeploymentStack>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;,
          <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAtManagementGroupAndWait(string, string,
      DeploymentStack,
      DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtManagementGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Management Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtManagementGroupAndWait(managementGroupId:
        string, deploymentStackName: string, deploymentStack: DeploymentStack,
        options?:
        DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: >-
      beginCreateOrUpdateAtResourceGroup(string, string, DeploymentStack,
      DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtResourceGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Resource Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtResourceGroup(resourceGroupName: string,
        deploymentStackName: string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStack>,
        DeploymentStack>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;,
          <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAtResourceGroupAndWait(string, string, DeploymentStack,
      DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtResourceGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Resource Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtResourceGroupAndWait(resourceGroupName:
        string, deploymentStackName: string, deploymentStack: DeploymentStack,
        options?: DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: >-
      beginCreateOrUpdateAtSubscription(string, DeploymentStack,
      DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtSubscription
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Subscription scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtSubscription(deploymentStackName: string,
        deploymentStack: DeploymentStack, options?:
        DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStack>,
        DeploymentStack>>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;,
          <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAtSubscriptionAndWait(string, DeploymentStack,
      DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginCreateOrUpdateAtSubscriptionAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Creates or updates a Deployment stack at Subscription scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAtSubscriptionAndWait(deploymentStackName:
        string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack supplied to the operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksCreateOrUpdateAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: >-
      beginDeleteAtManagementGroup(string, string,
      DeploymentStacksDeleteAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtManagementGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Management Group scope. When
      operation completes, status code

      200 returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtManagementGroup(managementGroupId: string,
        deploymentStackName: string, options?:
        DeploymentStacksDeleteAtManagementGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAtManagementGroupAndWait(string, string,
      DeploymentStacksDeleteAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtManagementGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Management Group scope. When
      operation completes, status code

      200 returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtManagementGroupAndWait(managementGroupId: string,
        deploymentStackName: string, options?:
        DeploymentStacksDeleteAtManagementGroupOptionalParams): Promise<void>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteAtResourceGroup(string, string,
      DeploymentStacksDeleteAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtResourceGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Resource Group scope. When operation
      completes, status code

      200 returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtResourceGroup(resourceGroupName: string,
        deploymentStackName: string, options?:
        DeploymentStacksDeleteAtResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAtResourceGroupAndWait(string, string,
      DeploymentStacksDeleteAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtResourceGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Resource Group scope. When operation
      completes, status code

      200 returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtResourceGroupAndWait(resourceGroupName: string,
        deploymentStackName: string, options?:
        DeploymentStacksDeleteAtResourceGroupOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteAtSubscription(string,
      DeploymentStacksDeleteAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtSubscription
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Subscription scope. When operation
      completes, status code 200

      returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtSubscription(deploymentStackName: string,
        options?: DeploymentStacksDeleteAtSubscriptionOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAtSubscriptionAndWait(string,
      DeploymentStacksDeleteAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginDeleteAtSubscriptionAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Deletes a Deployment stack by name at Subscription scope. When operation
      completes, status code 200

      returned without content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAtSubscriptionAndWait(deploymentStackName: string,
        options?: DeploymentStacksDeleteAtSubscriptionOptionalParams):
        Promise<void>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksDeleteAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginValidateStackAtManagementGroup(string, string, DeploymentStack,
      DeploymentStacksValidateStackAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtManagementGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Management Group scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtManagementGroup(managementGroupId: string,
        deploymentStackName: string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksValidateStackAtManagementGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStackValidateResult>,
        DeploymentStackValidateResult>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;&gt;
  - name: >-
      beginValidateStackAtManagementGroupAndWait(string, string,
      DeploymentStack,
      DeploymentStacksValidateStackAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtManagementGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Management Group scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtManagementGroupAndWait(managementGroupId:
        string, deploymentStackName: string, deploymentStack: DeploymentStack,
        options?: DeploymentStacksValidateStackAtManagementGroupOptionalParams):
        Promise<DeploymentStackValidateResult>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;
  - name: >-
      beginValidateStackAtResourceGroup(string, string, DeploymentStack,
      DeploymentStacksValidateStackAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtResourceGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Resource Group scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtResourceGroup(resourceGroupName: string,
        deploymentStackName: string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksValidateStackAtResourceGroupOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStackValidateResult>,
        DeploymentStackValidateResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;&gt;
  - name: >-
      beginValidateStackAtResourceGroupAndWait(string, string, DeploymentStack,
      DeploymentStacksValidateStackAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtResourceGroupAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Resource Group scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtResourceGroupAndWait(resourceGroupName:
        string, deploymentStackName: string, deploymentStack: DeploymentStack,
        options?: DeploymentStacksValidateStackAtResourceGroupOptionalParams):
        Promise<DeploymentStackValidateResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;
  - name: >-
      beginValidateStackAtSubscription(string, DeploymentStack,
      DeploymentStacksValidateStackAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtSubscription
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Subscription scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtSubscription(deploymentStackName: string,
        deploymentStack: DeploymentStack, options?:
        DeploymentStacksValidateStackAtSubscriptionOptionalParams):
        Promise<SimplePollerLike<OperationState<DeploymentStackValidateResult>,
        DeploymentStackValidateResult>>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;&gt;
  - name: >-
      beginValidateStackAtSubscriptionAndWait(string, DeploymentStack,
      DeploymentStacksValidateStackAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.beginValidateStackAtSubscriptionAndWait
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Runs preflight validation on the Subscription scoped Deployment stack
      template to verify its

      acceptance to Azure Resource Manager.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginValidateStackAtSubscriptionAndWait(deploymentStackName:
        string, deploymentStack: DeploymentStack, options?:
        DeploymentStacksValidateStackAtSubscriptionOptionalParams):
        Promise<DeploymentStackValidateResult>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: deploymentStack
          type: <xref uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />
          description: Deployment stack to validate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksValidateStackAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackValidateResult"
          />&gt;
  - name: >-
      exportTemplateAtManagementGroup(string, string,
      DeploymentStacksExportTemplateAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.exportTemplateAtManagementGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Exports the template used to create the Deployment stack at Management
      Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function exportTemplateAtManagementGroup(managementGroupId: string,
        deploymentStackName: string, options?:
        DeploymentStacksExportTemplateAtManagementGroupOptionalParams):
        Promise<DeploymentStackTemplateDefinition>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksExportTemplateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackTemplateDefinition"
          />&gt;
  - name: >-
      exportTemplateAtResourceGroup(string, string,
      DeploymentStacksExportTemplateAtResourceGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.exportTemplateAtResourceGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Exports the template used to create the Deployment stack at Resource Group
      scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function exportTemplateAtResourceGroup(resourceGroupName: string,
        deploymentStackName: string, options?:
        DeploymentStacksExportTemplateAtResourceGroupOptionalParams):
        Promise<DeploymentStackTemplateDefinition>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksExportTemplateAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackTemplateDefinition"
          />&gt;
  - name: >-
      exportTemplateAtSubscription(string,
      DeploymentStacksExportTemplateAtSubscriptionOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.exportTemplateAtSubscription
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: >-
      Exports the template used to create the Deployment stack at Subscription
      scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function exportTemplateAtSubscription(deploymentStackName: string,
        options?: DeploymentStacksExportTemplateAtSubscriptionOptionalParams):
        Promise<DeploymentStackTemplateDefinition>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksExportTemplateAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStackTemplateDefinition"
          />&gt;
  - name: >-
      getAtManagementGroup(string, string,
      DeploymentStacksGetAtManagementGroupOptionalParams)
    uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks.getAtManagementGroup'
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Gets a Deployment stack with a given name at Management Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        deploymentStackName: string, options?:
        DeploymentStacksGetAtManagementGroupOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksGetAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: >-
      getAtResourceGroup(string, string,
      DeploymentStacksGetAtResourceGroupOptionalParams)
    uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks.getAtResourceGroup'
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Gets a Deployment stack with a given name at Resource Group scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtResourceGroup(resourceGroupName: string,
        deploymentStackName: string, options?:
        DeploymentStacksGetAtResourceGroupOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksGetAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: getAtSubscription(string, DeploymentStacksGetAtSubscriptionOptionalParams)
    uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks.getAtSubscription'
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Gets a Deployment stack with a given name at Subscription scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtSubscription(deploymentStackName: string, options?:
        DeploymentStacksGetAtSubscriptionOptionalParams):
        Promise<DeploymentStack>
      parameters:
        - id: deploymentStackName
          type: string
          description: Name of the deployment stack.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksGetAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />&gt;
  - name: >-
      listAtManagementGroup(string,
      DeploymentStacksListAtManagementGroupOptionalParams)
    uid: >-
      @azure/arm-resourcesdeploymentstacks.DeploymentStacks.listAtManagementGroup
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Lists all the Deployment stacks within the specified Management Group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAtManagementGroup(managementGroupId: string, options?:
        DeploymentStacksListAtManagementGroupOptionalParams):
        PagedAsyncIterableIterator<DeploymentStack, DeploymentStack[],
        PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group id.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksListAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listAtResourceGroup(string,
      DeploymentStacksListAtResourceGroupOptionalParams)
    uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks.listAtResourceGroup'
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Lists all the Deployment stacks within the specified Resource Group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAtResourceGroup(resourceGroupName: string, options?:
        DeploymentStacksListAtResourceGroupOptionalParams):
        PagedAsyncIterableIterator<DeploymentStack, DeploymentStack[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksListAtResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAtSubscription(DeploymentStacksListAtSubscriptionOptionalParams)
    uid: '@azure/arm-resourcesdeploymentstacks.DeploymentStacks.listAtSubscription'
    package: '@azure/arm-resourcesdeploymentstacks'
    summary: Lists all the Deployment stacks within the specified Subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAtSubscription(options?:
        DeploymentStacksListAtSubscriptionOptionalParams):
        PagedAsyncIterableIterator<DeploymentStack, DeploymentStack[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcesdeploymentstacks.DeploymentStacksListAtSubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />, <xref
          uid="@azure/arm-resourcesdeploymentstacks.DeploymentStack" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
