### YamlMime:TSType
name: AgentPool
uid: '@azure/arm-containerservice.AgentPool'
package: '@azure/arm-containerservice'
summary: Agent Pool.
fullName: AgentPool
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: artifactStreamingProfile
    uid: '@azure/arm-containerservice.AgentPool.artifactStreamingProfile'
    package: '@azure/arm-containerservice'
    summary: Configuration for using artifact streaming on AKS.
    fullName: artifactStreamingProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'artifactStreamingProfile?: AgentPoolArtifactStreamingProfile'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/arm-containerservice.AgentPoolArtifactStreamingProfile" />
  - name: availabilityZones
    uid: '@azure/arm-containerservice.AgentPool.availabilityZones'
    package: '@azure/arm-containerservice'
    summary: >-
      The list of Availability zones to use for nodes. This can only be
      specified if the AgentPoolType property is 'VirtualMachineScaleSets'.
    fullName: availabilityZones
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'availabilityZones?: string[]'
      return:
        description: ''
        type: string[]
  - name: capacityReservationGroupID
    uid: '@azure/arm-containerservice.AgentPool.capacityReservationGroupID'
    package: '@azure/arm-containerservice'
    summary: >-
      AKS will associate the specified agent pool with the Capacity Reservation
      Group.
    fullName: capacityReservationGroupID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'capacityReservationGroupID?: string'
      return:
        description: ''
        type: string
  - name: count
    uid: '@azure/arm-containerservice.AgentPool.count'
    package: '@azure/arm-containerservice'
    summary: >-
      Number of agents (VMs) to host docker containers. Allowed values must be
      in the range of 0 to 1000 (inclusive) for user pools and in the range of 1
      to 1000 (inclusive) for system pools. The default value is 1.
    fullName: count
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'count?: number'
      return:
        description: ''
        type: number
  - name: creationData
    uid: '@azure/arm-containerservice.AgentPool.creationData'
    package: '@azure/arm-containerservice'
    summary: >-
      CreationData to be used to specify the source Snapshot ID if the node pool
      will be created/upgraded using a snapshot.
    fullName: creationData
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'creationData?: CreationData'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.CreationData" />
  - name: currentOrchestratorVersion
    uid: '@azure/arm-containerservice.AgentPool.currentOrchestratorVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      If orchestratorVersion was a fully specified version <major.minor.patch>,
      this field will be exactly equal to it. If orchestratorVersion was
      <major.minor>, this field will contain the full <major.minor.patch>
      version being used.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: currentOrchestratorVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'currentOrchestratorVersion?: string'
      return:
        description: ''
        type: string
  - name: enableAutoScaling
    uid: '@azure/arm-containerservice.AgentPool.enableAutoScaling'
    package: '@azure/arm-containerservice'
    summary: Whether to enable auto-scaler
    fullName: enableAutoScaling
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableAutoScaling?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableCustomCATrust
    uid: '@azure/arm-containerservice.AgentPool.enableCustomCATrust'
    package: '@azure/arm-containerservice'
    summary: >-
      When set to true, AKS adds a label to the node indicating that the feature
      is enabled and deploys a daemonset along with host services to sync custom
      certificate authorities from user-provided list of base64 encoded
      certificates into node trust stores. Defaults to false.
    fullName: enableCustomCATrust
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableCustomCATrust?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableEncryptionAtHost
    uid: '@azure/arm-containerservice.AgentPool.enableEncryptionAtHost'
    package: '@azure/arm-containerservice'
    summary: >-
      This is only supported on certain VM sizes and in certain Azure regions.
      For more information, see:
      https://docs.microsoft.com/azure/aks/enable-host-encryption
    fullName: enableEncryptionAtHost
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableEncryptionAtHost?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableFips
    uid: '@azure/arm-containerservice.AgentPool.enableFips'
    package: '@azure/arm-containerservice'
    summary: >-
      See [Add a FIPS-enabled node
      pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview)
      for more details.
    fullName: enableFips
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableFips?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableNodePublicIP
    uid: '@azure/arm-containerservice.AgentPool.enableNodePublicIP'
    package: '@azure/arm-containerservice'
    summary: >-
      Some scenarios may require nodes in a node pool to receive their own
      dedicated public IP addresses. A common scenario is for gaming workloads,
      where a console needs to make a direct connection to a cloud virtual
      machine to minimize hops. For more information see [assigning a public IP
      per
      node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools).
      The default is false.
    fullName: enableNodePublicIP
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableNodePublicIP?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableUltraSSD
    uid: '@azure/arm-containerservice.AgentPool.enableUltraSSD'
    package: '@azure/arm-containerservice'
    summary: Whether to enable UltraSSD
    fullName: enableUltraSSD
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableUltraSSD?: boolean'
      return:
        description: ''
        type: boolean
  - name: eTag
    uid: '@azure/arm-containerservice.AgentPool.eTag'
    package: '@azure/arm-containerservice'
    summary: >-
      Unique read-only string used to implement optimistic concurrency. The eTag
      value will change when the resource is updated. Specify an if-match or
      if-none-match header with the eTag value for a subsequent request to
      enable optimistic concurrency per the normal etag convention.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: eTag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'eTag?: string'
      return:
        description: ''
        type: string
  - name: gatewayProfile
    uid: '@azure/arm-containerservice.AgentPool.gatewayProfile'
    package: '@azure/arm-containerservice'
    summary: >-
      Profile specific to a managed agent pool in Gateway mode. This field
      cannot be set if agent pool mode is not Gateway.
    fullName: gatewayProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'gatewayProfile?: AgentPoolGatewayProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolGatewayProfile" />
  - name: gpuInstanceProfile
    uid: '@azure/arm-containerservice.AgentPool.gpuInstanceProfile'
    package: '@azure/arm-containerservice'
    summary: >-
      GPUInstanceProfile to be used to specify GPU MIG instance profile for
      supported GPU VM SKU.
    fullName: gpuInstanceProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'gpuInstanceProfile?: string'
      return:
        description: ''
        type: string
  - name: gpuProfile
    uid: '@azure/arm-containerservice.AgentPool.gpuProfile'
    package: '@azure/arm-containerservice'
    summary: The GPU settings of an agent pool.
    fullName: gpuProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'gpuProfile?: GPUProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.GPUProfile" />
  - name: hostGroupID
    uid: '@azure/arm-containerservice.AgentPool.hostGroupID'
    package: '@azure/arm-containerservice'
    summary: >-
      This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
      For more information see [Azure dedicated
      hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
    fullName: hostGroupID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hostGroupID?: string'
      return:
        description: ''
        type: string
  - name: kubeletConfig
    uid: '@azure/arm-containerservice.AgentPool.kubeletConfig'
    package: '@azure/arm-containerservice'
    summary: The Kubelet configuration on the agent pool nodes.
    fullName: kubeletConfig
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'kubeletConfig?: KubeletConfig'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.KubeletConfig" />
  - name: kubeletDiskType
    uid: '@azure/arm-containerservice.AgentPool.kubeletDiskType'
    package: '@azure/arm-containerservice'
    summary: >-
      Determines the placement of emptyDir volumes, container runtime data root,
      and Kubelet ephemeral storage.
    fullName: kubeletDiskType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'kubeletDiskType?: string'
      return:
        description: ''
        type: string
  - name: linuxOSConfig
    uid: '@azure/arm-containerservice.AgentPool.linuxOSConfig'
    package: '@azure/arm-containerservice'
    summary: The OS configuration of Linux agent nodes.
    fullName: linuxOSConfig
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'linuxOSConfig?: LinuxOSConfig'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.LinuxOSConfig" />
  - name: localDNSProfile
    uid: '@azure/arm-containerservice.AgentPool.localDNSProfile'
    package: '@azure/arm-containerservice'
    summary: >-
      Configures the per-node local DNS, with VnetDNS and KubeDNS overrides.
      LocalDNS helps improve performance and reliability of DNS resolution in an
      AKS cluster. For more details see aka.ms/aks/localdns.
    fullName: localDNSProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'localDNSProfile?: LocalDNSProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.LocalDNSProfile" />
  - name: maxCount
    uid: '@azure/arm-containerservice.AgentPool.maxCount'
    package: '@azure/arm-containerservice'
    summary: The maximum number of nodes for auto-scaling
    fullName: maxCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxCount?: number'
      return:
        description: ''
        type: number
  - name: maxPods
    uid: '@azure/arm-containerservice.AgentPool.maxPods'
    package: '@azure/arm-containerservice'
    summary: The maximum number of pods that can run on a node.
    fullName: maxPods
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxPods?: number'
      return:
        description: ''
        type: number
  - name: messageOfTheDay
    uid: '@azure/arm-containerservice.AgentPool.messageOfTheDay'
    package: '@azure/arm-containerservice'
    summary: >-
      A base64-encoded string which will be written to /etc/motd after decoding.
      This allows customization of the message of the day for Linux nodes. It
      must not be specified for Windows nodes. It must be a static string (i.e.,
      will be printed raw and not be executed as a script).
    fullName: messageOfTheDay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageOfTheDay?: string'
      return:
        description: ''
        type: string
  - name: minCount
    uid: '@azure/arm-containerservice.AgentPool.minCount'
    package: '@azure/arm-containerservice'
    summary: The minimum number of nodes for auto-scaling
    fullName: minCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'minCount?: number'
      return:
        description: ''
        type: number
  - name: mode
    uid: '@azure/arm-containerservice.AgentPool.mode'
    package: '@azure/arm-containerservice'
    summary: >-
      A cluster must have at least one 'System' Agent Pool at all times. For
      additional information on agent pool restrictions and best practices, see:
      https://docs.microsoft.com/azure/aks/use-system-pools
    fullName: mode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'mode?: string'
      return:
        description: ''
        type: string
  - name: networkProfile
    uid: '@azure/arm-containerservice.AgentPool.networkProfile'
    package: '@azure/arm-containerservice'
    summary: Network-related settings of an agent pool.
    fullName: networkProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'networkProfile?: AgentPoolNetworkProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolNetworkProfile" />
  - name: nodeImageVersion
    uid: '@azure/arm-containerservice.AgentPool.nodeImageVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      The version of node image

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: nodeImageVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodeImageVersion?: string'
      return:
        description: ''
        type: string
  - name: nodeInitializationTaints
    uid: '@azure/arm-containerservice.AgentPool.nodeInitializationTaints'
    package: '@azure/arm-containerservice'
    summary: >-
      These taints will not be reconciled by AKS and can be removed with a
      kubectl call. This field can be modified after node pool is created, but
      nodes will not be recreated with new taints until another operation that
      requires recreation (e.g. node image upgrade) happens. These taints allow
      for required configuration to run before the node is ready to accept
      workloads, for example 'key1=value1:NoSchedule' that then can be removed
      with `kubectl taint nodes node1 key1=value1:NoSchedule-`
    fullName: nodeInitializationTaints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodeInitializationTaints?: string[]'
      return:
        description: ''
        type: string[]
  - name: nodeLabels
    uid: '@azure/arm-containerservice.AgentPool.nodeLabels'
    package: '@azure/arm-containerservice'
    summary: The node labels to be persisted across all nodes in agent pool.
    fullName: nodeLabels
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodeLabels?: {[propertyName: string]: string}'
      return:
        description: ''
        type: '{[propertyName: string]: string}'
  - name: nodePublicIPPrefixID
    uid: '@azure/arm-containerservice.AgentPool.nodePublicIPPrefixID'
    package: '@azure/arm-containerservice'
    summary: >-
      This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
    fullName: nodePublicIPPrefixID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodePublicIPPrefixID?: string'
      return:
        description: ''
        type: string
  - name: nodeTaints
    uid: '@azure/arm-containerservice.AgentPool.nodeTaints'
    package: '@azure/arm-containerservice'
    summary: >-
      The taints added to new nodes during node pool create and scale. For
      example, key=value:NoSchedule.
    fullName: nodeTaints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nodeTaints?: string[]'
      return:
        description: ''
        type: string[]
  - name: orchestratorVersion
    uid: '@azure/arm-containerservice.AgentPool.orchestratorVersion'
    package: '@azure/arm-containerservice'
    summary: >-
      Both patch version <major.minor.patch> and <major.minor> are supported.
      When <major.minor> is specified, the latest supported patch version is
      chosen automatically. Updating the agent pool with the same <major.minor>
      once it has been created will not trigger an upgrade, even if a newer
      patch version is available. As a best practice, you should upgrade all
      node pools in an AKS cluster to the same Kubernetes version. The node pool
      version must have the same major version as the control plane. The node
      pool minor version must be within two minor versions of the control plane
      version. The node pool version cannot be greater than the control plane
      version. For more information see [upgrading a node
      pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
    fullName: orchestratorVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'orchestratorVersion?: string'
      return:
        description: ''
        type: string
  - name: osDiskSizeGB
    uid: '@azure/arm-containerservice.AgentPool.osDiskSizeGB'
    package: '@azure/arm-containerservice'
    summary: >-
      OS Disk Size in GB to be used to specify the disk size for every machine
      in the master/agent pool. If you specify 0, it will apply the default
      osDisk size according to the vmSize specified.
    fullName: osDiskSizeGB
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'osDiskSizeGB?: number'
      return:
        description: ''
        type: number
  - name: osDiskType
    uid: '@azure/arm-containerservice.AgentPool.osDiskType'
    package: '@azure/arm-containerservice'
    summary: >-
      The default is 'Ephemeral' if the VM supports it and has a cache disk
      larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'.
      May not be changed after creation. For more information see [Ephemeral
      OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
    fullName: osDiskType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'osDiskType?: string'
      return:
        description: ''
        type: string
  - name: osSKU
    uid: '@azure/arm-containerservice.AgentPool.osSKU'
    package: '@azure/arm-containerservice'
    summary: >-
      Specifies the OS SKU used by the agent pool. If not specified, the default
      is Ubuntu if OSType=Linux or Windows2019 if OSType=Windows. And the
      default Windows OSSKU will be changed to Windows2022 after Windows2019 is
      deprecated.
    fullName: osSKU
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'osSKU?: string'
      return:
        description: ''
        type: string
  - name: osType
    uid: '@azure/arm-containerservice.AgentPool.osType'
    package: '@azure/arm-containerservice'
    summary: The operating system type. The default is Linux.
    fullName: osType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'osType?: string'
      return:
        description: ''
        type: string
  - name: podIPAllocationMode
    uid: '@azure/arm-containerservice.AgentPool.podIPAllocationMode'
    package: '@azure/arm-containerservice'
    summary: >-
      The IP allocation mode for pods in the agent pool. Must be used with
      podSubnetId. The default is 'DynamicIndividual'.
    fullName: podIPAllocationMode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'podIPAllocationMode?: string'
      return:
        description: ''
        type: string
  - name: podSubnetID
    uid: '@azure/arm-containerservice.AgentPool.podSubnetID'
    package: '@azure/arm-containerservice'
    summary: >-
      If omitted, pod IPs are statically assigned on the node subnet (see
      vnetSubnetID for more details). This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    fullName: podSubnetID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'podSubnetID?: string'
      return:
        description: ''
        type: string
  - name: powerState
    uid: '@azure/arm-containerservice.AgentPool.powerState'
    package: '@azure/arm-containerservice'
    summary: >-
      When an Agent Pool is first created it is initially Running. The Agent
      Pool can be stopped by setting this field to Stopped. A stopped Agent Pool
      stops all of its VMs and does not accrue billing charges. An Agent Pool
      can only be stopped if it is Running and provisioning state is Succeeded
    fullName: powerState
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'powerState?: PowerState'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.PowerState" />
  - name: provisioningState
    uid: '@azure/arm-containerservice.AgentPool.provisioningState'
    package: '@azure/arm-containerservice'
    summary: >-
      The current deployment or provisioning state.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: provisioningState
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'provisioningState?: string'
      return:
        description: ''
        type: string
  - name: proximityPlacementGroupID
    uid: '@azure/arm-containerservice.AgentPool.proximityPlacementGroupID'
    package: '@azure/arm-containerservice'
    summary: The ID for Proximity Placement Group.
    fullName: proximityPlacementGroupID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'proximityPlacementGroupID?: string'
      return:
        description: ''
        type: string
  - name: scaleDownMode
    uid: '@azure/arm-containerservice.AgentPool.scaleDownMode'
    package: '@azure/arm-containerservice'
    summary: >-
      This also effects the cluster autoscaler behavior. If not specified, it
      defaults to Delete.
    fullName: scaleDownMode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownMode?: string'
      return:
        description: ''
        type: string
  - name: scaleSetEvictionPolicy
    uid: '@azure/arm-containerservice.AgentPool.scaleSetEvictionPolicy'
    package: '@azure/arm-containerservice'
    summary: >-
      This cannot be specified unless the scaleSetPriority is 'Spot'. If not
      specified, the default is 'Delete'.
    fullName: scaleSetEvictionPolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleSetEvictionPolicy?: string'
      return:
        description: ''
        type: string
  - name: scaleSetPriority
    uid: '@azure/arm-containerservice.AgentPool.scaleSetPriority'
    package: '@azure/arm-containerservice'
    summary: >-
      The Virtual Machine Scale Set priority. If not specified, the default is
      'Regular'.
    fullName: scaleSetPriority
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleSetPriority?: string'
      return:
        description: ''
        type: string
  - name: securityProfile
    uid: '@azure/arm-containerservice.AgentPool.securityProfile'
    package: '@azure/arm-containerservice'
    summary: The security settings of an agent pool.
    fullName: securityProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'securityProfile?: AgentPoolSecurityProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolSecurityProfile" />
  - name: spotMaxPrice
    uid: '@azure/arm-containerservice.AgentPool.spotMaxPrice'
    package: '@azure/arm-containerservice'
    summary: >-
      Possible values are any decimal value greater than zero or -1 which
      indicates the willingness to pay any on-demand price. For more details on
      spot pricing, see [spot VMs
      pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
    fullName: spotMaxPrice
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'spotMaxPrice?: number'
      return:
        description: ''
        type: number
  - name: status
    uid: '@azure/arm-containerservice.AgentPool.status'
    package: '@azure/arm-containerservice'
    summary: Contains read-only information about the Agent Pool.
    fullName: status
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'status?: AgentPoolStatus'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolStatus" />
  - name: tags
    uid: '@azure/arm-containerservice.AgentPool.tags'
    package: '@azure/arm-containerservice'
    summary: The tags to be persisted on the agent pool virtual machine scale set.
    fullName: tags
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tags?: {[propertyName: string]: string}'
      return:
        description: ''
        type: '{[propertyName: string]: string}'
  - name: typePropertiesType
    uid: '@azure/arm-containerservice.AgentPool.typePropertiesType'
    package: '@azure/arm-containerservice'
    summary: The type of Agent Pool.
    fullName: typePropertiesType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'typePropertiesType?: string'
      return:
        description: ''
        type: string
  - name: upgradeSettings
    uid: '@azure/arm-containerservice.AgentPool.upgradeSettings'
    package: '@azure/arm-containerservice'
    summary: Settings for upgrading the agentpool
    fullName: upgradeSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'upgradeSettings?: AgentPoolUpgradeSettings'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolUpgradeSettings" />
  - name: virtualMachineNodesStatus
    uid: '@azure/arm-containerservice.AgentPool.virtualMachineNodesStatus'
    package: '@azure/arm-containerservice'
    summary: The status of nodes in a VirtualMachines agent pool.
    fullName: virtualMachineNodesStatus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'virtualMachineNodesStatus?: VirtualMachineNodes[]'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.VirtualMachineNodes" />[]
  - name: virtualMachinesProfile
    uid: '@azure/arm-containerservice.AgentPool.virtualMachinesProfile'
    package: '@azure/arm-containerservice'
    summary: Specifications on VirtualMachines agent pool.
    fullName: virtualMachinesProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'virtualMachinesProfile?: VirtualMachinesProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.VirtualMachinesProfile" />
  - name: vmSize
    uid: '@azure/arm-containerservice.AgentPool.vmSize'
    package: '@azure/arm-containerservice'
    summary: >-
      VM size availability varies by region. If a node contains insufficient
      compute resources (memory, cpu, etc) pods might fail to run correctly. For
      more details on restricted VM sizes, see:
      https://docs.microsoft.com/azure/aks/quotas-skus-regions
    fullName: vmSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vmSize?: string'
      return:
        description: ''
        type: string
  - name: vnetSubnetID
    uid: '@azure/arm-containerservice.AgentPool.vnetSubnetID'
    package: '@azure/arm-containerservice'
    summary: >-
      If this is not specified, a VNET and subnet will be generated and used. If
      no podSubnetID is specified, this applies to nodes and pods, otherwise it
      applies to just nodes. This is of the form:
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
    fullName: vnetSubnetID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vnetSubnetID?: string'
      return:
        description: ''
        type: string
  - name: windowsProfile
    uid: '@azure/arm-containerservice.AgentPool.windowsProfile'
    package: '@azure/arm-containerservice'
    summary: The Windows agent pool's specific profile.
    fullName: windowsProfile
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'windowsProfile?: AgentPoolWindowsProfile'
      return:
        description: ''
        type: <xref uid="@azure/arm-containerservice.AgentPoolWindowsProfile" />
  - name: workloadRuntime
    uid: '@azure/arm-containerservice.AgentPool.workloadRuntime'
    package: '@azure/arm-containerservice'
    summary: Determines the type of workload a node can run.
    fullName: workloadRuntime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'workloadRuntime?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: id
    uid: '@azure/arm-containerservice.AgentPool.id'
    package: '@azure/arm-containerservice'
    summary: >-
      Resource ID.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.id](xref:@azure/arm-containerservice.SubResource.id)
  - name: name
    uid: '@azure/arm-containerservice.AgentPool.name'
    package: '@azure/arm-containerservice'
    summary: >-
      The name of the resource that is unique within a resource group. This name
      can be used to access the resource.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.name](xref:@azure/arm-containerservice.SubResource.name)
  - name: type
    uid: '@azure/arm-containerservice.AgentPool.type'
    package: '@azure/arm-containerservice'
    summary: >-
      Resource type

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SubResource.type](xref:@azure/arm-containerservice.SubResource.type)
extends: <xref uid="@azure/arm-containerservice.SubResource" />
