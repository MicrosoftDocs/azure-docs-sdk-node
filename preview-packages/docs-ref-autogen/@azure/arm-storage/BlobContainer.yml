### YamlMime:TSType
name: BlobContainer
uid: '@azure/arm-storage.BlobContainer'
package: '@azure/arm-storage'
summary: >-
  Properties of the blob container, including Id, resource name, resource type,
  Etag.
fullName: BlobContainer
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: defaultEncryptionScope
    uid: '@azure/arm-storage.BlobContainer.defaultEncryptionScope'
    package: '@azure/arm-storage'
    summary: Default the container to use specified encryption scope for all writes.
    fullName: defaultEncryptionScope
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'defaultEncryptionScope?: string'
      return:
        description: ''
        type: string
  - name: deleted
    uid: '@azure/arm-storage.BlobContainer.deleted'
    package: '@azure/arm-storage'
    summary: >-
      Indicates whether the blob container was deleted.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: deleted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deleted?: boolean'
      return:
        description: ''
        type: boolean
  - name: deletedTime
    uid: '@azure/arm-storage.BlobContainer.deletedTime'
    package: '@azure/arm-storage'
    summary: >-
      Blob container deletion time.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: deletedTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deletedTime?: Date'
      return:
        description: ''
        type: Date
  - name: denyEncryptionScopeOverride
    uid: '@azure/arm-storage.BlobContainer.denyEncryptionScopeOverride'
    package: '@azure/arm-storage'
    summary: Block override of encryption scope from the container default.
    fullName: denyEncryptionScopeOverride
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'denyEncryptionScopeOverride?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableNfsV3AllSquash
    uid: '@azure/arm-storage.BlobContainer.enableNfsV3AllSquash'
    package: '@azure/arm-storage'
    summary: Enable NFSv3 all squash on blob container.
    fullName: enableNfsV3AllSquash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableNfsV3AllSquash?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableNfsV3RootSquash
    uid: '@azure/arm-storage.BlobContainer.enableNfsV3RootSquash'
    package: '@azure/arm-storage'
    summary: Enable NFSv3 root squash on blob container.
    fullName: enableNfsV3RootSquash
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableNfsV3RootSquash?: boolean'
      return:
        description: ''
        type: boolean
  - name: hasImmutabilityPolicy
    uid: '@azure/arm-storage.BlobContainer.hasImmutabilityPolicy'
    package: '@azure/arm-storage'
    summary: >-
      The hasImmutabilityPolicy public property is set to true by SRP if
      ImmutabilityPolicy has been created for this container. The
      hasImmutabilityPolicy public property is set to false by SRP if
      ImmutabilityPolicy has not been created for this container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: hasImmutabilityPolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hasImmutabilityPolicy?: boolean'
      return:
        description: ''
        type: boolean
  - name: hasLegalHold
    uid: '@azure/arm-storage.BlobContainer.hasLegalHold'
    package: '@azure/arm-storage'
    summary: >-
      The hasLegalHold public property is set to true by SRP if there are at
      least one existing tag. The hasLegalHold public property is set to false
      by SRP if all existing legal hold tags are cleared out. There can be a
      maximum of 1000 blob containers with hasLegalHold=true for a given
      account.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: hasLegalHold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hasLegalHold?: boolean'
      return:
        description: ''
        type: boolean
  - name: immutabilityPolicy
    uid: '@azure/arm-storage.BlobContainer.immutabilityPolicy'
    package: '@azure/arm-storage'
    summary: >-
      The ImmutabilityPolicy property of the container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: immutabilityPolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.ImmutabilityPolicyProperties" />
  - name: immutableStorageWithVersioning
    uid: '@azure/arm-storage.BlobContainer.immutableStorageWithVersioning'
    package: '@azure/arm-storage'
    summary: >-
      The object level immutability property of the container. The property is
      immutable and can only be set to true at the container creation time.
      Existing containers must undergo a migration process.
    fullName: immutableStorageWithVersioning
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'immutableStorageWithVersioning?: ImmutableStorageWithVersioning'
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.ImmutableStorageWithVersioning" />
  - name: lastModifiedTime
    uid: '@azure/arm-storage.BlobContainer.lastModifiedTime'
    package: '@azure/arm-storage'
    summary: >-
      Returns the date and time the container was last modified.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: lastModifiedTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastModifiedTime?: Date'
      return:
        description: ''
        type: Date
  - name: leaseDuration
    uid: '@azure/arm-storage.BlobContainer.leaseDuration'
    package: '@azure/arm-storage'
    summary: >-
      Specifies whether the lease on a container is of infinite or fixed
      duration, only when the container is leased.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: leaseDuration
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseDuration?: string'
      return:
        description: ''
        type: string
  - name: leaseState
    uid: '@azure/arm-storage.BlobContainer.leaseState'
    package: '@azure/arm-storage'
    summary: >-
      Lease state of the container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: leaseState
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseState?: string'
      return:
        description: ''
        type: string
  - name: leaseStatus
    uid: '@azure/arm-storage.BlobContainer.leaseStatus'
    package: '@azure/arm-storage'
    summary: >-
      The lease status of the container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: leaseStatus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'leaseStatus?: string'
      return:
        description: ''
        type: string
  - name: legalHold
    uid: '@azure/arm-storage.BlobContainer.legalHold'
    package: '@azure/arm-storage'
    summary: >-
      The LegalHold property of the container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: legalHold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'legalHold?: LegalHoldProperties'
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.LegalHoldProperties" />
  - name: metadata
    uid: '@azure/arm-storage.BlobContainer.metadata'
    package: '@azure/arm-storage'
    summary: A name-value pair to associate with the container as metadata.
    fullName: metadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'metadata?: {[propertyName: string]: string}'
      return:
        description: ''
        type: '{[propertyName: string]: string}'
  - name: publicAccess
    uid: '@azure/arm-storage.BlobContainer.publicAccess'
    package: '@azure/arm-storage'
    summary: >-
      Specifies whether data in the container may be accessed publicly and the
      level of access.
    fullName: publicAccess
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'publicAccess?: PublicAccess'
      return:
        description: ''
        type: <xref uid="@azure/arm-storage.PublicAccess" />
  - name: remainingRetentionDays
    uid: '@azure/arm-storage.BlobContainer.remainingRetentionDays'
    package: '@azure/arm-storage'
    summary: >-
      Remaining retention days for soft deleted blob container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: remainingRetentionDays
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'remainingRetentionDays?: number'
      return:
        description: ''
        type: number
  - name: version
    uid: '@azure/arm-storage.BlobContainer.version'
    package: '@azure/arm-storage'
    summary: >-
      The version of the deleted blob container.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: version
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'version?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: etag
    uid: '@azure/arm-storage.BlobContainer.etag'
    package: '@azure/arm-storage'
    summary: >-
      Resource Etag.

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: etag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'etag?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AzureEntityResource.etag](xref:@azure/arm-storage.AzureEntityResource.etag)
  - name: id
    uid: '@azure/arm-storage.BlobContainer.id'
    package: '@azure/arm-storage'
    summary: >-
      Fully qualified resource ID for the resource. Ex -
      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AzureEntityResource.id](xref:@azure/arm-storage.AzureEntityResource.id)
  - name: name
    uid: '@azure/arm-storage.BlobContainer.name'
    package: '@azure/arm-storage'
    summary: >-
      The name of the resource

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AzureEntityResource.name](xref:@azure/arm-storage.AzureEntityResource.name)
  - name: type
    uid: '@azure/arm-storage.BlobContainer.type'
    package: '@azure/arm-storage'
    summary: >-
      The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or
      "Microsoft.Storage/storageAccounts"

      NOTE: This property will not be serialized. It can only be populated by
      the server.
    fullName: type
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'type?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AzureEntityResource.type](xref:@azure/arm-storage.AzureEntityResource.type)
extends: <xref uid="@azure/arm-storage.AzureEntityResource" />
