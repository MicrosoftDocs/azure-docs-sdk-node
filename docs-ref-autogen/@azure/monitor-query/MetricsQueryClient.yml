### YamlMime:TSType
name: MetricsQueryClient
uid: '@azure/monitor-query.MetricsQueryClient'
package: '@azure/monitor-query'
summary: >-
  A client that can query metrics, get metric definitions and get metric
  namespaces.
fullName: MetricsQueryClient
remarks: ''
isDeprecated: true
customDeprecatedMessage: >-
  For resource-centric metrics queries, use the management library
  `@azure/arm-monitor` instead.

  Migrate your code following the migration guide at
  https://github.com/Azure/azure-sdk-for-js/blob/main/sdk/monitor/arm-monitor/MIGRATION_METRICSQUERYCLIENT_TO_ARM_MONITOR.md
type: class
constructors:
  - name: MetricsQueryClient(TokenCredential, MetricsQueryClientOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.constructor'
    package: '@azure/monitor-query'
    summary: Creates a MetricsQueryClient.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new MetricsQueryClient(tokenCredential: TokenCredential, options?:
        MetricsQueryClientOptions)
      parameters:
        - id: tokenCredential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: A TokenCredential that has rights to query metrics on resources.
        - id: options
          type: <xref uid="@azure/monitor-query.MetricsClientOptions" />
          description: Options for the client like controlling request retries.
methods:
  - name: listMetricDefinitions(string, ListMetricDefinitionsOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.listMetricDefinitions'
    package: '@azure/monitor-query'
    summary: >-
      /**


      Returns an async iterable iterator to list metric definitions.


      Example using `for await` syntax:


      ```ts snippet:MetricQueryClientListMetricDefinitions

      import { DefaultAzureCredential } from "@azure/identity";

      import { MetricsQueryClient } from "@azure/monitor-query";


      const metricsResourceId = "<the Resource Id for your metrics resource>";


      const tokenCredential = new DefaultAzureCredential();

      const metricsQueryClient = new MetricsQueryClient(tokenCredential);


      const metricDefinitions =
      metricsQueryClient.listMetricDefinitions(metricsResourceId);

      for await (const { id, name } of metricDefinitions) {
        console.log(` metricDefinitions - ${id}, ${name}`);
      }

      ```


      Get a list of metric definitions, given a resource URI.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceUri: string, options?:
        ListMetricDefinitionsOptions):
        PagedAsyncIterableIterator<MetricDefinition, MetricDefinition[],
        PageSettings>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to get metric definitions for.
        - id: options
          type: <xref uid="@azure/monitor-query.ListMetricDefinitionsOptions" />
          description: Options for getting metric definitions.
      return:
        description: Metric definitions for a given resource URI.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/monitor-query.MetricDefinition" />, <xref
          uid="@azure/monitor-query.MetricDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listMetricNamespaces(string, ListMetricNamespacesOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.listMetricNamespaces'
    package: '@azure/monitor-query'
    summary: >-
      Returns an async iterable iterator to list metric namespaces.


      Example using `for await` syntax:


      ```ts snippet:MetricQueryClientListMetricNamespaces

      import { DefaultAzureCredential } from "@azure/identity";

      import { MetricsQueryClient } from "@azure/monitor-query";


      const metricsResourceId = "<the Resource Id for your metrics resource>";


      const tokenCredential = new DefaultAzureCredential();

      const metricsQueryClient = new MetricsQueryClient(tokenCredential);


      const metricNamespaces =
      metricsQueryClient.listMetricNamespaces(metricsResourceId);

      for await (const { id, name } of metricNamespaces) {
        console.log(` metricNamespaces - ${id}, ${name}`);
      }

      ```


      Get a list of metric namespaces, given a resource URI.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMetricNamespaces(resourceUri: string, options?:
        ListMetricNamespacesOptions):
        PagedAsyncIterableIterator<MetricNamespace, MetricNamespace[],
        PageSettings>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to get metric namespaces for.
        - id: options
          type: <xref uid="@azure/monitor-query.ListMetricNamespacesOptions" />
          description: Options for getting metric namespaces.
      return:
        description: Metric namespaces for a given resource URI.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/monitor-query.MetricNamespace" />, <xref
          uid="@azure/monitor-query.MetricNamespace" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: queryResource(string, string[], MetricsQueryOptions)
    uid: '@azure/monitor-query.MetricsQueryClient.queryResource'
    package: '@azure/monitor-query'
    summary: Query metrics, given a resource URI
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function queryResource(resourceUri: string, metricNames: string[],
        options?: MetricsQueryOptions): Promise<MetricsQueryResult>
      parameters:
        - id: resourceUri
          type: string
          description: The resource URI to query.
        - id: metricNames
          type: string[]
          description: The names of the metrics to retrieve.
        - id: options
          type: <xref uid="@azure/monitor-query.MetricsQueryOptions" />
          description: Options for querying metrics.
      return:
        description: A response containing metrics.
        type: Promise&lt;<xref uid="@azure/monitor-query.MetricsQueryResult" />&gt;
