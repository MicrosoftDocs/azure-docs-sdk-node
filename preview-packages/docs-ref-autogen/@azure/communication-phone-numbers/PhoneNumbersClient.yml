### YamlMime:TSType
name: PhoneNumbersClient
uid: '@azure/communication-phone-numbers.PhoneNumbersClient'
package: '@azure/communication-phone-numbers'
summary: >-
  Client class for interacting with Azure Communication Services Phone Number
  Administration.
fullName: PhoneNumbersClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: PhoneNumbersClient(string, KeyCredential, PhoneNumbersClientOptions)
    uid: '@azure/communication-phone-numbers.PhoneNumbersClient.constructor_1'
    package: '@azure/communication-phone-numbers'
    summary: >-
      Initializes a new instance of the PhoneNumberAdministrationClient class
      using an Azure KeyCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumbersClient(url: string, credential: KeyCredential, options?:
        PhoneNumbersClientOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (eg:
            https://contoso.eastus.communications.azure.net)
        - id: credential
          type: <xref uid="@azure/core-auth.KeyCredential" />
          description: >-
            An object that is used to authenticate requests to the service. Use
            the Azure KeyCredential or `@azure/identity` to create a credential.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.PhoneNumbersClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: PhoneNumbersClient(string, PhoneNumbersClientOptions)
    uid: '@azure/communication-phone-numbers.PhoneNumbersClient.constructor'
    package: '@azure/communication-phone-numbers'
    summary: >-
      Initializes a new instance of the PhoneNumberAdministrationClient class
      using a connection string.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumbersClient(connectionString: string, options?:
        PhoneNumbersClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Connection string to connect to an Azure Communication Service
            resource. (eg:
            endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret)
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.PhoneNumbersClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: PhoneNumbersClient(string, TokenCredential, PhoneNumbersClientOptions)
    uid: '@azure/communication-phone-numbers.PhoneNumbersClient.constructor_2'
    package: '@azure/communication-phone-numbers'
    summary: >-
      Initializes a new instance of the PhoneNumberAdministrationClient class
      using a TokenCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumbersClient(url: string, credential: TokenCredential,
        options?: PhoneNumbersClientOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            TokenCredential that is used to authenticate requests to the
            service.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.PhoneNumbersClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
methods:
  - name: beginPurchasePhoneNumbers(string, BeginPurchasePhoneNumbersOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.beginPurchasePhoneNumbers
    package: '@azure/communication-phone-numbers'
    summary: >-
      Starts the purchase of the phone number(s) in the search associated with a
      given id.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts snippet:PhoneNumbersClientPurchasePhoneNumbers

      import { DefaultAzureCredential } from "@azure/identity";

      import {
        PhoneNumbersClient,
        SearchAvailablePhoneNumbersRequest,
      } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      const searchRequest: SearchAvailablePhoneNumbersRequest = {
        countryCode: "US",
        phoneNumberType: "tollFree",
        assignmentType: "application",
        capabilities: {
          sms: "outbound",
          calling: "none",
        },
        quantity: 1,
      };


      const searchPoller = await
      client.beginSearchAvailablePhoneNumbers(searchRequest);


      // The search is underway. Wait to receive searchId.

      const { searchId, phoneNumbers } = await searchPoller.pollUntilDone();


      const purchasePoller = await client.beginPurchasePhoneNumbers(searchId);


      // Purchase is underway.

      await purchasePoller.pollUntilDone();

      console.log(`Successfully purchased ${phoneNumbers[0]}`);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurchasePhoneNumbers(searchId: string, options?:
        BeginPurchasePhoneNumbersOptions):
        Promise<PollerLike<PollOperationState<PurchasePhoneNumbersResult>,
        PurchasePhoneNumbersResult>>
      parameters:
        - id: searchId
          type: string
          description: >-
            The id of the search to purchase. Returned from
            `beginSearchAvailablePhoneNumbers`
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.BeginPurchasePhoneNumbersOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-phone-numbers.PurchasePhoneNumbersResult"
          />&gt;, <xref
          uid="@azure/communication-phone-numbers.PurchasePhoneNumbersResult"
          />&gt;&gt;
  - name: beginReleasePhoneNumber(string, BeginReleasePhoneNumberOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.beginReleasePhoneNumber
    package: '@azure/communication-phone-numbers'
    summary: >-
      Starts the release of a purchased phone number.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts snippet:PhoneNumbersClientReleasePhoneNumber

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      const phoneNumberToRelease = "<phone-number-to-release>";


      const releasePoller = await
      client.beginReleasePhoneNumber(phoneNumberToRelease);


      // Release is underway.

      await releasePoller.pollUntilDone();

      console.log("Successfully release phone number.");

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReleasePhoneNumber(phoneNumber: string, options?:
        BeginReleasePhoneNumberOptions):
        Promise<PollerLike<PollOperationState<ReleasePhoneNumberResult>,
        ReleasePhoneNumberResult>>
      parameters:
        - id: phoneNumber
          type: string
          description: >-
            The E.164 formatted phone number being released. The leading plus
            can be either + or encoded as %2B.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.BeginReleasePhoneNumberOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-phone-numbers.ReleasePhoneNumberResult"
          />&gt;, <xref
          uid="@azure/communication-phone-numbers.ReleasePhoneNumberResult"
          />&gt;&gt;
  - name: >-
      beginSearchAvailablePhoneNumbers(SearchAvailablePhoneNumbersRequest,
      BeginSearchAvailablePhoneNumbersOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.beginSearchAvailablePhoneNumbers
    package: '@azure/communication-phone-numbers'
    summary: >-
      Starts a search for phone numbers given some constraints such as name or
      area code.

      The phone numbers that are found are reserved until you cancel, purchase
      or the reservation expires.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts snippet:PhoneNumbersClientSearchAvailablePhoneNumbers

      import { DefaultAzureCredential } from "@azure/identity";

      import {
        PhoneNumbersClient,
        SearchAvailablePhoneNumbersRequest,
      } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      const searchRequest: SearchAvailablePhoneNumbersRequest = {
        countryCode: "US",
        phoneNumberType: "tollFree",
        assignmentType: "application",
        capabilities: {
          sms: "outbound",
          calling: "none",
        },
        quantity: 1,
      };


      const searchPoller = await
      client.beginSearchAvailablePhoneNumbers(searchRequest);


      // The search is underway. Wait to receive searchId.

      const searchResults = await searchPoller.pollUntilDone();

      console.log(`Found phone number: ${searchResults.phoneNumbers[0]}`);

      console.log(`searchId: ${searchResults.searchId}`);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSearchAvailablePhoneNumbers(search:
        SearchAvailablePhoneNumbersRequest, options?:
        BeginSearchAvailablePhoneNumbersOptions):
        Promise<PollerLike<PollOperationState<PhoneNumberSearchResult>,
        PhoneNumberSearchResult>>
      parameters:
        - id: search
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.SearchAvailablePhoneNumbersRequest"
            />
          description: Request properties to constraint the search scope.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.BeginSearchAvailablePhoneNumbersOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberSearchResult"
          />&gt;, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberSearchResult"
          />&gt;&gt;
  - name: >-
      beginUpdatePhoneNumberCapabilities(string, PhoneNumberCapabilitiesRequest,
      BeginUpdatePhoneNumberCapabilitiesOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.beginUpdatePhoneNumberCapabilities
    package: '@azure/communication-phone-numbers'
    summary: >-
      Starts the update of a purchased phone number's capabilities.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts snippet:PhoneNumbersClientUpdatePhoneNumberCapabilities

      import { DefaultAzureCredential } from "@azure/identity";

      import {
        PhoneNumbersClient,
        PhoneNumberCapabilitiesRequest,
      } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      const phoneNumberToUpdate = "<phone-number-to-update>";


      // This will update phone number to send and receive sms, but only send
      calls.

      const updateRequest: PhoneNumberCapabilitiesRequest = {
        sms: "inbound+outbound",
        calling: "outbound",
      };


      const updatePoller = await client.beginUpdatePhoneNumberCapabilities(
        phoneNumberToUpdate,
        updateRequest,
      );


      // Update is underway.

      const { capabilities } = await updatePoller.pollUntilDone();

      console.log(`These are the update capabilities: ${capabilities}`);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdatePhoneNumberCapabilities(phoneNumber: string,
        request: PhoneNumberCapabilitiesRequest, options?:
        BeginUpdatePhoneNumberCapabilitiesOptions):
        Promise<PollerLike<PollOperationState<PurchasedPhoneNumber>,
        PurchasedPhoneNumber>>
      parameters:
        - id: phoneNumber
          type: string
          description: >-
            The E.164 formatted phone number being updated. The leading plus can
            be either + or encoded as %2B.
        - id: request
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.PhoneNumberCapabilitiesRequest"
            />
          description: The updated properties which will be applied to the phone number.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.BeginUpdatePhoneNumberCapabilitiesOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-phone-numbers.PurchasedPhoneNumber" />&gt;,
          <xref uid="@azure/communication-phone-numbers.PurchasedPhoneNumber"
          />&gt;&gt;
  - name: getPurchasedPhoneNumber(string, OperationOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.getPurchasedPhoneNumber
    package: '@azure/communication-phone-numbers'
    summary: >-
      Gets the details of a purchased phone number. Includes phone number, cost,
      country code, etc.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPurchasedPhoneNumber(phoneNumber: string, options?:
        OperationOptions): Promise<PurchasedPhoneNumber>
      parameters:
        - id: phoneNumber
          type: string
          description: >-
            The E.164 formatted phone number being fetched. The leading plus can
            be either + or encoded as %2B.
        - id: options
          type: <xref uid="@azure/core-client.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-phone-numbers.PurchasedPhoneNumber" />&gt;
  - name: listAvailableCountries(ListAvailableCountriesOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listAvailableCountries
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the available countries.


      Example usage:

      ```ts snippet:PhoneNumbersClientListAvailableCountries

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      for await (const country of client.listAvailableCountries()) {
        console.log("country: ", country.localizedName);
      }

      ```

      List all available countries.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableCountries(options?:
        ListAvailableCountriesOptions):
        PagedAsyncIterableIterator<PhoneNumberCountry, PhoneNumberCountry[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.ListAvailableCountriesOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberCountry" />, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberCountry" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAvailableGeographicAreaCodes(string, ListGeographicAreaCodesOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listAvailableGeographicAreaCodes
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the available Geographic area codes.


      Example usage:

      ```ts snippet:PhoneNumbersClientListGeographicAreaCodes

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      for await (const areaCodeItem of
      client.listAvailableGeographicAreaCodes("US")) {
        console.log("area code: ", areaCodeItem.areaCode);
      }

      ```

      List all available Geographic area codes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableGeographicAreaCodes(countryCode: string, options?:
        ListGeographicAreaCodesOptions):
        PagedAsyncIterableIterator<PhoneNumberAreaCode, PhoneNumberAreaCode[],
        PageSettings>
      parameters:
        - id: countryCode
          type: string
          description: The ISO 3166-2 country code.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.ListGeographicAreaCodesOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberAreaCode" />, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberAreaCode" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAvailableLocalities(string, ListLocalitiesOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listAvailableLocalities
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the available localities.


      Example usage:

      ```ts snippet:PhoneNumbersClientListAvailableLocalities

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      for await (const locality of client.listAvailableLocalities("US")) {
        console.log("locality: ", locality.localizedName);
      }

      ```

      List all available localities.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableLocalities(countryCode: string, options?:
        ListLocalitiesOptions): PagedAsyncIterableIterator<PhoneNumberLocality,
        PhoneNumberLocality[], PageSettings>
      parameters:
        - id: countryCode
          type: string
          description: The ISO 3166-2 country code.
        - id: options
          type: >-
            <xref uid="@azure/communication-phone-numbers.ListLocalitiesOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberLocality" />, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberLocality" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAvailableOfferings(string, ListOfferingsOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listAvailableOfferings
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the available offerings.


      Example usage:

      ```ts snippet:PhoneNumbersClientListAvailableOfferings

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      for await (const offering of client.listAvailableOfferings("US")) {
        console.log("phone number type: ", offering.phoneNumberType);
        console.log("cost: ", offering.cost.amount);
      }

      ```

      List all available offerings.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableOfferings(countryCode: string, options?:
        ListOfferingsOptions): PagedAsyncIterableIterator<PhoneNumberOffering,
        PhoneNumberOffering[], PageSettings>
      parameters:
        - id: countryCode
          type: string
          description: The ISO 3166-2 country code.
        - id: options
          type: >-
            <xref uid="@azure/communication-phone-numbers.ListOfferingsOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberOffering" />, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberOffering" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAvailableTollFreeAreaCodes(string, ListTollFreeAreaCodesOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listAvailableTollFreeAreaCodes
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the available Toll-Free area codes.


      Example usage:

      ```ts snippet:PhoneNumbersClientListTollFreeAreaCodes

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      for await (const areaCodeItem of
      client.listAvailableTollFreeAreaCodes("US")) {
        console.log("area code: ", areaCodeItem.areaCode);
      }

      ```

      List all available Toll-Free area codes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableTollFreeAreaCodes(countryCode: string, options?:
        ListTollFreeAreaCodesOptions):
        PagedAsyncIterableIterator<PhoneNumberAreaCode, PhoneNumberAreaCode[],
        PageSettings>
      parameters:
        - id: countryCode
          type: string
          description: The ISO 3166-2 country code.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.ListTollFreeAreaCodesOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PhoneNumberAreaCode" />, <xref
          uid="@azure/communication-phone-numbers.PhoneNumberAreaCode" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listPurchasedPhoneNumbers(ListPurchasedPhoneNumbersOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.listPurchasedPhoneNumbers
    package: '@azure/communication-phone-numbers'
    summary: >-
      Iterates the purchased phone numbers.


      Example usage:

      ```ts snippet:PhoneNumbersClientListPurchasedPhoneNumbers

      import { DefaultAzureCredential } from "@azure/identity";

      import { PhoneNumbersClient } from "@azure/communication-phone-numbers";


      const credential = new DefaultAzureCredential();

      const client = new PhoneNumbersClient("<endpoint-from-resource>",
      credential);


      const phoneNumbers = client.listPurchasedPhoneNumbers();


      for await (const phoneNumber of phoneNumbers) {
        console.log(`The id is the same as the phone number: ${phoneNumber.id}`);
        console.log(`Phone number type is ${phoneNumber.phoneNumberType}`);
      }

      ```

      List all purchased phone numbers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPurchasedPhoneNumbers(options?:
        ListPurchasedPhoneNumbersOptions):
        PagedAsyncIterableIterator<PurchasedPhoneNumber, PurchasedPhoneNumber[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.ListPurchasedPhoneNumbersOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-phone-numbers.PurchasedPhoneNumber" />,
          <xref uid="@azure/communication-phone-numbers.PurchasedPhoneNumber"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: searchOperatorInformation(string[], SearchOperatorInformationOptions)
    uid: >-
      @azure/communication-phone-numbers.PhoneNumbersClient.searchOperatorInformation
    package: '@azure/communication-phone-numbers'
    summary: Search for operator information about specified phone numbers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function searchOperatorInformation(phoneNumbers: string[], options?:
        SearchOperatorInformationOptions): Promise<OperatorInformationResult>
      parameters:
        - id: phoneNumbers
          type: string[]
          description: The phone numbers to search.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-phone-numbers.SearchOperatorInformationOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-phone-numbers.OperatorInformationResult"
          />&gt;
