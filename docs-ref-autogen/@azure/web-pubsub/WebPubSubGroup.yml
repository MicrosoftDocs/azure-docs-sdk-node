### YamlMime:TSType
name: WebPubSubGroup
uid: '@azure/web-pubsub.WebPubSubGroup'
package: '@azure/web-pubsub'
summary: ''
fullName: WebPubSubGroup
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: apiVersion
    uid: '@azure/web-pubsub.WebPubSubGroup.apiVersion'
    package: '@azure/web-pubsub'
    summary: The Web PubSub API version being used by this client
    fullName: apiVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'apiVersion: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/web-pubsub.WebPubSubGroup.endpoint'
    package: '@azure/web-pubsub'
    summary: The Web PubSub endpoint this client is connected to
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
  - name: groupName
    uid: '@azure/web-pubsub.WebPubSubGroup.groupName'
    package: '@azure/web-pubsub'
    summary: The name of this group
    fullName: groupName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'groupName: string'
      return:
        description: ''
        type: string
  - name: hubName
    uid: '@azure/web-pubsub.WebPubSubGroup.hubName'
    package: '@azure/web-pubsub'
    summary: The name of the hub this group belongs to
    fullName: hubName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hubName: string'
      return:
        description: ''
        type: string
methods:
  - name: addConnection(string, GroupAddConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.addConnection'
    package: '@azure/web-pubsub'
    summary: Add a specific connection to this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addConnection(connectionId: string, options?:
        GroupAddConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to add to this group
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupAddConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: addUser(string, GroupAddUserOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.addUser'
    package: '@azure/web-pubsub'
    summary: Add a user to this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addUser(username: string, options?: GroupAddUserOptions):
        Promise<void>
      parameters:
        - id: username
          type: string
          description: The user name to add
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupAddUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: closeAllConnections(GroupCloseAllConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.closeAllConnections'
    package: '@azure/web-pubsub'
    summary: Close all connections to the group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function closeAllConnections(options?: GroupCloseAllConnectionsOptions):
        Promise<void>
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupCloseAllConnectionsOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: listConnections(GroupListConnectionsOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.listConnections'
    package: '@azure/web-pubsub'
    summary: List connections in this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listConnections(options?: GroupListConnectionsOptions):
        Promise<PagedAsyncIterableIterator<WebPubSubGroupMember,
        WebPubSubGroupMember[], PageSettings>>
      parameters:
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupListConnectionsOptions" />
          description: Additional options for listing connections
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-paging.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/web-pubsub.WebPubSubGroupMember" />, <xref
          uid="@azure/web-pubsub.WebPubSubGroupMember" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;&gt;
  - name: removeConnection(string, GroupRemoveConnectionOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.removeConnection'
    package: '@azure/web-pubsub'
    summary: Remove a specific connection from this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeConnection(connectionId: string, options?:
        GroupRemoveConnectionOptions): Promise<void>
      parameters:
        - id: connectionId
          type: string
          description: The connection id to remove from this group
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupRemoveConnectionOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: removeUser(string, GroupRemoveUserOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.removeUser'
    package: '@azure/web-pubsub'
    summary: Remove a user from this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeUser(username: string, options?: GroupRemoveUserOptions):
        Promise<void>
      parameters:
        - id: username
          type: string
          description: The user name to remove
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupRemoveUserOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(JSONTypes, GroupSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.sendToAll_1'
    package: '@azure/web-pubsub'
    summary: Send a json message to every connection in this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: JSONTypes, options?: GroupSendToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: <xref uid="@azure/web-pubsub.JSONTypes" />
          description: The message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupSendToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(RequestBodyType, GroupSendToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.sendToAll_2'
    package: '@azure/web-pubsub'
    summary: Send a binary message to every connection in this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: RequestBodyType, options?:
        GroupSendToAllOptions): Promise<void>
      parameters:
        - id: message
          type: <xref uid="@azure/core-rest-pipeline.RequestBodyType" />
          description: The binary message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupSendToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendToAll(string, GroupSendTextToAllOptions)
    uid: '@azure/web-pubsub.WebPubSubGroup.sendToAll'
    package: '@azure/web-pubsub'
    summary: Send a text message to every connection in this group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendToAll(message: string, options: GroupSendTextToAllOptions):
        Promise<void>
      parameters:
        - id: message
          type: string
          description: The message to send
        - id: options
          type: <xref uid="@azure/web-pubsub.GroupSendTextToAllOptions" />
          description: Additional options
      return:
        description: ''
        type: Promise&lt;void&gt;
