### YamlMime:TSType
name: ProductPolicy
uid: '@azure/arm-apimanagement.ProductPolicy'
package: '@azure/arm-apimanagement'
summary: Interface representing a ProductPolicy.
fullName: ProductPolicy
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, string, PolicyContract,
      ProductPolicyCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ProductPolicy.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates policy configuration for the Product.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        productId: string, policyId: string, parameters: PolicyContract,
        options?: ProductPolicyCreateOrUpdateOptionalParams):
        Promise<ProductPolicyCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service instance.
        - id: policyId
          type: string
          description: The identifier of the Policy.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyContract" />
          description: The policy contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductPolicyCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ProductPolicyCreateOrUpdateResponse"
          />&gt;
  - name: >-
      delete(string, string, string, string, string,
      ProductPolicyDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.ProductPolicy.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes the policy configuration at the Product.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        productId: string, policyId: string, ifMatch: string, options?:
        ProductPolicyDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service instance.
        - id: policyId
          type: string
          description: The identifier of the Policy.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductPolicyDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, string, ProductPolicyGetOptionalParams)
    uid: '@azure/arm-apimanagement.ProductPolicy.get'
    package: '@azure/arm-apimanagement'
    summary: Get the policy configuration at the Product level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, productId:
        string, policyId: string, options?: ProductPolicyGetOptionalParams):
        Promise<ProductPolicyGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service instance.
        - id: policyId
          type: string
          description: The identifier of the Policy.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.ProductPolicyGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ProductPolicyGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string, string,
      ProductPolicyGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.ProductPolicy.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: Get the ETag of the policy configuration at the Product level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        productId: string, policyId: string, options?:
        ProductPolicyGetEntityTagOptionalParams):
        Promise<ProductPolicyGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service instance.
        - id: policyId
          type: string
          description: The identifier of the Policy.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductPolicyGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ProductPolicyGetEntityTagHeaders" />&gt;
  - name: >-
      listByProduct(string, string, string,
      ProductPolicyListByProductOptionalParams)
    uid: '@azure/arm-apimanagement.ProductPolicy.listByProduct'
    package: '@azure/arm-apimanagement'
    summary: Get the policy configuration at the Product level.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByProduct(resourceGroupName: string, serviceName: string,
        productId: string, options?: ProductPolicyListByProductOptionalParams):
        PagedAsyncIterableIterator<PolicyContract, PolicyContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: productId
          type: string
          description: >-
            Product identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ProductPolicyListByProductOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.PolicyContract" />, <xref
          uid="@azure/arm-apimanagement.PolicyContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
