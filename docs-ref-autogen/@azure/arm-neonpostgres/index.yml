### YamlMime:TSPackage
uid: '@azure/arm-neonpostgres'
name: '@azure/arm-neonpostgres'
summary: ''
type: package
interfaces:
  - '@azure/arm-neonpostgres.PostgresContext'
  - '@azure/arm-neonpostgres.Attributes'
  - '@azure/arm-neonpostgres.Branch'
  - '@azure/arm-neonpostgres.BranchProperties'
  - '@azure/arm-neonpostgres.BranchesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.BranchesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.BranchesGetOptionalParams'
  - '@azure/arm-neonpostgres.BranchesListOptionalParams'
  - '@azure/arm-neonpostgres.BranchesOperations'
  - '@azure/arm-neonpostgres.BranchesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.CompanyDetails'
  - '@azure/arm-neonpostgres.Compute'
  - '@azure/arm-neonpostgres.ComputeProperties'
  - '@azure/arm-neonpostgres.ComputesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ComputesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.ComputesGetOptionalParams'
  - '@azure/arm-neonpostgres.ComputesListOptionalParams'
  - '@azure/arm-neonpostgres.ComputesOperations'
  - '@azure/arm-neonpostgres.ComputesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ConnectionUriProperties'
  - '@azure/arm-neonpostgres.DefaultEndpointSettings'
  - '@azure/arm-neonpostgres.Endpoint'
  - '@azure/arm-neonpostgres.EndpointProperties'
  - '@azure/arm-neonpostgres.EndpointsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsGetOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsListOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsOperations'
  - '@azure/arm-neonpostgres.EndpointsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ErrorAdditionalInfo'
  - '@azure/arm-neonpostgres.ErrorDetail'
  - '@azure/arm-neonpostgres.ErrorResponse'
  - '@azure/arm-neonpostgres.MarketplaceDetails'
  - '@azure/arm-neonpostgres.NeonDatabase'
  - '@azure/arm-neonpostgres.NeonDatabaseProperties'
  - '@azure/arm-neonpostgres.NeonDatabasesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesGetOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesListOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesOperations'
  - '@azure/arm-neonpostgres.NeonDatabasesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonRole'
  - '@azure/arm-neonpostgres.NeonRoleProperties'
  - '@azure/arm-neonpostgres.NeonRolesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesGetOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesListOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesOperations'
  - '@azure/arm-neonpostgres.NeonRolesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.OfferDetails'
  - '@azure/arm-neonpostgres.Operation'
  - '@azure/arm-neonpostgres.OperationDisplay'
  - '@azure/arm-neonpostgres.OperationsListOptionalParams'
  - '@azure/arm-neonpostgres.OperationsOperations'
  - '@azure/arm-neonpostgres.OrganizationProperties'
  - '@azure/arm-neonpostgres.OrganizationResource'
  - '@azure/arm-neonpostgres.OrganizationsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsGetOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsGetPostgresVersionsOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsListByResourceGroupOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsListBySubscriptionOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsOperations'
  - '@azure/arm-neonpostgres.OrganizationsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.PageSettings'
  - '@azure/arm-neonpostgres.PagedAsyncIterableIterator'
  - '@azure/arm-neonpostgres.PartnerOrganizationProperties'
  - '@azure/arm-neonpostgres.PgVersion'
  - '@azure/arm-neonpostgres.PgVersionsResult'
  - '@azure/arm-neonpostgres.PostgresClientOptionalParams'
  - '@azure/arm-neonpostgres.Project'
  - '@azure/arm-neonpostgres.ProjectProperties'
  - '@azure/arm-neonpostgres.ProjectsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsGetConnectionUriOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsGetOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsListOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsOperations'
  - '@azure/arm-neonpostgres.ProjectsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ProxyResource'
  - '@azure/arm-neonpostgres.Resource'
  - '@azure/arm-neonpostgres.RestorePollerOptions'
  - '@azure/arm-neonpostgres.SingleSignOnProperties'
  - '@azure/arm-neonpostgres.SystemData'
  - '@azure/arm-neonpostgres.TrackedResource'
  - '@azure/arm-neonpostgres.UserDetails'
functions:
  - name: createPostgres(TokenCredential, string, PostgresClientOptionalParams)
    uid: '@azure/arm-neonpostgres.createPostgres'
    package: '@azure/arm-neonpostgres'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createPostgres(credential: TokenCredential, subscriptionId:
        string, options?: PostgresClientOptionalParams): PostgresContext
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: subscriptionId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/arm-neonpostgres.PostgresClientOptionalParams" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
  - name: >-
      $delete(PostgresContext, string, string, string,
      ProjectsDeleteOptionalParams)
    uid: '@azure/arm-neonpostgres.$delete'
    package: '@azure/arm-neonpostgres'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function $delete(context: PostgresContext, resourceGroupName: string,
        organizationName: string, projectName: string, options?:
        ProjectsDeleteOptionalParams): Promise<void>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: projectName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/arm-neonpostgres.ProjectsDeleteOptionalParams" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      createOrUpdate(PostgresContext, string, string, string, Project,
      ProjectsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-neonpostgres.createOrUpdate'
    package: '@azure/arm-neonpostgres'
    summary: Create a Project
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(context: PostgresContext, resourceGroupName:
        string, organizationName: string, projectName: string, resource:
        Project, options?: ProjectsCreateOrUpdateOptionalParams):
        PollerLike<OperationState<Project>, Project>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: projectName
          type: string
          description: ''
        - id: resource
          type: <xref uid="@azure/arm-neonpostgres.Project" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-neonpostgres.ProjectsCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-neonpostgres.Project" />&gt;, <xref
          uid="@azure/arm-neonpostgres.Project" />&gt;
  - name: get(PostgresContext, string, string, string, ProjectsGetOptionalParams)
    uid: '@azure/arm-neonpostgres.get'
    package: '@azure/arm-neonpostgres'
    summary: Get a Project
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(context: PostgresContext, resourceGroupName: string,
        organizationName: string, projectName: string, options?:
        ProjectsGetOptionalParams): Promise<Project>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: projectName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/arm-neonpostgres.ProjectsGetOptionalParams" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-neonpostgres.Project" />&gt;
  - name: list(PostgresContext, string, string, ProjectsListOptionalParams)
    uid: '@azure/arm-neonpostgres.list'
    package: '@azure/arm-neonpostgres'
    summary: List Project resources by OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(context: PostgresContext, resourceGroupName: string,
        organizationName: string, options?: ProjectsListOptionalParams):
        PagedAsyncIterableIterator<Project>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/arm-neonpostgres.ProjectsListOptionalParams" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-neonpostgres.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-neonpostgres.Project" />&gt;
  - name: >-
      update(PostgresContext, string, string, string, Project,
      ProjectsUpdateOptionalParams)
    uid: '@azure/arm-neonpostgres.update'
    package: '@azure/arm-neonpostgres'
    summary: Update a Project
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(context: PostgresContext, resourceGroupName: string,
        organizationName: string, projectName: string, properties: Project,
        options?: ProjectsUpdateOptionalParams):
        PollerLike<OperationState<Project>, Project>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: projectName
          type: string
          description: ''
        - id: properties
          type: <xref uid="@azure/arm-neonpostgres.Project" />
          description: ''
        - id: options
          type: <xref uid="@azure/arm-neonpostgres.ProjectsUpdateOptionalParams" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-neonpostgres.Project" />&gt;, <xref
          uid="@azure/arm-neonpostgres.Project" />&gt;
  - name: >-
      getPostgresVersions(PostgresContext, string,
      OrganizationsGetPostgresVersionsOptionalParams)
    uid: '@azure/arm-neonpostgres.getPostgresVersions'
    package: '@azure/arm-neonpostgres'
    summary: Action to retrieve the PostgreSQL versions.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPostgresVersions(context: PostgresContext,
        resourceGroupName: string, options?:
        OrganizationsGetPostgresVersionsOptionalParams):
        Promise<PgVersionsResult>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-neonpostgres.OrganizationsGetPostgresVersionsOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-neonpostgres.PgVersionsResult" />&gt;
  - name: >-
      listByResourceGroup(PostgresContext, string,
      OrganizationsListByResourceGroupOptionalParams)
    uid: '@azure/arm-neonpostgres.listByResourceGroup'
    package: '@azure/arm-neonpostgres'
    summary: List OrganizationResource resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(context: PostgresContext,
        resourceGroupName: string, options?:
        OrganizationsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-neonpostgres.OrganizationsListByResourceGroupOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-neonpostgres.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-neonpostgres.OrganizationResource" />&gt;
  - name: >-
      listBySubscription(PostgresContext,
      OrganizationsListBySubscriptionOptionalParams)
    uid: '@azure/arm-neonpostgres.listBySubscription'
    package: '@azure/arm-neonpostgres'
    summary: List OrganizationResource resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(context: PostgresContext, options?:
        OrganizationsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-neonpostgres.OrganizationsListBySubscriptionOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-neonpostgres.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-neonpostgres.OrganizationResource" />&gt;
  - name: >-
      getConnectionUri(PostgresContext, string, string, string,
      ConnectionUriProperties, ProjectsGetConnectionUriOptionalParams)
    uid: '@azure/arm-neonpostgres.getConnectionUri'
    package: '@azure/arm-neonpostgres'
    summary: Action to retrieve the connection URI for the Neon Database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getConnectionUri(context: PostgresContext, resourceGroupName:
        string, organizationName: string, projectName: string,
        connectionUriParameters: ConnectionUriProperties, options?:
        ProjectsGetConnectionUriOptionalParams):
        Promise<ConnectionUriProperties>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-neonpostgres.PostgresContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationName
          type: string
          description: ''
        - id: projectName
          type: string
          description: ''
        - id: connectionUriParameters
          type: <xref uid="@azure/arm-neonpostgres.ConnectionUriProperties" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-neonpostgres.ProjectsGetConnectionUriOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-neonpostgres.ConnectionUriProperties"
          />&gt;
  - name: >-
      restorePoller<TResponse, TResult>(PostgresClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-neonpostgres.restorePoller'
    package: '@azure/arm-neonpostgres'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: PostgresClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-neonpostgres.PostgresClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-neonpostgres.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
enums:
  - '@azure/arm-neonpostgres.KnownActionType'
  - '@azure/arm-neonpostgres.KnownCreatedByType'
  - '@azure/arm-neonpostgres.KnownEndpointType'
  - '@azure/arm-neonpostgres.KnownMarketplaceSubscriptionStatus'
  - '@azure/arm-neonpostgres.KnownOrigin'
  - '@azure/arm-neonpostgres.KnownResourceProvisioningState'
  - '@azure/arm-neonpostgres.KnownSingleSignOnStates'
  - '@azure/arm-neonpostgres.KnownVersions'
classes:
  - '@azure/arm-neonpostgres.PostgresClient'
typeAliases:
  - '@azure/arm-neonpostgres.ActionType'
  - '@azure/arm-neonpostgres.ContinuablePage'
  - '@azure/arm-neonpostgres.CreatedByType'
  - '@azure/arm-neonpostgres.EndpointType'
  - '@azure/arm-neonpostgres.MarketplaceSubscriptionStatus'
  - '@azure/arm-neonpostgres.Origin'
  - '@azure/arm-neonpostgres.ResourceProvisioningState'
  - '@azure/arm-neonpostgres.SingleSignOnStates'
