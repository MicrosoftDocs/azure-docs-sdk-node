### YamlMime:TSType
name: VirtualMachines
uid: '@azure/arm-compute.VirtualMachines'
package: '@azure/arm-compute'
summary: Interface representing a VirtualMachines.
fullName: VirtualMachines
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginAssessPatches(string, string,
      VirtualMachinesAssessPatchesOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginAssessPatches'
    package: '@azure/arm-compute'
    summary: Assess patches on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginAssessPatches(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesAssessPatchesOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachineAssessPatchesResult>,
        VirtualMachineAssessPatchesResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesAssessPatchesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachineAssessPatchesResult" />&gt;,
          <xref uid="@azure/arm-compute.VirtualMachineAssessPatchesResult"
          />&gt;&gt;
  - name: >-
      beginAssessPatchesAndWait(string, string,
      VirtualMachinesAssessPatchesOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginAssessPatchesAndWait'
    package: '@azure/arm-compute'
    summary: Assess patches on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginAssessPatchesAndWait(resourceGroupName: string, vmName:
        string, options?: VirtualMachinesAssessPatchesOptionalParams):
        Promise<VirtualMachineAssessPatchesResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesAssessPatchesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-compute.VirtualMachineAssessPatchesResult" />&gt;
  - name: >-
      beginAttachDetachDataDisks(string, string, AttachDetachDataDisksRequest,
      VirtualMachinesAttachDetachDataDisksOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginAttachDetachDataDisks'
    package: '@azure/arm-compute'
    summary: Attach and detach data disks to/from the virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginAttachDetachDataDisks(resourceGroupName: string, vmName:
        string, parameters: AttachDetachDataDisksRequest, options?:
        VirtualMachinesAttachDetachDataDisksOptionalParams):
        Promise<SimplePollerLike<OperationState<StorageProfile>,
        StorageProfile>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.AttachDetachDataDisksRequest" />
          description: >-
            Parameters supplied to the attach and detach data disks operation on
            the virtual
                              machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesAttachDetachDataDisksOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.StorageProfile" />&gt;, <xref
          uid="@azure/arm-compute.StorageProfile" />&gt;&gt;
  - name: >-
      beginAttachDetachDataDisksAndWait(string, string,
      AttachDetachDataDisksRequest,
      VirtualMachinesAttachDetachDataDisksOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginAttachDetachDataDisksAndWait'
    package: '@azure/arm-compute'
    summary: Attach and detach data disks to/from the virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginAttachDetachDataDisksAndWait(resourceGroupName: string,
        vmName: string, parameters: AttachDetachDataDisksRequest, options?:
        VirtualMachinesAttachDetachDataDisksOptionalParams):
        Promise<StorageProfile>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.AttachDetachDataDisksRequest" />
          description: >-
            Parameters supplied to the attach and detach data disks operation on
            the virtual
                              machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesAttachDetachDataDisksOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.StorageProfile" />&gt;
  - name: >-
      beginCapture(string, string, VirtualMachineCaptureParameters,
      VirtualMachinesCaptureOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginCapture'
    package: '@azure/arm-compute'
    summary: >-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to

      create similar VMs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCapture(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, options?:
        VirtualMachinesCaptureOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachineCaptureResult>,
        VirtualMachineCaptureResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachineCaptureParameters" />
          description: Parameters supplied to the Capture Virtual Machine operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesCaptureOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachineCaptureResult" />&gt;, <xref
          uid="@azure/arm-compute.VirtualMachineCaptureResult" />&gt;&gt;
  - name: >-
      beginCaptureAndWait(string, string, VirtualMachineCaptureParameters,
      VirtualMachinesCaptureOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginCaptureAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to

      create similar VMs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCaptureAndWait(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, options?:
        VirtualMachinesCaptureOptionalParams):
        Promise<VirtualMachineCaptureResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachineCaptureParameters" />
          description: Parameters supplied to the Capture Virtual Machine operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesCaptureOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-compute.VirtualMachineCaptureResult"
          />&gt;
  - name: >-
      beginConvertToManagedDisks(string, string,
      VirtualMachinesConvertToManagedDisksOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginConvertToManagedDisks'
    package: '@azure/arm-compute'
    summary: >-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be

      stop-deallocated before invoking this operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginConvertToManagedDisks(resourceGroupName: string, vmName:
        string, options?: VirtualMachinesConvertToManagedDisksOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesConvertToManagedDisksOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginConvertToManagedDisksAndWait(string, string,
      VirtualMachinesConvertToManagedDisksOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginConvertToManagedDisksAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be

      stop-deallocated before invoking this operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginConvertToManagedDisksAndWait(resourceGroupName: string,
        vmName: string, options?:
        VirtualMachinesConvertToManagedDisksOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesConvertToManagedDisksOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginCreateOrUpdate(string, string, VirtualMachine,
      VirtualMachinesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: >-
      The operation to create or update a virtual machine. Please note some
      properties can be set only

      during virtual machine creation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options?:
        VirtualMachinesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachine>,
        VirtualMachine>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachine" />
          description: Parameters supplied to the Create Virtual Machine operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachine" />&gt;, <xref
          uid="@azure/arm-compute.VirtualMachine" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, VirtualMachine,
      VirtualMachinesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginCreateOrUpdateAndWait'
    package: '@azure/arm-compute'
    summary: >-
      The operation to create or update a virtual machine. Please note some
      properties can be set only

      during virtual machine creation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string, vmName:
        string, parameters: VirtualMachine, options?:
        VirtualMachinesCreateOrUpdateOptionalParams): Promise<VirtualMachine>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachine" />
          description: Parameters supplied to the Create Virtual Machine operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.VirtualMachine" />&gt;
  - name: beginDeallocate(string, string, VirtualMachinesDeallocateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginDeallocate'
    package: '@azure/arm-compute'
    summary: >-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the

      compute resources that this virtual machine uses.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesDeallocateOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesDeallocateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeallocateAndWait(string, string,
      VirtualMachinesDeallocateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginDeallocateAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the

      compute resources that this virtual machine uses.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeallocateAndWait(resourceGroupName: string, vmName:
        string, options?: VirtualMachinesDeallocateOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesDeallocateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginDelete(string, string, VirtualMachinesDeleteOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginDelete'
    package: '@azure/arm-compute'
    summary: The operation to delete a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, VirtualMachinesDeleteOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginDeleteAndWait'
    package: '@azure/arm-compute'
    summary: The operation to delete a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginInstallPatches(string, string,
      VirtualMachineInstallPatchesParameters,
      VirtualMachinesInstallPatchesOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginInstallPatches'
    package: '@azure/arm-compute'
    summary: Installs patches on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInstallPatches(resourceGroupName: string, vmName: string,
        installPatchesInput: VirtualMachineInstallPatchesParameters, options?:
        VirtualMachinesInstallPatchesOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachineInstallPatchesResult>,
        VirtualMachineInstallPatchesResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: installPatchesInput
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachineInstallPatchesParameters" />
          description: Input for InstallPatches as directly received by the API
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesInstallPatchesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachineInstallPatchesResult" />&gt;,
          <xref uid="@azure/arm-compute.VirtualMachineInstallPatchesResult"
          />&gt;&gt;
  - name: >-
      beginInstallPatchesAndWait(string, string,
      VirtualMachineInstallPatchesParameters,
      VirtualMachinesInstallPatchesOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginInstallPatchesAndWait'
    package: '@azure/arm-compute'
    summary: Installs patches on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInstallPatchesAndWait(resourceGroupName: string, vmName:
        string, installPatchesInput: VirtualMachineInstallPatchesParameters,
        options?: VirtualMachinesInstallPatchesOptionalParams):
        Promise<VirtualMachineInstallPatchesResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: installPatchesInput
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachineInstallPatchesParameters" />
          description: Input for InstallPatches as directly received by the API
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesInstallPatchesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-compute.VirtualMachineInstallPatchesResult" />&gt;
  - name: >-
      beginMigrateToVMScaleSet(string, string,
      VirtualMachinesMigrateToVMScaleSetOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginMigrateToVMScaleSet'
    package: '@azure/arm-compute'
    summary: >-
      Migrate a virtual machine from availability set to Flexible Virtual
      Machine Scale Set.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateToVMScaleSet(resourceGroupName: string, vmName:
        string, options?: VirtualMachinesMigrateToVMScaleSetOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachinesMigrateToVMScaleSetHeaders>,
        VirtualMachinesMigrateToVMScaleSetHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesMigrateToVMScaleSetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachinesMigrateToVMScaleSetHeaders"
          />&gt;, <xref
          uid="@azure/arm-compute.VirtualMachinesMigrateToVMScaleSetHeaders"
          />&gt;&gt;
  - name: >-
      beginMigrateToVMScaleSetAndWait(string, string,
      VirtualMachinesMigrateToVMScaleSetOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginMigrateToVMScaleSetAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Migrate a virtual machine from availability set to Flexible Virtual
      Machine Scale Set.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateToVMScaleSetAndWait(resourceGroupName: string,
        vmName: string, options?:
        VirtualMachinesMigrateToVMScaleSetOptionalParams):
        Promise<VirtualMachinesMigrateToVMScaleSetHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesMigrateToVMScaleSetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-compute.VirtualMachinesMigrateToVMScaleSetHeaders"
          />&gt;
  - name: >-
      beginPerformMaintenance(string, string,
      VirtualMachinesPerformMaintenanceOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginPerformMaintenance'
    package: '@azure/arm-compute'
    summary: The operation to perform maintenance on a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string, vmName:
        string, options?: VirtualMachinesPerformMaintenanceOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesPerformMaintenanceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginPerformMaintenanceAndWait(string, string,
      VirtualMachinesPerformMaintenanceOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginPerformMaintenanceAndWait'
    package: '@azure/arm-compute'
    summary: The operation to perform maintenance on a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPerformMaintenanceAndWait(resourceGroupName: string,
        vmName: string, options?:
        VirtualMachinesPerformMaintenanceOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesPerformMaintenanceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginPowerOff(string, string, VirtualMachinesPowerOffOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginPowerOff'
    package: '@azure/arm-compute'
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can be restarted with the

      same provisioned resources. **You are still charged for this virtual
      machine.**
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesPowerOffOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesPowerOffOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginPowerOffAndWait(string, string,
      VirtualMachinesPowerOffOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginPowerOffAndWait'
    package: '@azure/arm-compute'
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can be restarted with the

      same provisioned resources. **You are still charged for this virtual
      machine.**
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPowerOffAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesPowerOffOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesPowerOffOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginReapply(string, string, VirtualMachinesReapplyOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginReapply'
    package: '@azure/arm-compute'
    summary: The operation to reapply a virtual machine's state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReapply(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesReapplyOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesReapplyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginReapplyAndWait(string, string, VirtualMachinesReapplyOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginReapplyAndWait'
    package: '@azure/arm-compute'
    summary: The operation to reapply a virtual machine's state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReapplyAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesReapplyOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesReapplyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginRedeploy(string, string, VirtualMachinesRedeployOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRedeploy'
    package: '@azure/arm-compute'
    summary: >-
      Shuts down the virtual machine, moves it to a new node, and powers it back
      on.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesRedeployOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesRedeployOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginRedeployAndWait(string, string,
      VirtualMachinesRedeployOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRedeployAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Shuts down the virtual machine, moves it to a new node, and powers it back
      on.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRedeployAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesRedeployOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesRedeployOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginReimage(string, string, VirtualMachinesReimageOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginReimage'
    package: '@azure/arm-compute'
    summary: >-
      Reimages (upgrade the operating system) a virtual machine which don't have
      a ephemeral OS disk, for

      virtual machines who have a ephemeral OS disk the virtual machine is reset
      to initial state. NOTE:

      The retaining of old OS disk depends on the value of deleteOption of OS
      disk. If deleteOption is

      detach, the old OS disk will be preserved after reimage. If deleteOption
      is delete, the old OS disk

      will be deleted after reimage. The deleteOption of the OS disk should be
      updated accordingly before

      performing the reimage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesReimageOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesReimageOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginReimageAndWait(string, string, VirtualMachinesReimageOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginReimageAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Reimages (upgrade the operating system) a virtual machine which don't have
      a ephemeral OS disk, for

      virtual machines who have a ephemeral OS disk the virtual machine is reset
      to initial state. NOTE:

      The retaining of old OS disk depends on the value of deleteOption of OS
      disk. If deleteOption is

      detach, the old OS disk will be preserved after reimage. If deleteOption
      is delete, the old OS disk

      will be deleted after reimage. The deleteOption of the OS disk should be
      updated accordingly before

      performing the reimage.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReimageAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesReimageOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesReimageOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginRestart(string, string, VirtualMachinesRestartOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRestart'
    package: '@azure/arm-compute'
    summary: The operation to restart a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesRestartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesRestartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginRestartAndWait(string, string, VirtualMachinesRestartOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRestartAndWait'
    package: '@azure/arm-compute'
    summary: The operation to restart a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestartAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesRestartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesRestartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRunCommand(string, string, RunCommandInput,
      VirtualMachinesRunCommandOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRunCommand'
    package: '@azure/arm-compute'
    summary: Run command on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options?:
        VirtualMachinesRunCommandOptionalParams):
        Promise<SimplePollerLike<OperationState<RunCommandResult>,
        RunCommandResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.RunCommandInput" />
          description: Parameters supplied to the Run command operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesRunCommandOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.RunCommandResult" />&gt;, <xref
          uid="@azure/arm-compute.RunCommandResult" />&gt;&gt;
  - name: >-
      beginRunCommandAndWait(string, string, RunCommandInput,
      VirtualMachinesRunCommandOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginRunCommandAndWait'
    package: '@azure/arm-compute'
    summary: Run command on the VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRunCommandAndWait(resourceGroupName: string, vmName:
        string, parameters: RunCommandInput, options?:
        VirtualMachinesRunCommandOptionalParams): Promise<RunCommandResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.RunCommandInput" />
          description: Parameters supplied to the Run command operation.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesRunCommandOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.RunCommandResult" />&gt;
  - name: beginStart(string, string, VirtualMachinesStartOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginStart'
    package: '@azure/arm-compute'
    summary: The operation to start a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmName: string, options?:
        VirtualMachinesStartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: <xref uid="@azure/arm-compute.VirtualMachinesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginStartAndWait(string, string, VirtualMachinesStartOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginStartAndWait'
    package: '@azure/arm-compute'
    summary: The operation to start a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: <xref uid="@azure/arm-compute.VirtualMachinesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, VirtualMachineUpdate,
      VirtualMachinesUpdateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginUpdate'
    package: '@azure/arm-compute'
    summary: The operation to update a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, options?:
        VirtualMachinesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<VirtualMachinesUpdateResponse>,
        VirtualMachinesUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachineUpdate" />
          description: Parameters supplied to the Update Virtual Machine operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachinesUpdateResponse" />&gt;, <xref
          uid="@azure/arm-compute.VirtualMachinesUpdateResponse" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, VirtualMachineUpdate,
      VirtualMachinesUpdateOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.beginUpdateAndWait'
    package: '@azure/arm-compute'
    summary: The operation to update a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, options?:
        VirtualMachinesUpdateOptionalParams):
        Promise<VirtualMachinesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: parameters
          type: <xref uid="@azure/arm-compute.VirtualMachineUpdate" />
          description: Parameters supplied to the Update Virtual Machine operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-compute.VirtualMachinesUpdateResponse" />&gt;
  - name: generalize(string, string, VirtualMachinesGeneralizeOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.generalize'
    package: '@azure/arm-compute'
    summary: >-
      Sets the OS state of the virtual machine to generalized. It is recommended
      to sysprep the virtual

      machine before performing this operation. For Windows, please refer to
      [Create a managed image of a

      generalized VM in

      Azure](https://docs.microsoft.com/azure/virtual-machines/windows/capture-image-resource).
      For Linux,

      please refer to [How to create an image of a virtual machine or

      VHD](https://docs.microsoft.com/azure/virtual-machines/linux/capture-image).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, options?:
        VirtualMachinesGeneralizeOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesGeneralizeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, VirtualMachinesGetOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.get'
    package: '@azure/arm-compute'
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, options?:
        VirtualMachinesGetOptionalParams): Promise<VirtualMachine>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: <xref uid="@azure/arm-compute.VirtualMachinesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.VirtualMachine" />&gt;
  - name: instanceView(string, string, VirtualMachinesInstanceViewOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.instanceView'
    package: '@azure/arm-compute'
    summary: Retrieves information about the run-time state of a virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesInstanceViewOptionalParams):
        Promise<VirtualMachineInstanceView>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesInstanceViewOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-compute.VirtualMachineInstanceView"
          />&gt;
  - name: list(string, VirtualMachinesListOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.list'
    package: '@azure/arm-compute'
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the
      nextLink property in the

      response to get the next page of virtual machines.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        VirtualMachinesListOptionalParams):
        PagedAsyncIterableIterator<VirtualMachine, VirtualMachine[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="@azure/arm-compute.VirtualMachinesListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachine" />, <xref
          uid="@azure/arm-compute.VirtualMachine" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAll(VirtualMachinesListAllOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.listAll'
    package: '@azure/arm-compute'
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the
      nextLink property in the

      response to get the next page of virtual machines.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options?: VirtualMachinesListAllOptionalParams):
        PagedAsyncIterableIterator<VirtualMachine, VirtualMachine[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.VirtualMachinesListAllOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachine" />, <xref
          uid="@azure/arm-compute.VirtualMachine" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listAvailableSizes(string, string,
      VirtualMachinesListAvailableSizesOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.listAvailableSizes'
    package: '@azure/arm-compute'
    summary: >-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesListAvailableSizesOptionalParams):
        PagedAsyncIterableIterator<VirtualMachineSize, VirtualMachineSize[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesListAvailableSizesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachineSize" />, <xref
          uid="@azure/arm-compute.VirtualMachineSize" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByLocation(string, VirtualMachinesListByLocationOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.listByLocation'
    package: '@azure/arm-compute'
    summary: >-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByLocation(location: string, options?:
        VirtualMachinesListByLocationOptionalParams):
        PagedAsyncIterableIterator<VirtualMachine, VirtualMachine[],
        PageSettings>
      parameters:
        - id: location
          type: string
          description: The name of Azure region.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesListByLocationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-compute.VirtualMachine" />, <xref
          uid="@azure/arm-compute.VirtualMachine" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      retrieveBootDiagnosticsData(string, string,
      VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.retrieveBootDiagnosticsData'
    package: '@azure/arm-compute'
    summary: >-
      The operation to retrieve SAS URIs for a virtual machine's boot diagnostic
      logs.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function retrieveBootDiagnosticsData(resourceGroupName: string, vmName:
        string, options?:
        VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams):
        Promise<RetrieveBootDiagnosticsDataResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesRetrieveBootDiagnosticsDataOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-compute.RetrieveBootDiagnosticsDataResult" />&gt;
  - name: >-
      simulateEviction(string, string,
      VirtualMachinesSimulateEvictionOptionalParams)
    uid: '@azure/arm-compute.VirtualMachines.simulateEviction'
    package: '@azure/arm-compute'
    summary: The operation to simulate the eviction of spot virtual machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function simulateEviction(resourceGroupName: string, vmName: string,
        options?: VirtualMachinesSimulateEvictionOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vmName
          type: string
          description: The name of the virtual machine.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.VirtualMachinesSimulateEvictionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
