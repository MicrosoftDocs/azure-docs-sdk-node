### YamlMime:TSType
name: RequestOptions
uid: '@azure/cosmos.RequestOptions'
package: '@azure/cosmos'
summary: >-
  Options that can be specified for a requested issued to the Azure Cosmos DB
  servers.=
fullName: RequestOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: accessCondition
    uid: '@azure/cosmos.RequestOptions.accessCondition'
    package: '@azure/cosmos'
    summary: Conditions Associated with the request.
    fullName: accessCondition
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'accessCondition?: { condition: string, type: string }'
      return:
        description: ''
        type: '{ condition: string, type: string }'
  - name: disableAutomaticIdGeneration
    uid: '@azure/cosmos.RequestOptions.disableAutomaticIdGeneration'
    package: '@azure/cosmos'
    summary: >-
      Disable automatic id generation (will cause creates to fail if id isn't on
      the definition)
    fullName: disableAutomaticIdGeneration
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disableAutomaticIdGeneration?: boolean'
      return:
        description: ''
        type: boolean
  - name: enableScriptLogging
    uid: '@azure/cosmos.RequestOptions.enableScriptLogging'
    package: '@azure/cosmos'
    summary: Enables or disables logging in JavaScript stored procedures.
    fullName: enableScriptLogging
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableScriptLogging?: boolean'
      return:
        description: ''
        type: boolean
  - name: indexingDirective
    uid: '@azure/cosmos.RequestOptions.indexingDirective'
    package: '@azure/cosmos'
    summary: Specifies indexing directives (index, do not index .. etc).
    fullName: indexingDirective
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'indexingDirective?: string'
      return:
        description: ''
        type: string
  - name: offerThroughput
    uid: '@azure/cosmos.RequestOptions.offerThroughput'
    package: '@azure/cosmos'
    summary: >-
      The offer throughput provisioned for a container in measurement of
      Requests-per-Unit.
    fullName: offerThroughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'offerThroughput?: number'
      return:
        description: ''
        type: number
  - name: offerType
    uid: '@azure/cosmos.RequestOptions.offerType'
    package: '@azure/cosmos'
    summary: |-
      Offer type when creating document containers.

      This option is only valid when creating a document container.
    fullName: offerType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'offerType?: string'
      return:
        description: ''
        type: string
  - name: populateQuotaInfo
    uid: '@azure/cosmos.RequestOptions.populateQuotaInfo'
    package: '@azure/cosmos'
    summary: >-
      Enables/disables getting document container quota related stats for
      document container read requests.
    fullName: populateQuotaInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'populateQuotaInfo?: boolean'
      return:
        description: ''
        type: boolean
  - name: postTriggerInclude
    uid: '@azure/cosmos.RequestOptions.postTriggerInclude'
    package: '@azure/cosmos'
    summary: Indicates what is the post trigger to be invoked after the operation.
    fullName: postTriggerInclude
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'postTriggerInclude?: string | string[]'
      return:
        description: ''
        type: string | string[]
  - name: preTriggerInclude
    uid: '@azure/cosmos.RequestOptions.preTriggerInclude'
    package: '@azure/cosmos'
    summary: Indicates what is the pre trigger to be invoked before the operation.
    fullName: preTriggerInclude
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'preTriggerInclude?: string | string[]'
      return:
        description: ''
        type: string | string[]
  - name: resourceTokenExpirySeconds
    uid: '@azure/cosmos.RequestOptions.resourceTokenExpirySeconds'
    package: '@azure/cosmos'
    summary: >-
      Expiry time (in seconds) for resource token associated with permission
      (applicable only for requests on permissions).
    fullName: resourceTokenExpirySeconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceTokenExpirySeconds?: number'
      return:
        description: ''
        type: number
  - name: urlConnection
    uid: '@azure/cosmos.RequestOptions.urlConnection'
    package: '@azure/cosmos'
    summary: (Advanced use case) The url to connect to.
    fullName: urlConnection
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'urlConnection?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: abortSignal
    uid: '@azure/cosmos.RequestOptions.abortSignal'
    package: '@azure/cosmos'
    summary: >+
      abortSignal to pass to all underlying network requests created by this
      method call. See
      https://developer.mozilla.org/en-US/docs/Web/API/AbortController


      **Example**


      Cancel a read request

      ```typescript

      const controller = new AbortController()

      const {result: item} = await items.query('SELECT * from c', { abortSignal:
      controller.signal});

      controller.abort()

      ```

    fullName: abortSignal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignal'
      return:
        description: ''
        type: AbortSignal
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.abortSignal](xref:@azure/cosmos.SharedOptions.abortSignal)
  - name: bypassIntegratedCache
    uid: '@azure/cosmos.RequestOptions.bypassIntegratedCache'
    package: '@azure/cosmos'
    summary: >-
      Sets if integrated cache should be bypassed or enabled for the request in
      Azure CosmosDB service.


      <p>Default value is false. By default integrated cache is enabled</p>
    fullName: bypassIntegratedCache
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'bypassIntegratedCache?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.bypassIntegratedCache](xref:@azure/cosmos.SharedOptions.bypassIntegratedCache)
  - name: consistencyLevel
    uid: '@azure/cosmos.RequestOptions.consistencyLevel'
    package: '@azure/cosmos'
    summary: Consistency level required by the client.
    fullName: consistencyLevel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'consistencyLevel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.consistencyLevel](xref:@azure/cosmos.SharedOptions.consistencyLevel)
  - name: disableRUPerMinuteUsage
    uid: '@azure/cosmos.RequestOptions.disableRUPerMinuteUsage'
    package: '@azure/cosmos'
    summary: >-
      DisableRUPerMinuteUsage is used to enable/disable Request
      Units(RUs)/minute capacity

      to serve the request if regular provisioned RUs/second is exhausted.
    fullName: disableRUPerMinuteUsage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disableRUPerMinuteUsage?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.disableRUPerMinuteUsage](xref:@azure/cosmos.SharedOptions.disableRUPerMinuteUsage)
  - name: initialHeaders
    uid: '@azure/cosmos.RequestOptions.initialHeaders'
    package: '@azure/cosmos'
    summary: >-
      (Advanced use case) Initial headers to start with when sending requests to
      Cosmos
    fullName: initialHeaders
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'initialHeaders?: CosmosHeaders'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosHeaders" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.initialHeaders](xref:@azure/cosmos.SharedOptions.initialHeaders)
  - name: maxIntegratedCacheStalenessInMs
    uid: '@azure/cosmos.RequestOptions.maxIntegratedCacheStalenessInMs'
    package: '@azure/cosmos'
    summary: >-
      Sets the staleness value associated with the request in the Azure CosmosDB
      service. For requests where the <xref:com.azure.cosmos.ConsistencyLevel>
      is <xref:com.azure.cosmos.ConsistencyLevel%23EVENTUAL>  or
      <xref:com.azure.cosmos.ConsistencyLevel%23SESSION>, responses from the

      integrated cache are guaranteed to be no staler than value indicated by
      this maxIntegratedCacheStaleness. When the

      consistency level is not set, this property is ignored.


      <p>Default value is null</p>


      <p>Cache Staleness is supported in milliseconds granularity. Anything
      smaller than milliseconds will be ignored.</p>
    fullName: maxIntegratedCacheStalenessInMs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxIntegratedCacheStalenessInMs?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.maxIntegratedCacheStalenessInMs](xref:@azure/cosmos.SharedOptions.maxIntegratedCacheStalenessInMs)
  - name: priorityLevel
    uid: '@azure/cosmos.RequestOptions.priorityLevel'
    package: '@azure/cosmos'
    summary: >-
      Priority Level (Low/High) for each request.

      Low priority requests are always throttled before any high priority
      requests.


      <p>Default value is null. By default all requests are of High priority</p>
    fullName: priorityLevel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'priorityLevel?: PriorityLevel'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.PriorityLevel" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.priorityLevel](xref:@azure/cosmos.SharedOptions.priorityLevel)
  - name: sessionToken
    uid: '@azure/cosmos.RequestOptions.sessionToken'
    package: '@azure/cosmos'
    summary: >-
      Enables/disables getting document container quota related stats for
      document container read requests.
    fullName: sessionToken
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sessionToken?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.sessionToken](xref:@azure/cosmos.SharedOptions.sessionToken)
  - name: throughputBucket
    uid: '@azure/cosmos.RequestOptions.throughputBucket'
    package: '@azure/cosmos'
    summary: >-
      Throughput Bucket for a request.


      <p>Default value is null. In this case, the request can use 100% of the
      partition throughput. </p>

      For more information, visit [Cosmos DB throughput
      Bucketing](https://aka.ms/cosmsodb-bucketing).
    fullName: throughputBucket
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'throughputBucket?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [SharedOptions.throughputBucket](xref:@azure/cosmos.SharedOptions.throughputBucket)
extends: <xref uid="@azure/cosmos.SharedOptions" />
