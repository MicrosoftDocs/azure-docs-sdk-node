### YamlMime:TSPackage
uid: '@azure/arm-pineconevectordb'
name: '@azure/arm-pineconevectordb'
summary: ''
type: package
interfaces:
  - '@azure/arm-pineconevectordb.VectorDbContext'
  - '@azure/arm-pineconevectordb.ErrorAdditionalInfo'
  - '@azure/arm-pineconevectordb.ErrorDetail'
  - '@azure/arm-pineconevectordb.ErrorResponse'
  - '@azure/arm-pineconevectordb.ManagedServiceIdentity'
  - '@azure/arm-pineconevectordb.MarketplaceDetails'
  - '@azure/arm-pineconevectordb.OfferDetails'
  - '@azure/arm-pineconevectordb.Operation'
  - '@azure/arm-pineconevectordb.OperationDisplay'
  - '@azure/arm-pineconevectordb.OperationsListOptionalParams'
  - '@azure/arm-pineconevectordb.OperationsOperations'
  - '@azure/arm-pineconevectordb.OrganizationProperties'
  - '@azure/arm-pineconevectordb.OrganizationResource'
  - '@azure/arm-pineconevectordb.OrganizationResourceUpdate'
  - '@azure/arm-pineconevectordb.OrganizationsCreateOrUpdateOptionalParams'
  - '@azure/arm-pineconevectordb.OrganizationsDeleteOptionalParams'
  - '@azure/arm-pineconevectordb.OrganizationsGetOptionalParams'
  - '@azure/arm-pineconevectordb.OrganizationsListByResourceGroupOptionalParams'
  - '@azure/arm-pineconevectordb.OrganizationsListBySubscriptionOptionalParams'
  - '@azure/arm-pineconevectordb.OrganizationsOperations'
  - '@azure/arm-pineconevectordb.OrganizationsUpdateOptionalParams'
  - '@azure/arm-pineconevectordb.PageSettings'
  - '@azure/arm-pineconevectordb.PagedAsyncIterableIterator'
  - '@azure/arm-pineconevectordb.PartnerProperties'
  - '@azure/arm-pineconevectordb.Resource'
  - '@azure/arm-pineconevectordb.RestorePollerOptions'
  - '@azure/arm-pineconevectordb.SingleSignOnPropertiesV2'
  - '@azure/arm-pineconevectordb.SystemData'
  - '@azure/arm-pineconevectordb.TrackedResource'
  - '@azure/arm-pineconevectordb.UserAssignedIdentity'
  - '@azure/arm-pineconevectordb.UserDetails'
  - '@azure/arm-pineconevectordb.VectorDbClientOptionalParams'
functions:
  - name: createVectorDb(TokenCredential, string, VectorDbClientOptionalParams)
    uid: '@azure/arm-pineconevectordb.createVectorDb'
    package: '@azure/arm-pineconevectordb'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createVectorDb(credential: TokenCredential, subscriptionId:
        string, options?: VectorDbClientOptionalParams): VectorDbContext
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: subscriptionId
          type: string
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-pineconevectordb.VectorDbClientOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
  - name: list(VectorDbContext, OperationsListOptionalParams)
    uid: '@azure/arm-pineconevectordb.list'
    package: '@azure/arm-pineconevectordb'
    summary: List the operations for the provider
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(context: VectorDbContext, options?:
        OperationsListOptionalParams): PagedAsyncIterableIterator<Operation>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-pineconevectordb.OperationsListOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-pineconevectordb.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-pineconevectordb.Operation" />&gt;
  - name: >-
      $delete(VectorDbContext, string, string,
      OrganizationsDeleteOptionalParams)
    uid: '@azure/arm-pineconevectordb.$delete'
    package: '@azure/arm-pineconevectordb'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function $delete(context: VectorDbContext, resourceGroupName: string,
        organizationname: string, options?: OrganizationsDeleteOptionalParams):
        PollerLike<OperationState<void>, void>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsDeleteOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;
  - name: >-
      createOrUpdate(VectorDbContext, string, string, OrganizationResource,
      OrganizationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-pineconevectordb.createOrUpdate'
    package: '@azure/arm-pineconevectordb'
    summary: Create a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(context: VectorDbContext, resourceGroupName:
        string, organizationname: string, resource: OrganizationResource,
        options?: OrganizationsCreateOrUpdateOptionalParams):
        PollerLike<OperationState<OrganizationResource>, OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: resource
          type: <xref uid="@azure/arm-pineconevectordb.OrganizationResource" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsCreateOrUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-pineconevectordb.OrganizationResource" />&gt;, <xref
          uid="@azure/arm-pineconevectordb.OrganizationResource" />&gt;
  - name: get(VectorDbContext, string, string, OrganizationsGetOptionalParams)
    uid: '@azure/arm-pineconevectordb.get'
    package: '@azure/arm-pineconevectordb'
    summary: Get a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(context: VectorDbContext, resourceGroupName: string,
        organizationname: string, options?: OrganizationsGetOptionalParams):
        Promise<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsGetOptionalParams" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-pineconevectordb.OrganizationResource" />&gt;
  - name: >-
      listByResourceGroup(VectorDbContext, string,
      OrganizationsListByResourceGroupOptionalParams)
    uid: '@azure/arm-pineconevectordb.listByResourceGroup'
    package: '@azure/arm-pineconevectordb'
    summary: List OrganizationResource resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(context: VectorDbContext,
        resourceGroupName: string, options?:
        OrganizationsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsListByResourceGroupOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-pineconevectordb.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-pineconevectordb.OrganizationResource"
          />&gt;
  - name: >-
      listBySubscription(VectorDbContext,
      OrganizationsListBySubscriptionOptionalParams)
    uid: '@azure/arm-pineconevectordb.listBySubscription'
    package: '@azure/arm-pineconevectordb'
    summary: List OrganizationResource resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(context: VectorDbContext, options?:
        OrganizationsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsListBySubscriptionOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/arm-pineconevectordb.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure/arm-pineconevectordb.OrganizationResource"
          />&gt;
  - name: >-
      update(VectorDbContext, string, string, OrganizationResourceUpdate,
      OrganizationsUpdateOptionalParams)
    uid: '@azure/arm-pineconevectordb.update'
    package: '@azure/arm-pineconevectordb'
    summary: Update a OrganizationResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(context: VectorDbContext, resourceGroupName: string,
        organizationname: string, properties: OrganizationResourceUpdate,
        options?: OrganizationsUpdateOptionalParams):
        Promise<OrganizationResource>
      parameters:
        - id: context
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbContext" />
          description: ''
        - id: resourceGroupName
          type: string
          description: ''
        - id: organizationname
          type: string
          description: ''
        - id: properties
          type: >-
            <xref uid="@azure/arm-pineconevectordb.OrganizationResourceUpdate"
            />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/arm-pineconevectordb.OrganizationsUpdateOptionalParams"
            />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-pineconevectordb.OrganizationResource" />&gt;
  - name: >-
      restorePoller<TResponse, TResult>(VectorDbClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-pineconevectordb.restorePoller'
    package: '@azure/arm-pineconevectordb'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: VectorDbClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-pineconevectordb.VectorDbClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-pineconevectordb.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
enums:
  - '@azure/arm-pineconevectordb.KnownActionType'
  - '@azure/arm-pineconevectordb.KnownCreatedByType'
  - '@azure/arm-pineconevectordb.KnownManagedServiceIdentityType'
  - '@azure/arm-pineconevectordb.KnownMarketplaceSubscriptionStatus'
  - '@azure/arm-pineconevectordb.KnownOrigin'
  - '@azure/arm-pineconevectordb.KnownResourceProvisioningState'
  - '@azure/arm-pineconevectordb.KnownSingleSignOnStates'
  - '@azure/arm-pineconevectordb.KnownSingleSignOnType'
  - '@azure/arm-pineconevectordb.KnownVersions'
classes:
  - '@azure/arm-pineconevectordb.VectorDbClient'
typeAliases:
  - '@azure/arm-pineconevectordb.ActionType'
  - '@azure/arm-pineconevectordb.ContinuablePage'
  - '@azure/arm-pineconevectordb.CreatedByType'
  - '@azure/arm-pineconevectordb.ManagedServiceIdentityType'
  - '@azure/arm-pineconevectordb.MarketplaceSubscriptionStatus'
  - '@azure/arm-pineconevectordb.Origin'
  - '@azure/arm-pineconevectordb.ResourceProvisioningState'
  - '@azure/arm-pineconevectordb.SingleSignOnStates'
  - '@azure/arm-pineconevectordb.SingleSignOnType'
