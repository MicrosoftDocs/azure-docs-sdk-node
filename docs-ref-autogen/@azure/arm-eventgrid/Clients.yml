### YamlMime:TSType
name: Clients
uid: '@azure/arm-eventgrid.Clients'
package: '@azure/arm-eventgrid'
summary: Interface representing a Clients.
fullName: Clients
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, Client,
      ClientsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.beginCreateOrUpdate'
    package: '@azure/arm-eventgrid'
    summary: Create or update a client with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, namespaceName:
        string, clientName: string, clientInfo: Client, options?:
        ClientsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Client>, Client>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientName
          type: string
          description: The client name.
        - id: clientInfo
          type: <xref uid="@azure/arm-eventgrid.Client" />
          description: Client information.
        - id: options
          type: >-
            <xref uid="@azure/arm-eventgrid.ClientsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.Client" />&gt;, <xref
          uid="@azure/arm-eventgrid.Client" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, Client,
      ClientsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.beginCreateOrUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: Create or update a client with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        namespaceName: string, clientName: string, clientInfo: Client, options?:
        ClientsCreateOrUpdateOptionalParams): Promise<Client>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientName
          type: string
          description: The client name.
        - id: clientInfo
          type: <xref uid="@azure/arm-eventgrid.Client" />
          description: Client information.
        - id: options
          type: >-
            <xref uid="@azure/arm-eventgrid.ClientsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.Client" />&gt;
  - name: beginDelete(string, string, string, ClientsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.beginDelete'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing client.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, namespaceName: string,
        clientName: string, options?: ClientsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientName
          type: string
          description: Name of the client.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, ClientsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.beginDeleteAndWait'
    package: '@azure/arm-eventgrid'
    summary: Delete an existing client.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, namespaceName:
        string, clientName: string, options?: ClientsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientName
          type: string
          description: Name of the client.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, ClientsGetOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.get'
    package: '@azure/arm-eventgrid'
    summary: Get properties of a client.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        clientName: string, options?: ClientsGetOptionalParams): Promise<Client>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: clientName
          type: string
          description: Name of the client.
        - id: options
          type: <xref uid="@azure/arm-eventgrid.ClientsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.Client" />&gt;
  - name: listByNamespace(string, string, ClientsListByNamespaceOptionalParams)
    uid: '@azure/arm-eventgrid.Clients.listByNamespace'
    package: '@azure/arm-eventgrid'
    summary: Get all the permission bindings under a namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: ClientsListByNamespaceOptionalParams):
        PagedAsyncIterableIterator<Client, Client[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: namespaceName
          type: string
          description: Name of the namespace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.ClientsListByNamespaceOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.Client" />, <xref
          uid="@azure/arm-eventgrid.Client" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
