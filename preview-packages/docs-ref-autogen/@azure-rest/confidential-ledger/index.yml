### YamlMime:TSPackage
uid: '@azure-rest/confidential-ledger'
name: '@azure-rest/confidential-ledger'
summary: ''
type: package
interfaces:
  - '@azure-rest/confidential-ledger.ApplicationClaimOutput'
  - '@azure-rest/confidential-ledger.Bundle'
  - '@azure-rest/confidential-ledger.BundleOutput'
  - '@azure-rest/confidential-ledger.ClaimDigestOutput'
  - '@azure-rest/confidential-ledger.CollectionOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerClientOptions'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerEnclavesOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerErrorBodyOutput'
  - '@azure-rest/confidential-ledger.ConfidentialLedgerErrorOutput'
  - '@azure-rest/confidential-ledger.ConsortiumMemberOutput'
  - '@azure-rest/confidential-ledger.ConsortiumOutput'
  - '@azure-rest/confidential-ledger.ConstitutionOutput'
  - '@azure-rest/confidential-ledger.CreateLedgerEntry200Headers'
  - '@azure-rest/confidential-ledger.CreateLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryBodyParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryDefaultResponse'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryMediaTypesParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUser200Response'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserBodyParam'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserDefaultResponse'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserMediaTypesParam'
  - '@azure-rest/confidential-ledger.CreateUserDefinedEndpoint201Response'
  - '@azure-rest/confidential-ledger.CreateUserDefinedEndpointBodyParam'
  - '@azure-rest/confidential-ledger.CreateUserDefinedEndpointDefaultResponse'
  - '@azure-rest/confidential-ledger.CreateUserDefinedEndpointMediaTypesParam'
  - '@azure-rest/confidential-ledger.DeleteUser'
  - '@azure-rest/confidential-ledger.DeleteUser204Response'
  - '@azure-rest/confidential-ledger.DeleteUserDefaultResponse'
  - '@azure-rest/confidential-ledger.EnclaveQuoteOutput'
  - '@azure-rest/confidential-ledger.EndpointProperties'
  - '@azure-rest/confidential-ledger.EndpointPropertiesOutput'
  - '@azure-rest/confidential-ledger.GetConstitution'
  - '@azure-rest/confidential-ledger.GetConstitution200Response'
  - '@azure-rest/confidential-ledger.GetConstitutionDefaultResponse'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryDefaultResponse'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotes200Response'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesDefaultResponse'
  - '@azure-rest/confidential-ledger.GetLedgerEntry'
  - '@azure-rest/confidential-ledger.GetLedgerEntry200Response'
  - '@azure-rest/confidential-ledger.GetLedgerEntryDefaultResponse'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParam'
  - '@azure-rest/confidential-ledger.GetLedgerEntryQueryParamProperties'
  - '@azure-rest/confidential-ledger.GetReceipt'
  - '@azure-rest/confidential-ledger.GetReceipt200Response'
  - '@azure-rest/confidential-ledger.GetReceiptDefaultResponse'
  - '@azure-rest/confidential-ledger.GetTransactionStatus'
  - '@azure-rest/confidential-ledger.GetTransactionStatus200Response'
  - '@azure-rest/confidential-ledger.GetTransactionStatusDefaultResponse'
  - '@azure-rest/confidential-ledger.GetUser200Response'
  - '@azure-rest/confidential-ledger.GetUserDefaultResponse'
  - '@azure-rest/confidential-ledger.GetUserDefinedEndpoint'
  - '@azure-rest/confidential-ledger.GetUserDefinedEndpoint200Response'
  - '@azure-rest/confidential-ledger.GetUserDefinedEndpointDefaultResponse'
  - '@azure-rest/confidential-ledger.InterpreterReusePolicy'
  - '@azure-rest/confidential-ledger.InterpreterReusePolicyOutput'
  - '@azure-rest/confidential-ledger.LedgerEntry'
  - '@azure-rest/confidential-ledger.LedgerEntryClaimOutput'
  - '@azure-rest/confidential-ledger.LedgerEntryOutput'
  - '@azure-rest/confidential-ledger.LedgerIdentity'
  - '@azure-rest/confidential-ledger.LedgerQueryResultOutput'
  - '@azure-rest/confidential-ledger.LedgerUser'
  - '@azure-rest/confidential-ledger.LedgerUserOutput'
  - '@azure-rest/confidential-ledger.LedgerWriteResultOutput'
  - '@azure-rest/confidential-ledger.ListCollections'
  - '@azure-rest/confidential-ledger.ListCollections200Response'
  - '@azure-rest/confidential-ledger.ListCollectionsDefaultResponse'
  - '@azure-rest/confidential-ledger.ListConsortiumMembers'
  - '@azure-rest/confidential-ledger.ListConsortiumMembers200Response'
  - '@azure-rest/confidential-ledger.ListConsortiumMembersDefaultResponse'
  - '@azure-rest/confidential-ledger.ListLedgerEntries'
  - '@azure-rest/confidential-ledger.ListLedgerEntries200Response'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesDefaultResponse'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesQueryParam'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesQueryParamProperties'
  - '@azure-rest/confidential-ledger.ListUserDefinedFunctions'
  - '@azure-rest/confidential-ledger.ListUserDefinedFunctions200Response'
  - '@azure-rest/confidential-ledger.ListUserDefinedFunctionsDefaultResponse'
  - '@azure-rest/confidential-ledger.ListUsers'
  - '@azure-rest/confidential-ledger.ListUsers200Response'
  - '@azure-rest/confidential-ledger.ListUsersDefaultResponse'
  - '@azure-rest/confidential-ledger.Metadata'
  - '@azure-rest/confidential-ledger.MetadataOutput'
  - '@azure-rest/confidential-ledger.MethodToEndpointProperties'
  - '@azure-rest/confidential-ledger.MethodToEndpointPropertiesOutput'
  - '@azure-rest/confidential-ledger.PageSettings'
  - '@azure-rest/confidential-ledger.PagedAsyncIterableIterator'
  - '@azure-rest/confidential-ledger.PagedCollectionsOutput'
  - '@azure-rest/confidential-ledger.PagedLedgerEntriesOutput'
  - '@azure-rest/confidential-ledger.PagedUserDefinedFunctionsOutput'
  - '@azure-rest/confidential-ledger.PagedUsersOutput'
  - '@azure-rest/confidential-ledger.PagingOptions'
  - '@azure-rest/confidential-ledger.ReceiptContentsOutput'
  - '@azure-rest/confidential-ledger.ReceiptElementOutput'
  - '@azure-rest/confidential-ledger.ReceiptLeafComponentsOutput'
  - '@azure-rest/confidential-ledger.Routes'
  - '@azure-rest/confidential-ledger.TransactionReceiptOutput'
  - '@azure-rest/confidential-ledger.TransactionStatusOutput'
  - '@azure-rest/confidential-ledger.UserDefinedFunctionOutput'
typeAliases:
  - '@azure-rest/confidential-ledger.ConfidentialLedgerClient'
  - '@azure-rest/confidential-ledger.CreateLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.CreateOrUpdateUserParameters'
  - '@azure-rest/confidential-ledger.CreateUserDefinedEndpointParameters'
  - '@azure-rest/confidential-ledger.DeleteUserParameters'
  - '@azure-rest/confidential-ledger.GetArrayType'
  - '@azure-rest/confidential-ledger.GetConstitutionParameters'
  - '@azure-rest/confidential-ledger.GetCurrentLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetEnclaveQuotesParameters'
  - '@azure-rest/confidential-ledger.GetLedgerEntryParameters'
  - '@azure-rest/confidential-ledger.GetPage'
  - '@azure-rest/confidential-ledger.GetReceiptParameters'
  - '@azure-rest/confidential-ledger.GetTransactionStatusParameters'
  - '@azure-rest/confidential-ledger.GetUserDefinedEndpointParameters'
  - '@azure-rest/confidential-ledger.GetUserParameters'
  - '@azure-rest/confidential-ledger.LedgerUserResourceMergeAndPatch'
  - '@azure-rest/confidential-ledger.ListCollectionsParameters'
  - '@azure-rest/confidential-ledger.ListConsortiumMembersParameters'
  - '@azure-rest/confidential-ledger.ListLedgerEntriesParameters'
  - '@azure-rest/confidential-ledger.ListUserDefinedFunctionsParameters'
  - '@azure-rest/confidential-ledger.ListUsersParameters'
  - '@azure-rest/confidential-ledger.PaginateReturn'
functions:
  - name: default(string, string, ClientOptions)
    uid: '@azure-rest/confidential-ledger.default'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(ledgerEndpoint: string, ledgerIdentityCertificate:
        string, options?: ClientOptions): ConfidentialLedgerClient
      parameters:
        - id: ledgerEndpoint
          type: string
          description: ''
        - id: ledgerIdentityCertificate
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/confidential-ledger.ConfidentialLedgerClient"
          />
  - name: default(string, string, TokenCredential, ClientOptions)
    uid: '@azure-rest/confidential-ledger.default_1'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(ledgerEndpoint: string, ledgerIdentityCertificate:
        string, credentials: TokenCredential, options?: ClientOptions):
        ConfidentialLedgerClient
      parameters:
        - id: ledgerEndpoint
          type: string
          description: ''
        - id: ledgerIdentityCertificate
          type: string
          description: ''
        - id: credentials
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/confidential-ledger.ConfidentialLedgerClient"
          />
  - name: getLedgerIdentity(string, string)
    uid: '@azure-rest/confidential-ledger.getLedgerIdentity'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getLedgerIdentity(ledgerId: string, identityServiceBaseUrl?:
        string): Promise<LedgerIdentity>
      parameters:
        - id: ledgerId
          type: string
          description: ''
        - id: identityServiceBaseUrl
          type: string
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure-rest/confidential-ledger.LedgerIdentity"
          />&gt;
  - name: isUnexpected(GetConstitution200Response | GetConstitutionDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetConstitution200Response |
        GetConstitutionDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetConstitution200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetConstitutionDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(ListConsortiumMembers200Response |
      ListConsortiumMembersDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_1'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListConsortiumMembers200Response |
        ListConsortiumMembersDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListConsortiumMembers200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.ListConsortiumMembersDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetEnclaveQuotes200Response |
      GetEnclaveQuotesDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_2'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetEnclaveQuotes200Response |
        GetEnclaveQuotesDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetEnclaveQuotes200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetEnclaveQuotesDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(ListCollections200Response | ListCollectionsDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_3'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListCollections200Response |
        ListCollectionsDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListCollections200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.ListCollectionsDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(ListLedgerEntries200Response |
      ListLedgerEntriesDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_4'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListLedgerEntries200Response |
        ListLedgerEntriesDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.ListLedgerEntries200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.ListLedgerEntriesDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(CreateLedgerEntry200Response |
      CreateLedgerEntryDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_5'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: CreateLedgerEntry200Response |
        CreateLedgerEntryDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.CreateLedgerEntry200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.CreateLedgerEntryDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetLedgerEntry200Response | GetLedgerEntryDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_6'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetLedgerEntry200Response |
        GetLedgerEntryDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetLedgerEntry200Response" /> |
            <xref
            uid="@azure-rest/confidential-ledger.GetLedgerEntryDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetReceipt200Response | GetReceiptDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_7'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetReceipt200Response |
        GetReceiptDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.GetReceipt200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.GetReceiptDefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetTransactionStatus200Response |
      GetTransactionStatusDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_8'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetTransactionStatus200Response |
        GetTransactionStatusDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetTransactionStatus200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.GetTransactionStatusDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(GetCurrentLedgerEntry200Response |
      GetCurrentLedgerEntryDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_9'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetCurrentLedgerEntry200Response |
        GetCurrentLedgerEntryDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.GetCurrentLedgerEntry200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.GetCurrentLedgerEntryDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(ListUsers200Response | ListUsersDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_10'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListUsers200Response |
        ListUsersDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.ListUsers200Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.ListUsersDefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(DeleteUser204Response | DeleteUserDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_11'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: DeleteUser204Response |
        DeleteUserDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.DeleteUser204Response" />
            | <xref
            uid="@azure-rest/confidential-ledger.DeleteUserDefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(GetUser200Response | GetUserDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_12'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetUser200Response |
        GetUserDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/confidential-ledger.GetUser200Response" /> |
            <xref uid="@azure-rest/confidential-ledger.GetUserDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(CreateOrUpdateUser200Response |
      CreateOrUpdateUserDefaultResponse)
    uid: '@azure-rest/confidential-ledger.isUnexpected_13'
    package: '@azure-rest/confidential-ledger'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: CreateOrUpdateUser200Response |
        CreateOrUpdateUserDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/confidential-ledger.CreateOrUpdateUser200Response"
            /> | <xref
            uid="@azure-rest/confidential-ledger.CreateOrUpdateUserDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: paginate<TResponse>(Client, TResponse, PagingOptions<TResponse>)
    uid: '@azure-rest/confidential-ledger.paginate'
    package: '@azure-rest/confidential-ledger'
    summary: >-
      Helper to paginate results from an initial response that follows the
      specification of Autorest `x-ms-pageable` extension
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function paginate<TResponse>(client: Client, initialResponse: TResponse,
        options?: PagingOptions<TResponse>):
        PagedAsyncIterableIterator<PaginateReturn<TResponse>>
      parameters:
        - id: client
          type: <xref uid="@azure-rest/core-client.Client" />
          description: Client to use for sending the next page requests
        - id: initialResponse
          type: TResponse
          description: >-
            Initial response containing the nextLink and current page of
            elements
        - id: options
          type: >-
            <xref uid="@azure-rest/confidential-ledger.PagingOptions"
            />&lt;TResponse&gt;
          description: ''
      return:
        description: '- PagedAsyncIterableIterator to iterate the elements'
        type: >-
          <xref uid="@azure-rest/confidential-ledger.PagedAsyncIterableIterator"
          />&lt;<xref uid="@azure-rest/confidential-ledger.PaginateReturn"
          />&lt;TResponse&gt;&gt;
