### YamlMime:TSType
name: CallWithChatAdapter
uid: '@azure/communication-react.CallWithChatAdapter'
package: '@azure/communication-react'
summary: >-
  [CallWithChatComposite](xref:@azure/communication-react.CallWithChatComposite)
  Adapter interface.
fullName: CallWithChatAdapter
remarks: ''
isDeprecated: false
type: interface
inheritedProperties:
  - name: forbidAudio
    uid: '@azure/communication-react.CallWithChatAdapter.forbidAudio'
    package: '@azure/communication-react'
    summary: forbids audio for the specified user ids.
    fullName: forbidAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'forbidAudio: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.forbidAudio](xref:@azure/communication-react.CallWithChatAdapterManagement.forbidAudio)
  - name: forbidOthersAudio
    uid: '@azure/communication-react.CallWithChatAdapter.forbidOthersAudio'
    package: '@azure/communication-react'
    summary: forbids audio for Teams meeting attendees except the local user.
    fullName: forbidOthersAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'forbidOthersAudio: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.forbidOthersAudio](xref:@azure/communication-react.CallWithChatAdapterManagement.forbidOthersAudio)
  - name: forbidOthersVideo
    uid: '@azure/communication-react.CallWithChatAdapter.forbidOthersVideo'
    package: '@azure/communication-react'
    summary: forbids video for Teams meeting attendees except the local user.
    fullName: forbidOthersVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'forbidOthersVideo: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.forbidOthersVideo](xref:@azure/communication-react.CallWithChatAdapterManagement.forbidOthersVideo)
  - name: forbidVideo
    uid: '@azure/communication-react.CallWithChatAdapter.forbidVideo'
    package: '@azure/communication-react'
    summary: forbids video for the specified user ids.
    fullName: forbidVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'forbidVideo: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.forbidVideo](xref:@azure/communication-react.CallWithChatAdapterManagement.forbidVideo)
  - name: permitAudio
    uid: '@azure/communication-react.CallWithChatAdapter.permitAudio'
    package: '@azure/communication-react'
    summary: permits audio for the specified user ids.
    fullName: permitAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'permitAudio: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.permitAudio](xref:@azure/communication-react.CallWithChatAdapterManagement.permitAudio)
  - name: permitOthersAudio
    uid: '@azure/communication-react.CallWithChatAdapter.permitOthersAudio'
    package: '@azure/communication-react'
    summary: permits audio for Teams meeting attendees except the local user.
    fullName: permitOthersAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'permitOthersAudio: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.permitOthersAudio](xref:@azure/communication-react.CallWithChatAdapterManagement.permitOthersAudio)
  - name: permitOthersVideo
    uid: '@azure/communication-react.CallWithChatAdapter.permitOthersVideo'
    package: '@azure/communication-react'
    summary: permits video for Teams meeting attendees except the local user.
    fullName: permitOthersVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'permitOthersVideo: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.permitOthersVideo](xref:@azure/communication-react.CallWithChatAdapterManagement.permitOthersVideo)
  - name: permitVideo
    uid: '@azure/communication-react.CallWithChatAdapter.permitVideo'
    package: '@azure/communication-react'
    summary: permits video for the specified user ids.
    fullName: permitVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'permitVideo: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.permitVideo](xref:@azure/communication-react.CallWithChatAdapterManagement.permitVideo)
  - name: sendDtmfTone
    uid: '@azure/communication-react.CallWithChatAdapter.sendDtmfTone'
    package: '@azure/communication-react'
    summary: send dtmf tone to another participant in the call in 1:1 calls
    fullName: sendDtmfTone
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'public sendDtmfTone: (dtmfTone: DtmfTone) => Promise<void>'
      return:
        description: ''
        type: '(dtmfTone: DtmfTone) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendDtmfTone](xref:@azure/communication-react.CallWithChatAdapterManagement.sendDtmfTone)
  - name: sendRealTimeText
    uid: '@azure/communication-react.CallWithChatAdapter.sendRealTimeText'
    package: '@azure/communication-react'
    summary: Send real time text
    fullName: sendRealTimeText
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'sendRealTimeText: (text: string, isFinalized: boolean) => Promise<void>'
      return:
        description: ''
        type: '(text: string, isFinalized: boolean) =&gt; Promise&lt;void&gt;'
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendRealTimeText](xref:@azure/communication-react.CallWithChatAdapterManagement.sendRealTimeText)
inheritedMethods:
  - name: addParticipant(CommunicationUserIdentifier)
    uid: '@azure/communication-react.CallWithChatAdapter.addParticipant_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(participant: CommunicationUserIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.addParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.addParticipant)
  - name: addParticipant(PhoneNumberIdentifier, AddPhoneNumberOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.addParticipant'
    package: '@azure/communication-react'
    summary: Adds a new Participant to the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(participant: PhoneNumberIdentifier, options?:
        AddPhoneNumberOptions): Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.PhoneNumberIdentifier" />
          description: ''
        - id: options
          type: <xref uid="@azure/communication-calling.AddPhoneNumberOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.addParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.addParticipant)
  - name: askDevicePermission(PermissionConstraints)
    uid: '@azure/communication-react.CallWithChatAdapter.askDevicePermission'
    package: '@azure/communication-react'
    summary: Ask for permissions of devices.
    remarks: Browser permission window will pop up if permissions are not granted yet.
    isDeprecated: false
    syntax:
      content: >-
        function askDevicePermission(constrain: PermissionConstraints):
        Promise<DeviceAccess>
      parameters:
        - id: constrain
          type: <xref uid="@azure/communication-calling.PermissionConstraints" />
          description: >-
            Define constraints for accessing local devices
            [@azure/communication-calling#PermissionConstraints](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.DeviceAccess"
          />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.askDevicePermission](xref:@azure/communication-react.CallWithChatAdapterManagement.askDevicePermission)
  - name: createStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.createStreamView'
    package: '@azure/communication-react'
    summary: Create the html view for a stream.
    remarks: This method is implemented for composite.
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void | CreateVideoStreamViewResult>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to create the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            [@azure/communication-calling#VideoStreamOptions](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.CreateVideoStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.createStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.createStreamView)
  - name: createTogetherModeStreamView(TogetherModeStreamOptions)
    uid: >-
      @azure/communication-react.CallWithChatAdapter.createTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Create the html view for a togethermode stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function createTogetherModeStreamView(options?:
        TogetherModeStreamOptions): Promise<void | TogetherModeStreamViewResult>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.TogetherModeStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            [@azure/communication-calling#VideoStreamOptions](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.TogetherModeStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.createTogetherModeStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.createTogetherModeStreamView)
  - name: deleteMessage(string)
    uid: '@azure/communication-react.CallWithChatAdapter.deleteMessage'
    package: '@azure/communication-react'
    summary: Delete a message in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string): Promise<void>'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.deleteMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.deleteMessage)
  - name: dispose()
    uid: '@azure/communication-react.CallWithChatAdapter.dispose'
    package: '@azure/communication-react'
    summary: Dispose of the Composite
    remarks: ''
    isDeprecated: false
    syntax:
      content: function dispose()
    inheritanceDescription: <b>Inherited From</b> [Disposable_2.dispose](xref:Disposable_2.dispose)
  - name: disposeLocalVideoStreamView()
    uid: '@azure/communication-react.CallWithChatAdapter.disposeLocalVideoStreamView'
    package: '@azure/communication-react'
    summary: Dispose the html view for a local video stream
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function disposeLocalVideoStreamView(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeLocalVideoStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeLocalVideoStreamView)
  - name: disposeRemoteVideoStreamView(string)
    uid: >-
      @azure/communication-react.CallWithChatAdapter.disposeRemoteVideoStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a remote video stream
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function disposeRemoteVideoStreamView(remoteUserId: string):
        Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: Id of the participant to dispose
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeRemoteVideoStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeRemoteVideoStreamView)
  - name: disposeScreenShareStreamView(string)
    uid: >-
      @azure/communication-react.CallWithChatAdapter.disposeScreenShareStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a screen share stream
    remarks: this method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function disposeScreenShareStreamView(remoteUserId: string):
        Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: Id of the participant to dispose the screen share stream view for.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeScreenShareStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeScreenShareStreamView)
  - name: disposeStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.disposeStreamView'
    package: '@azure/communication-react'
    summary: Dispose the html view for a stream.
    remarks: This method is implemented for composite.
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to dispose the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            [@azure/communication-calling#VideoStreamOptions](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeStreamView)
  - name: disposeTogetherModeStreamView()
    uid: >-
      @azure/communication-react.CallWithChatAdapter.disposeTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Dispose the html view for a togethermode stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: 'function disposeTogetherModeStreamView(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeTogetherModeStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeTogetherModeStreamView)
  - name: downloadResourceToCache(ResourceDetails)
    uid: '@azure/communication-react.CallWithChatAdapter.downloadResourceToCache'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function downloadResourceToCache(resourceDetails: ResourceDetails):
        Promise<void>
      parameters:
        - id: resourceDetails
          type: <xref uid="@azure/communication-react.ResourceDetails" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.downloadResourceToCache](xref:@azure/communication-react.CallWithChatAdapterManagement.downloadResourceToCache)
  - name: fetchInitialData()
    uid: '@azure/communication-react.CallWithChatAdapter.fetchInitialData'
    package: '@azure/communication-react'
    summary: |-
      Fetch initial state for the Chat adapter.

      Performs the minimal fetch necessary for ChatComposite and API methods.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function fetchInitialData(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.fetchInitialData](xref:@azure/communication-react.CallWithChatAdapterManagement.fetchInitialData)
  - name: getState()
    uid: '@azure/communication-react.CallWithChatAdapter.getState'
    package: '@azure/communication-react'
    summary: Get the current State
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getState(): CallWithChatAdapterState'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.CallWithChatAdapterState" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.getState](xref:@azure/communication-react.AdapterState.getState)
  - name: holdCall()
    uid: '@azure/communication-react.CallWithChatAdapter.holdCall'
    package: '@azure/communication-react'
    summary: Puts the Call in a Localhold.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function holdCall(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.holdCall](xref:@azure/communication-react.CallWithChatAdapterManagement.holdCall)
  - name: joinCall(boolean)
    uid: '@azure/communication-react.CallWithChatAdapter.joinCall'
    package: '@azure/communication-react'
    summary: Join the call with microphone initially on/off.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use joinCall(options?:JoinCallOptions) instead.
    syntax:
      content: 'function joinCall(microphoneOn?: boolean): undefined | Call'
      parameters:
        - id: microphoneOn
          type: boolean
          description: Whether microphone is initially enabled
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.joinCall](xref:@azure/communication-react.CallWithChatAdapterManagement.joinCall)
  - name: joinCall(JoinCallOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.joinCall_1'
    package: '@azure/communication-react'
    summary: >-
      Join the call with options bag to set microphone/camera initial state when
      joining call

      true = turn on the device when joining call

      false = turn off the device when joining call

      'keep'/undefined = retain devices' precall state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function joinCall(options?: JoinCallOptions): undefined | Call'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.JoinCallOptions" />
          description: param to set microphone/camera initially on/off/use precall state.
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.joinCall](xref:@azure/communication-react.CallWithChatAdapterManagement.joinCall)
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.CallWithChatAdapter.leaveCall'
    package: '@azure/communication-react'
    summary: Leave the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean): Promise<void>'
      parameters:
        - id: forEveryone
          type: boolean
          description: Whether to remove all participants when leaving
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.leaveCall](xref:@azure/communication-react.CallWithChatAdapterManagement.leaveCall)
  - name: loadPreviousChatMessages(number)
    uid: '@azure/communication-react.CallWithChatAdapter.loadPreviousChatMessages'
    package: '@azure/communication-react'
    summary: Load more previous messages in the chat thread history.
    remarks: This method is usually used to control incremental fetch/infinite scroll.
    isDeprecated: false
    syntax:
      content: >-
        function loadPreviousChatMessages(messagesToLoad: number):
        Promise<boolean>
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.loadPreviousChatMessages](xref:@azure/communication-react.CallWithChatAdapterManagement.loadPreviousChatMessages)
  - name: lowerHand()
    uid: '@azure/communication-react.CallWithChatAdapter.lowerHand'
    package: '@azure/communication-react'
    summary: Lower hand for local user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function lowerHand(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.lowerHand](xref:@azure/communication-react.CallWithChatAdapterManagement.lowerHand)
  - name: mute()
    uid: '@azure/communication-react.CallWithChatAdapter.mute'
    package: '@azure/communication-react'
    summary: Mute the current user during the call or disable microphone locally.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.mute](xref:@azure/communication-react.CallWithChatAdapterManagement.mute)
  - name: muteAllRemoteParticipants()
    uid: '@azure/communication-react.CallWithChatAdapter.muteAllRemoteParticipants'
    package: '@azure/communication-react'
    summary: Mute a participant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function muteAllRemoteParticipants(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.muteAllRemoteParticipants](xref:@azure/communication-react.CallWithChatAdapterManagement.muteAllRemoteParticipants)
  - name: muteParticipant(string)
    uid: '@azure/communication-react.CallWithChatAdapter.muteParticipant'
    package: '@azure/communication-react'
    summary: Mute a participant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function muteParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.muteParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.muteParticipant)
  - name: off("breakoutRoomsUpdated", BreakoutRoomsUpdatedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_18'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "breakoutRoomsUpdated", listener:
        BreakoutRoomsUpdatedListener)
      parameters:
        - id: event
          type: '"breakoutRoomsUpdated"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-calling.BreakoutRoomsUpdatedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'off("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.off_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callParticipantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callParticipantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("capabilitiesChanged", CapabilitiesChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "capabilitiesChanged", listener:
        CapabilitiesChangedListener)
      parameters:
        - id: event
          type: '"capabilitiesChanged"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.CapabilitiesChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("captionsReceived", CaptionsReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "captionsReceived", listener:
        CaptionsReceivedListener)
      parameters:
        - id: event
          type: '"captionsReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CaptionsReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'off("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.off_26'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("chatInitialized", ChatInitializedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_27'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatInitialized", listener:
        ChatInitializedListener)
      parameters:
        - id: event
          type: '"chatInitialized"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ChatInitializedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("chatParticipantsAdded", ParticipantsAddedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_24'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("chatParticipantsRemoved", ParticipantsRemovedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_25'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isCaptionLanguageChanged", IsCaptionLanguageChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isCaptionLanguageChanged", listener:
        IsCaptionLanguageChangedListener)
      parameters:
        - id: event
          type: '"isCaptionLanguageChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsCaptionLanguageChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isCaptionsActiveChanged", IsCaptionsActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isCaptionsActiveChanged", listener:
        IsCaptionsActiveChangedListener)
      parameters:
        - id: event
          type: '"isCaptionsActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsCaptionsActiveChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: >-
      off("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isSpokenLanguageChanged", IsSpokenLanguageChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpokenLanguageChanged", listener:
        IsSpokenLanguageChangedListener)
      parameters:
        - id: event
          type: '"isSpokenLanguageChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsSpokenLanguageChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageDeleted", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_21'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageDeleted", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageDeleted"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageEdited", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_20'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageEdited", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageEdited"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageRead", MessageReadListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_23'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageReceived", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_19'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageSent", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_22'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("realTimeTextReceived", RealTimeTextReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "realTimeTextReceived", listener:
        RealTimeTextReceivedListener)
      parameters:
        - id: event
          type: '"realTimeTextReceived"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.RealTimeTextReceivedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.off_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.off_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("spotlightChanged", SpotlightChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_17'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "spotlightChanged", listener:
        SpotlightChangedListener)
      parameters:
        - id: event
          type: '"spotlightChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.SpotlightChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'offStateChange((state: CallWithChatAdapterState) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: Unsubscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function offStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.offStateChange](xref:@azure/communication-react.AdapterState.offStateChange)
  - name: on("breakoutRoomsUpdated", BreakoutRoomsUpdatedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_18'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "breakoutRoomsUpdated", listener:
        BreakoutRoomsUpdatedListener)
      parameters:
        - id: event
          type: '"breakoutRoomsUpdated"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-calling.BreakoutRoomsUpdatedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: 'on("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.on_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callParticipantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callParticipantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("capabilitiesChanged", CapabilitiesChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "capabilitiesChanged", listener:
        CapabilitiesChangedListener)
      parameters:
        - id: event
          type: '"capabilitiesChanged"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.CapabilitiesChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("captionsReceived", CaptionsReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "captionsReceived", listener:
        CaptionsReceivedListener)
      parameters:
        - id: event
          type: '"captionsReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CaptionsReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: 'on("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.on_26'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("chatInitialized", ChatInitializedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_27'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "chatInitialized", listener: ChatInitializedListener)'
      parameters:
        - id: event
          type: '"chatInitialized"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ChatInitializedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("chatParticipantsAdded", ParticipantsAddedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_24'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("chatParticipantsRemoved", ParticipantsRemovedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_25'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isCaptionLanguageChanged", IsCaptionLanguageChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isCaptionLanguageChanged", listener:
        IsCaptionLanguageChangedListener)
      parameters:
        - id: event
          type: '"isCaptionLanguageChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsCaptionLanguageChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isCaptionsActiveChanged", IsCaptionsActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isCaptionsActiveChanged", listener:
        IsCaptionsActiveChangedListener)
      parameters:
        - id: event
          type: '"isCaptionsActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsCaptionsActiveChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: >-
      on("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isSpokenLanguageChanged", IsSpokenLanguageChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpokenLanguageChanged", listener:
        IsSpokenLanguageChangedListener)
      parameters:
        - id: event
          type: '"isSpokenLanguageChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsSpokenLanguageChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageDeleted", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_21'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageDeleted", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageDeleted"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageEdited", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_20'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageEdited", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageEdited"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageRead", MessageReadListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_23'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageReceived", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_19'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageSent", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_22'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("realTimeTextReceived", RealTimeTextReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "realTimeTextReceived", listener:
        RealTimeTextReceivedListener)
      parameters:
        - id: event
          type: '"realTimeTextReceived"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.RealTimeTextReceivedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.on_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.on_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("spotlightChanged", SpotlightChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_17'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "spotlightChanged", listener:
        SpotlightChangedListener)
      parameters:
        - id: event
          type: '"spotlightChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.SpotlightChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: onReactionClick(Reaction)
    uid: '@azure/communication-react.CallWithChatAdapter.onReactionClick'
    package: '@azure/communication-react'
    summary: Send Reaction to ongoing meeting.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onReactionClick(reaction: Reaction): Promise<void>'
      parameters:
        - id: reaction
          type: <xref uid="@azure/communication-calling.Reaction" />
          description: >-
            A value of type
            [@azure/communication-calling#Reaction](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.onReactionClick](xref:@azure/communication-react.CallWithChatAdapterManagement.onReactionClick)
  - name: 'onStateChange((state: CallWithChatAdapterState) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: Subscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.onStateChange](xref:@azure/communication-react.AdapterState.onStateChange)
  - name: queryCameras()
    uid: '@azure/communication-react.CallWithChatAdapter.queryCameras'
    package: '@azure/communication-react'
    summary: Query for available camera devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryCameras(): Promise<VideoDeviceInfo[]>'
      return:
        description: >-
          An array of video device information entities
          [@azure/communication-calling#VideoDeviceInfo](xref:@azure/communication-react.CallAdapter.on_1)
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.VideoDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.queryCameras](xref:@azure/communication-react.CallWithChatAdapterManagement.queryCameras)
  - name: queryMicrophones()
    uid: '@azure/communication-react.CallWithChatAdapter.queryMicrophones'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryMicrophones(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          [@azure/communication-calling#AudioDeviceInfo](xref:@azure/communication-react.CallAdapter.on_1)
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.queryMicrophones](xref:@azure/communication-react.CallWithChatAdapterManagement.queryMicrophones)
  - name: querySpeakers()
    uid: '@azure/communication-react.CallWithChatAdapter.querySpeakers'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function querySpeakers(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          [@azure/communication-calling#AudioDeviceInfo](xref:@azure/communication-react.CallAdapter.on_1)
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.querySpeakers](xref:@azure/communication-react.CallWithChatAdapterManagement.querySpeakers)
  - name: raiseHand()
    uid: '@azure/communication-react.CallWithChatAdapter.raiseHand'
    package: '@azure/communication-react'
    summary: Raise hand for local user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function raiseHand(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.raiseHand](xref:@azure/communication-react.CallWithChatAdapterManagement.raiseHand)
  - name: removeParticipant(CommunicationIdentifier)
    uid: '@azure/communication-react.CallWithChatAdapter.removeParticipant_1'
    package: '@azure/communication-react'
    summary: Remove a participant from the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function removeParticipant(participant: CommunicationIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.CommunicationIdentifier" />
          description: >-
            [@azure/communication-common#CommunicationIdentifier](xref:@azure/communication-react.CallAdapter.on_1)
            of the participant to be removed
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.removeParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.removeParticipant)
  - name: removeParticipant(string)
    uid: '@azure/communication-react.CallWithChatAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant from a Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: UserId of the participant to remove.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.removeParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.removeParticipant)
  - name: removeResourceFromCache(ResourceDetails)
    uid: '@azure/communication-react.CallWithChatAdapter.removeResourceFromCache'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeResourceFromCache(resourceDetails: ResourceDetails)'
      parameters:
        - id: resourceDetails
          type: <xref uid="@azure/communication-react.ResourceDetails" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.removeResourceFromCache](xref:@azure/communication-react.CallWithChatAdapterManagement.removeResourceFromCache)
  - name: resumeCall()
    uid: '@azure/communication-react.CallWithChatAdapter.resumeCall'
    package: '@azure/communication-react'
    summary: Resumes the call from a LocalHold state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function resumeCall(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.resumeCall](xref:@azure/communication-react.CallWithChatAdapterManagement.resumeCall)
  - name: returnFromBreakoutRoom()
    uid: '@azure/communication-react.CallWithChatAdapter.returnFromBreakoutRoom'
    package: '@azure/communication-react'
    summary: Return to origin call of breakout room
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function returnFromBreakoutRoom(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.returnFromBreakoutRoom](xref:@azure/communication-react.CallWithChatAdapterManagement.returnFromBreakoutRoom)
  - name: sendMessage(string, SendMessageOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: Send a message in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendMessage(content: string, options?: SendMessageOptions):
        Promise<void>
      parameters:
        - id: content
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-chat.SendMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.sendMessage)
  - name: sendReadReceipt(string)
    uid: '@azure/communication-react.CallWithChatAdapter.sendReadReceipt'
    package: '@azure/communication-react'
    summary: Send a read receipt for a message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string): Promise<void>'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendReadReceipt](xref:@azure/communication-react.CallWithChatAdapterManagement.sendReadReceipt)
  - name: sendTypingIndicator()
    uid: '@azure/communication-react.CallWithChatAdapter.sendTypingIndicator'
    package: '@azure/communication-react'
    summary: Send typing indicator in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendTypingIndicator(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendTypingIndicator](xref:@azure/communication-react.CallWithChatAdapterManagement.sendTypingIndicator)
  - name: setCamera(VideoDeviceInfo, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.setCamera'
    package: '@azure/communication-react'
    summary: Set the camera to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(sourceInfo: VideoDeviceInfo, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.VideoDeviceInfo" />
          description: >-
            Camera device to choose, pick one returned by 
            [queryCameras](xref:@azure/communication-react.CallAdapterDeviceManagement.queryCameras)
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how the camera stream is rendered
            [@azure/communication-calling#VideoStreamOptions](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.setCamera)
  - name: setCaptionLanguage(string)
    uid: '@azure/communication-react.CallWithChatAdapter.setCaptionLanguage'
    package: '@azure/communication-react'
    summary: Function to set caption language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setCaptionLanguage(language: string): Promise<void>'
      parameters:
        - id: language
          type: string
          description: language set for caption
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setCaptionLanguage](xref:@azure/communication-react.CallWithChatAdapterManagement.setCaptionLanguage)
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CallWithChatAdapter.setMicrophone'
    package: '@azure/communication-react'
    summary: Set the microphone to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Microphone device to choose, pick one returned by
            [queryMicrophones](xref:@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setMicrophone](xref:@azure/communication-react.CallWithChatAdapterManagement.setMicrophone)
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CallWithChatAdapter.setSpeaker'
    package: '@azure/communication-react'
    summary: Set the speaker to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Speaker device to choose, pick one returned by
            [querySpeakers](xref:@azure/communication-react.CallAdapterDeviceManagement.querySpeakers)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setSpeaker](xref:@azure/communication-react.CallWithChatAdapterManagement.setSpeaker)
  - name: setSpokenLanguage(string)
    uid: '@azure/communication-react.CallWithChatAdapter.setSpokenLanguage'
    package: '@azure/communication-react'
    summary: Function to set spoken language
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpokenLanguage(language: string): Promise<void>'
      parameters:
        - id: language
          type: string
          description: spoken language
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setSpokenLanguage](xref:@azure/communication-react.CallWithChatAdapterManagement.setSpokenLanguage)
  - name: setTogetherModeSceneSize(number, number)
    uid: '@azure/communication-react.CallWithChatAdapter.setTogetherModeSceneSize'
    package: '@azure/communication-react'
    summary: Recalculate the seating positions for together mode.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: 'function setTogetherModeSceneSize(width: number, height: number)'
      parameters:
        - id: width
          type: number
          description: Width of the container
        - id: height
          type: number
          description: Height of the container
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setTogetherModeSceneSize](xref:@azure/communication-react.CallWithChatAdapterManagement.setTogetherModeSceneSize)
  - name: >-
      startCall((CommunicationUserIdentifier | PhoneNumberIdentifier |
      MicrosoftTeamsUserIdentifier | MicrosoftTeamsAppIdentifier |
      UnknownIdentifier)[], StartCallOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCall_1'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: (CommunicationUserIdentifier |
        PhoneNumberIdentifier | MicrosoftTeamsUserIdentifier |
        MicrosoftTeamsAppIdentifier | UnknownIdentifier)[], options?:
        StartCallOptions): undefined | Call
      parameters:
        - id: participants
          type: >-
            (<xref uid="@azure/communication-common.CommunicationUserIdentifier"
            /> | <xref uid="@azure/communication-common.PhoneNumberIdentifier"
            /> | <xref
            uid="@azure/communication-common.MicrosoftTeamsUserIdentifier" /> |
            <xref uid="@azure/communication-common.MicrosoftTeamsAppIdentifier"
            /> | <xref uid="@azure/communication-common.UnknownIdentifier" />)[]
          description: >-
            An array of
            [@azure/communication-common#CommunicationIdentifier](xref:@azure/communication-react.CallAdapter.on_1)
            to be called
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCall](xref:@azure/communication-react.CallWithChatAdapterManagement.startCall)
  - name: startCall(string[], StartCallOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCall'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: string[], options?: StartCallOptions):
        undefined | Call
      parameters:
        - id: participants
          type: string[]
          description: An array of participant ids to join
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCall](xref:@azure/communication-react.CallWithChatAdapterManagement.startCall)
  - name: startCamera(VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCamera'
    package: '@azure/communication-react'
    summary: >-
      Start the camera.


      This method will start rendering a local camera view when the call is not
      active.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCamera(options?: VideoStreamOptions): Promise<void>'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            [@azure/communication-calling#VideoStreamOptions](xref:@azure/communication-react.CallAdapter.on_1)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.startCamera)
  - name: startCaptions(StartCaptionsAdapterOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCaptions'
    package: '@azure/communication-react'
    summary: Function to Start captions
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCaptions(options?: StartCaptionsAdapterOptions):
        Promise<void>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/communication-react.StartCaptionsAdapterOptions"
            />
          description: options for start captions
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCaptions](xref:@azure/communication-react.CallWithChatAdapterManagement.startCaptions)
  - name: startNoiseSuppressionEffect()
    uid: '@azure/communication-react.CallWithChatAdapter.startNoiseSuppressionEffect'
    package: '@azure/communication-react'
    summary: Start the noise suppression effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startNoiseSuppressionEffect(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startNoiseSuppressionEffect](xref:@azure/communication-react.CallWithChatAdapterManagement.startNoiseSuppressionEffect)
  - name: startScreenShare()
    uid: '@azure/communication-react.CallWithChatAdapter.startScreenShare'
    package: '@azure/communication-react'
    summary: Start sharing the screen during a call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startScreenShare](xref:@azure/communication-react.CallWithChatAdapterManagement.startScreenShare)
  - name: startSpotlight(string[])
    uid: '@azure/communication-react.CallWithChatAdapter.startSpotlight'
    package: '@azure/communication-react'
    summary: Start spotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startSpotlight(userIds?: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startSpotlight](xref:@azure/communication-react.CallWithChatAdapterManagement.startSpotlight)
  - name: startTogetherMode()
    uid: '@azure/communication-react.CallWithChatAdapter.startTogetherMode'
    package: '@azure/communication-react'
    summary: Start together mode.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: 'function startTogetherMode(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startTogetherMode](xref:@azure/communication-react.CallWithChatAdapterManagement.startTogetherMode)
  - name: startVideoBackgroundEffect(VideoBackgroundEffect)
    uid: '@azure/communication-react.CallWithChatAdapter.startVideoBackgroundEffect'
    package: '@azure/communication-react'
    summary: Start the video background effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startVideoBackgroundEffect(videoBackgroundEffect:
        VideoBackgroundEffect): Promise<void>
      parameters:
        - id: videoBackgroundEffect
          type: <xref uid="@azure/communication-react.VideoBackgroundEffect" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startVideoBackgroundEffect](xref:@azure/communication-react.CallWithChatAdapterManagement.startVideoBackgroundEffect)
  - name: stopAllSpotlight()
    uid: '@azure/communication-react.CallWithChatAdapter.stopAllSpotlight'
    package: '@azure/communication-react'
    summary: Stop all spotlights
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopAllSpotlight(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopAllSpotlight](xref:@azure/communication-react.CallWithChatAdapterManagement.stopAllSpotlight)
  - name: stopCamera()
    uid: '@azure/communication-react.CallWithChatAdapter.stopCamera'
    package: '@azure/communication-react'
    summary: >-
      Stop the camera.


      This method will stop rendering a local camera view when the call is not
      active.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopCamera(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.stopCamera)
  - name: stopCaptions(StopCaptionsAdapterOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.stopCaptions'
    package: '@azure/communication-react'
    summary: Funtion to stop captions
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function stopCaptions(options?: StopCaptionsAdapterOptions):
        Promise<void>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.StopCaptionsAdapterOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopCaptions](xref:@azure/communication-react.CallWithChatAdapterManagement.stopCaptions)
  - name: stopNoiseSuppressionEffect()
    uid: '@azure/communication-react.CallWithChatAdapter.stopNoiseSuppressionEffect'
    package: '@azure/communication-react'
    summary: Start the noise suppression effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopNoiseSuppressionEffect(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopNoiseSuppressionEffect](xref:@azure/communication-react.CallWithChatAdapterManagement.stopNoiseSuppressionEffect)
  - name: stopScreenShare()
    uid: '@azure/communication-react.CallWithChatAdapter.stopScreenShare'
    package: '@azure/communication-react'
    summary: Stop sharing the screen.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopScreenShare](xref:@azure/communication-react.CallWithChatAdapterManagement.stopScreenShare)
  - name: stopSpotlight(string[])
    uid: '@azure/communication-react.CallWithChatAdapter.stopSpotlight'
    package: '@azure/communication-react'
    summary: Stop spotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopSpotlight(userIds?: string[]): Promise<void>'
      parameters:
        - id: userIds
          type: string[]
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopSpotlight](xref:@azure/communication-react.CallWithChatAdapterManagement.stopSpotlight)
  - name: stopVideoBackgroundEffects()
    uid: '@azure/communication-react.CallWithChatAdapter.stopVideoBackgroundEffects'
    package: '@azure/communication-react'
    summary: Stop the video background effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopVideoBackgroundEffects(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopVideoBackgroundEffects](xref:@azure/communication-react.CallWithChatAdapterManagement.stopVideoBackgroundEffects)
  - name: submitSurvey(CallSurvey)
    uid: '@azure/communication-react.CallWithChatAdapter.submitSurvey'
    package: '@azure/communication-react'
    summary: Send the end of call survey result
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitSurvey(survey: CallSurvey): Promise<undefined |
        CallSurveyResponse>
      parameters:
        - id: survey
          type: <xref uid="@azure/communication-calling.CallSurvey" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;undefined | <xref
          uid="@azure/communication-calling.CallSurveyResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.submitSurvey](xref:@azure/communication-react.CallWithChatAdapterManagement.submitSurvey)
  - name: unmute()
    uid: '@azure/communication-react.CallWithChatAdapter.unmute'
    package: '@azure/communication-react'
    summary: Unmute the current user during the call or enable microphone locally.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unmute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.unmute](xref:@azure/communication-react.CallWithChatAdapterManagement.unmute)
  - name: updateBackgroundPickerImages(VideoBackgroundImage[])
    uid: >-
      @azure/communication-react.CallWithChatAdapter.updateBackgroundPickerImages
    package: '@azure/communication-react'
    summary: Override the background picker images for background replacement effect.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateBackgroundPickerImages(backgroundImages:
        VideoBackgroundImage[])
      parameters:
        - id: backgroundImages
          type: <xref uid="@azure/communication-react.VideoBackgroundImage" />[]
          description: Array of custom background images.
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.updateBackgroundPickerImages](xref:@azure/communication-react.CallWithChatAdapterManagement.updateBackgroundPickerImages)
  - name: updateMessage(string, string, Record<string, string>)
    uid: '@azure/communication-react.CallWithChatAdapter.updateMessage'
    package: '@azure/communication-react'
    summary: Update a message content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, content: string, options?:
        Record<string, string>): Promise<void>
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: options
          type: Record&lt;string, string&gt;
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.updateMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.updateMessage)
  - name: updateSelectedVideoBackgroundEffect(VideoBackgroundEffect)
    uid: >-
      @azure/communication-react.CallWithChatAdapter.updateSelectedVideoBackgroundEffect
    package: '@azure/communication-react'
    summary: Update the selected video background effect
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateSelectedVideoBackgroundEffect(selectedVideoBackground:
        VideoBackgroundEffect)
      parameters:
        - id: selectedVideoBackground
          type: <xref uid="@azure/communication-react.VideoBackgroundEffect" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.updateSelectedVideoBackgroundEffect](xref:@azure/communication-react.CallWithChatAdapterManagement.updateSelectedVideoBackgroundEffect)
extends: >-
  <xref uid="@azure/communication-react.CallWithChatAdapterManagement" />,<xref
  uid="@azure/communication-react.AdapterState" />&lt;<xref
  uid="@azure/communication-react.CallWithChatAdapterState" />&gt;,<xref
  uid="@azure/communication-react.Disposable" />,<xref
  uid="@azure/communication-react.CallWithChatAdapterSubscriptions" />
