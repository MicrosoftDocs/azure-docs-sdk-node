### YamlMime:TSPackage
uid: '@azure/arm-neonpostgres'
name: '@azure/arm-neonpostgres'
summary: ''
type: package
enums:
  - '@azure/arm-neonpostgres.KnownActionType'
  - '@azure/arm-neonpostgres.KnownCreatedByType'
  - '@azure/arm-neonpostgres.KnownEndpointType'
  - '@azure/arm-neonpostgres.KnownMarketplaceSubscriptionStatus'
  - '@azure/arm-neonpostgres.KnownOrigin'
  - '@azure/arm-neonpostgres.KnownResourceProvisioningState'
  - '@azure/arm-neonpostgres.KnownSingleSignOnStates'
  - '@azure/arm-neonpostgres.KnownVersions'
classes:
  - '@azure/arm-neonpostgres.PostgresClient'
interfaces:
  - '@azure/arm-neonpostgres.Attributes'
  - '@azure/arm-neonpostgres.Branch'
  - '@azure/arm-neonpostgres.BranchProperties'
  - '@azure/arm-neonpostgres.BranchesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.BranchesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.BranchesGetOptionalParams'
  - '@azure/arm-neonpostgres.BranchesListOptionalParams'
  - '@azure/arm-neonpostgres.BranchesOperations'
  - '@azure/arm-neonpostgres.BranchesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.CompanyDetails'
  - '@azure/arm-neonpostgres.Compute'
  - '@azure/arm-neonpostgres.ComputeProperties'
  - '@azure/arm-neonpostgres.ComputesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ComputesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.ComputesGetOptionalParams'
  - '@azure/arm-neonpostgres.ComputesListOptionalParams'
  - '@azure/arm-neonpostgres.ComputesOperations'
  - '@azure/arm-neonpostgres.ComputesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ConnectionUriProperties'
  - '@azure/arm-neonpostgres.DefaultEndpointSettings'
  - '@azure/arm-neonpostgres.Endpoint'
  - '@azure/arm-neonpostgres.EndpointProperties'
  - '@azure/arm-neonpostgres.EndpointsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsGetOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsListOptionalParams'
  - '@azure/arm-neonpostgres.EndpointsOperations'
  - '@azure/arm-neonpostgres.EndpointsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ErrorAdditionalInfo'
  - '@azure/arm-neonpostgres.ErrorDetail'
  - '@azure/arm-neonpostgres.ErrorResponse'
  - '@azure/arm-neonpostgres.MarketplaceDetails'
  - '@azure/arm-neonpostgres.NeonDatabase'
  - '@azure/arm-neonpostgres.NeonDatabaseProperties'
  - '@azure/arm-neonpostgres.NeonDatabasesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesGetOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesListOptionalParams'
  - '@azure/arm-neonpostgres.NeonDatabasesOperations'
  - '@azure/arm-neonpostgres.NeonDatabasesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonRole'
  - '@azure/arm-neonpostgres.NeonRoleProperties'
  - '@azure/arm-neonpostgres.NeonRolesCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesDeleteOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesGetOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesListOptionalParams'
  - '@azure/arm-neonpostgres.NeonRolesOperations'
  - '@azure/arm-neonpostgres.NeonRolesUpdateOptionalParams'
  - '@azure/arm-neonpostgres.OfferDetails'
  - '@azure/arm-neonpostgres.Operation'
  - '@azure/arm-neonpostgres.OperationDisplay'
  - '@azure/arm-neonpostgres.OperationsListOptionalParams'
  - '@azure/arm-neonpostgres.OperationsOperations'
  - '@azure/arm-neonpostgres.OrganizationProperties'
  - '@azure/arm-neonpostgres.OrganizationResource'
  - '@azure/arm-neonpostgres.OrganizationsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsGetOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsGetPostgresVersionsOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsListByResourceGroupOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsListBySubscriptionOptionalParams'
  - '@azure/arm-neonpostgres.OrganizationsOperations'
  - '@azure/arm-neonpostgres.OrganizationsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.PageSettings'
  - '@azure/arm-neonpostgres.PagedAsyncIterableIterator'
  - '@azure/arm-neonpostgres.PartnerOrganizationProperties'
  - '@azure/arm-neonpostgres.PgVersion'
  - '@azure/arm-neonpostgres.PgVersionsResult'
  - '@azure/arm-neonpostgres.PostgresClientOptionalParams'
  - '@azure/arm-neonpostgres.Project'
  - '@azure/arm-neonpostgres.ProjectProperties'
  - '@azure/arm-neonpostgres.ProjectsCreateOrUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsDeleteOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsGetConnectionUriOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsGetOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsListOptionalParams'
  - '@azure/arm-neonpostgres.ProjectsOperations'
  - '@azure/arm-neonpostgres.ProjectsUpdateOptionalParams'
  - '@azure/arm-neonpostgres.ProxyResource'
  - '@azure/arm-neonpostgres.Resource'
  - '@azure/arm-neonpostgres.RestorePollerOptions'
  - '@azure/arm-neonpostgres.SingleSignOnProperties'
  - '@azure/arm-neonpostgres.SystemData'
  - '@azure/arm-neonpostgres.TrackedResource'
  - '@azure/arm-neonpostgres.UserDetails'
typeAliases:
  - '@azure/arm-neonpostgres.ActionType'
  - '@azure/arm-neonpostgres.ContinuablePage'
  - '@azure/arm-neonpostgres.CreatedByType'
  - '@azure/arm-neonpostgres.EndpointType'
  - '@azure/arm-neonpostgres.MarketplaceSubscriptionStatus'
  - '@azure/arm-neonpostgres.Origin'
  - '@azure/arm-neonpostgres.ResourceProvisioningState'
  - '@azure/arm-neonpostgres.SingleSignOnStates'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(PostgresClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-neonpostgres.restorePoller'
    package: '@azure/arm-neonpostgres'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: PostgresClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-neonpostgres.PostgresClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-neonpostgres.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
