### YamlMime:TSType
name: Variables
uid: '@azure/arm-policy.Variables'
package: '@azure/arm-policy'
summary: Interface representing a Variables.
fullName: Variables
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: createOrUpdate(string, Variable, VariablesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-policy.Variables.createOrUpdate'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a variable with the given subscription
      and name. Policy variables

      can only be used by a policy definition at the scope they are created or
      below.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(variableName: string, parameters: Variable,
        options?: VariablesCreateOrUpdateOptionalParams): Promise<Variable>
      parameters:
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: parameters
          type: <xref uid="@azure/arm-policy.Variable" />
          description: Parameters for the variable.
        - id: options
          type: >-
            <xref uid="@azure/arm-policy.VariablesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.Variable" />&gt;
  - name: >-
      createOrUpdateAtManagementGroup(string, string, Variable,
      VariablesCreateOrUpdateAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.Variables.createOrUpdateAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a variable with the given  management
      group and name. Policy

      variables can only be used by a policy definition at the scope they are
      created or below.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        variableName: string, parameters: Variable, options?:
        VariablesCreateOrUpdateAtManagementGroupOptionalParams):
        Promise<Variable>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: parameters
          type: <xref uid="@azure/arm-policy.Variable" />
          description: Parameters for the variable.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.VariablesCreateOrUpdateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.Variable" />&gt;
  - name: delete(string, VariablesDeleteOptionalParams)
    uid: '@azure/arm-policy.Variables.delete'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes a variable, given its name and the subscription it
      was created in. The scope

      of a variable is the part of its ID preceding

      '/providers/Microsoft.Authorization/variables/{variableName}'.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(variableName: string, options?:
        VariablesDeleteOptionalParams): Promise<void>
      parameters:
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: options
          type: <xref uid="@azure/arm-policy.VariablesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      deleteAtManagementGroup(string, string,
      VariablesDeleteAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.Variables.deleteAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes a variable, given its name and the management group
      it was created in. The

      scope of a variable is the part of its ID preceding

      '/providers/Microsoft.Authorization/variables/{variableName}'.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        variableName: string, options?:
        VariablesDeleteAtManagementGroupOptionalParams): Promise<void>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.VariablesDeleteAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, VariablesGetOptionalParams)
    uid: '@azure/arm-policy.Variables.get'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a single variable, given its name and the
      subscription it was created at.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(variableName: string, options?:
        VariablesGetOptionalParams): Promise<Variable>
      parameters:
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: options
          type: <xref uid="@azure/arm-policy.VariablesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.Variable" />&gt;
  - name: >-
      getAtManagementGroup(string, string,
      VariablesGetAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.Variables.getAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a single variable, given its name and the 
      management group it was created

      at.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string, variableName:
        string, options?: VariablesGetAtManagementGroupOptionalParams):
        Promise<Variable>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: variableName
          type: string
          description: The name of the variable to operate on.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.VariablesGetAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.Variable" />&gt;
  - name: list(VariablesListOptionalParams)
    uid: '@azure/arm-policy.Variables.list'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all variables associated with the
      given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: VariablesListOptionalParams):
        PagedAsyncIterableIterator<Variable, Variable[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-policy.VariablesListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.Variable" />, <xref
          uid="@azure/arm-policy.Variable" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listForManagementGroup(string,
      VariablesListForManagementGroupOptionalParams)
    uid: '@azure/arm-policy.Variables.listForManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the list of all variables applicable to the
      management group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForManagementGroup(managementGroupId: string, options?:
        VariablesListForManagementGroupOptionalParams):
        PagedAsyncIterableIterator<Variable, Variable[], PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.VariablesListForManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.Variable" />, <xref
          uid="@azure/arm-policy.Variable" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
