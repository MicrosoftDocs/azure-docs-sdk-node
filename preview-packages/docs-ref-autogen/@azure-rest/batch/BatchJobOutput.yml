### YamlMime:TSType
name: BatchJobOutput
uid: '@azure-rest/batch.BatchJobOutput'
package: '@azure-rest/batch'
summary: An Azure Batch Job.
fullName: BatchJobOutput
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: allowTaskPreemption
    uid: '@azure-rest/batch.BatchJobOutput.allowTaskPreemption'
    package: '@azure-rest/batch'
    summary: >-
      Whether Tasks in this job can be preempted by other high priority jobs. If
      the value is set to True, other high priority jobs submitted to the system
      will take precedence and will be able requeue tasks from this job. You can
      update a job's allowTaskPreemption after it has been created using the
      update job API.
    fullName: allowTaskPreemption
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'allowTaskPreemption?: boolean'
      return:
        description: ''
        type: boolean
  - name: commonEnvironmentSettings
    uid: '@azure-rest/batch.BatchJobOutput.commonEnvironmentSettings'
    package: '@azure-rest/batch'
    summary: >-
      The list of common environment variable settings. These environment
      variables are set for all Tasks in the Job (including the Job Manager, Job
      Preparation and Job Release Tasks). Individual Tasks can override an
      environment setting specified here by specifying the same setting name
      with a different value.
    fullName: commonEnvironmentSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'commonEnvironmentSettings?: EnvironmentSettingOutput[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.EnvironmentSettingOutput" />[]
  - name: constraints
    uid: '@azure-rest/batch.BatchJobOutput.constraints'
    package: '@azure-rest/batch'
    summary: The execution constraints for the Job.
    fullName: constraints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constraints?: BatchJobConstraintsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobConstraintsOutput" />
  - name: creationTime
    uid: '@azure-rest/batch.BatchJobOutput.creationTime'
    package: '@azure-rest/batch'
    summary: The creation time of the Job.
    fullName: creationTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'creationTime?: string'
      return:
        description: ''
        type: string
  - name: displayName
    uid: '@azure-rest/batch.BatchJobOutput.displayName'
    package: '@azure-rest/batch'
    summary: The display name for the Job.
    fullName: displayName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'displayName?: string'
      return:
        description: ''
        type: string
  - name: eTag
    uid: '@azure-rest/batch.BatchJobOutput.eTag'
    package: '@azure-rest/batch'
    summary: >-
      The ETag of the Job. This is an opaque string. You can use it to detect
      whether the Job has changed between requests. In particular, you can be
      pass the ETag when updating a Job to specify that your changes should take
      effect only if nobody else has modified the Job in the meantime.
    fullName: eTag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'eTag?: string'
      return:
        description: ''
        type: string
  - name: executionInfo
    uid: '@azure-rest/batch.BatchJobOutput.executionInfo'
    package: '@azure-rest/batch'
    summary: The execution information for the Job.
    fullName: executionInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'executionInfo?: BatchJobExecutionInfoOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobExecutionInfoOutput" />
  - name: id
    uid: '@azure-rest/batch.BatchJobOutput.id'
    package: '@azure-rest/batch'
    summary: >-
      A string that uniquely identifies the Job within the Account. The ID is
      case-preserving and case-insensitive (that is, you may not have two IDs
      within an Account that differ only by case).
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
  - name: jobManagerTask
    uid: '@azure-rest/batch.BatchJobOutput.jobManagerTask'
    package: '@azure-rest/batch'
    summary: Details of a Job Manager Task to be launched when the Job is started.
    fullName: jobManagerTask
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'jobManagerTask?: BatchJobManagerTaskOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobManagerTaskOutput" />
  - name: jobPreparationTask
    uid: '@azure-rest/batch.BatchJobOutput.jobPreparationTask'
    package: '@azure-rest/batch'
    summary: >-
      The Job Preparation Task. The Job Preparation Task is a special Task run
      on each Compute Node before any other Task of the Job.
    fullName: jobPreparationTask
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'jobPreparationTask?: BatchJobPreparationTaskOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobPreparationTaskOutput" />
  - name: jobReleaseTask
    uid: '@azure-rest/batch.BatchJobOutput.jobReleaseTask'
    package: '@azure-rest/batch'
    summary: >-
      The Job Release Task. The Job Release Task is a special Task run at the
      end of the Job on each Compute Node that has run any other Task of the
      Job.
    fullName: jobReleaseTask
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'jobReleaseTask?: BatchJobReleaseTaskOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobReleaseTaskOutput" />
  - name: lastModified
    uid: '@azure-rest/batch.BatchJobOutput.lastModified'
    package: '@azure-rest/batch'
    summary: >-
      The last modified time of the Job. This is the last time at which the Job
      level data, such as the Job state or priority, changed. It does not factor
      in task-level changes such as adding new Tasks or Tasks changing state.
    fullName: lastModified
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lastModified?: string'
      return:
        description: ''
        type: string
  - name: maxParallelTasks
    uid: '@azure-rest/batch.BatchJobOutput.maxParallelTasks'
    package: '@azure-rest/batch'
    summary: >-
      The maximum number of tasks that can be executed in parallel for the job.
      The value of maxParallelTasks must be -1 or greater than 0 if specified.
      If not specified, the default value is -1, which means there's no limit to
      the number of tasks that can be run at once. You can update a job's
      maxParallelTasks after it has been created using the update job API.
    fullName: maxParallelTasks
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxParallelTasks?: number'
      return:
        description: ''
        type: number
  - name: metadata
    uid: '@azure-rest/batch.BatchJobOutput.metadata'
    package: '@azure-rest/batch'
    summary: >-
      A list of name-value pairs associated with the Job as metadata. The Batch
      service does not assign any meaning to metadata; it is solely for the use
      of user code.
    fullName: metadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'metadata?: BatchMetadataItemOutput[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchMetadataItemOutput" />[]
  - name: networkConfiguration
    uid: '@azure-rest/batch.BatchJobOutput.networkConfiguration'
    package: '@azure-rest/batch'
    summary: The network configuration for the Job.
    fullName: networkConfiguration
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'networkConfiguration?: BatchJobNetworkConfigurationOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobNetworkConfigurationOutput" />
  - name: onAllTasksComplete
    uid: '@azure-rest/batch.BatchJobOutput.onAllTasksComplete'
    package: '@azure-rest/batch'
    summary: >-
      The action the Batch service should take when all Tasks in the Job are in
      the completed state. The default is noaction.


      Possible values: "noaction", "terminatejob"
    fullName: onAllTasksComplete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAllTasksComplete?: string'
      return:
        description: ''
        type: string
  - name: onTaskFailure
    uid: '@azure-rest/batch.BatchJobOutput.onTaskFailure'
    package: '@azure-rest/batch'
    summary: >-
      The action the Batch service should take when any Task in the Job fails. A
      Task is considered to have failed if has a failureInfo. A failureInfo is
      set if the Task completes with a non-zero exit code after exhausting its
      retry count, or if there was an error starting the Task, for example due
      to a resource file download error. The default is noaction.


      Possible values: "noaction", "performexitoptionsjobaction"
    fullName: onTaskFailure
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTaskFailure?: string'
      return:
        description: ''
        type: string
  - name: poolInfo
    uid: '@azure-rest/batch.BatchJobOutput.poolInfo'
    package: '@azure-rest/batch'
    summary: The Pool settings associated with the Job.
    fullName: poolInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'poolInfo: BatchPoolInfoOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchPoolInfoOutput" />
  - name: previousState
    uid: '@azure-rest/batch.BatchJobOutput.previousState'
    package: '@azure-rest/batch'
    summary: >-
      The previous state of the Job. This property is not set if the Job is in
      its initial Active state.


      Possible values: "active", "disabling", "disabled", "enabling",
      "terminating", "completed", "deleting"
    fullName: previousState
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'previousState?: string'
      return:
        description: ''
        type: string
  - name: previousStateTransitionTime
    uid: '@azure-rest/batch.BatchJobOutput.previousStateTransitionTime'
    package: '@azure-rest/batch'
    summary: >-
      The time at which the Job entered its previous state. This property is not
      set if the Job is in its initial Active state.
    fullName: previousStateTransitionTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'previousStateTransitionTime?: string'
      return:
        description: ''
        type: string
  - name: priority
    uid: '@azure-rest/batch.BatchJobOutput.priority'
    package: '@azure-rest/batch'
    summary: >-
      The priority of the Job. Priority values can range from -1000 to 1000,
      with -1000 being the lowest priority and 1000 being the highest priority.
      The default value is 0.
    fullName: priority
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'priority?: number'
      return:
        description: ''
        type: number
  - name: state
    uid: '@azure-rest/batch.BatchJobOutput.state'
    package: '@azure-rest/batch'
    summary: >-
      The current state of the Job.


      Possible values: "active", "disabling", "disabled", "enabling",
      "terminating", "completed", "deleting"
    fullName: state
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'state?: string'
      return:
        description: ''
        type: string
  - name: stateTransitionTime
    uid: '@azure-rest/batch.BatchJobOutput.stateTransitionTime'
    package: '@azure-rest/batch'
    summary: The time at which the Job entered its current state.
    fullName: stateTransitionTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stateTransitionTime?: string'
      return:
        description: ''
        type: string
  - name: stats
    uid: '@azure-rest/batch.BatchJobOutput.stats'
    package: '@azure-rest/batch'
    summary: >-
      Resource usage statistics for the entire lifetime of the Job. This
      property is populated only if the BatchJob was retrieved with an expand
      clause including the 'stats' attribute; otherwise it is null. The
      statistics may not be immediately available. The Batch service performs
      periodic roll-up of statistics. The typical delay is about 30 minutes.
    fullName: stats
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stats?: BatchJobStatisticsOutput'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchJobStatisticsOutput" />
  - name: url
    uid: '@azure-rest/batch.BatchJobOutput.url'
    package: '@azure-rest/batch'
    summary: The URL of the Job.
    fullName: url
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'url?: string'
      return:
        description: ''
        type: string
  - name: usesTaskDependencies
    uid: '@azure-rest/batch.BatchJobOutput.usesTaskDependencies'
    package: '@azure-rest/batch'
    summary: >-
      Whether Tasks in the Job can define dependencies on each other. The
      default is false.
    fullName: usesTaskDependencies
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'usesTaskDependencies?: boolean'
      return:
        description: ''
        type: boolean
