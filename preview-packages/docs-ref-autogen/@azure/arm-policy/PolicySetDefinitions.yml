### YamlMime:TSType
name: PolicySetDefinitions
uid: '@azure/arm-policy.PolicySetDefinitions'
package: '@azure/arm-policy'
summary: Interface representing a PolicySetDefinitions.
fullName: PolicySetDefinitions
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, PolicySetDefinition,
      PolicySetDefinitionsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.createOrUpdate'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a policy set definition in the given
      subscription with the given

      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(policySetDefinitionName: string, parameters:
        PolicySetDefinition, options?:
        PolicySetDefinitionsCreateOrUpdateOptionalParams):
        Promise<PolicySetDefinition>
      parameters:
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to create.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicySetDefinition" />
          description: The policy set definition properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicySetDefinition" />&gt;
  - name: >-
      createOrUpdateAtManagementGroup(string, string, PolicySetDefinition,
      PolicySetDefinitionsCreateOrUpdateAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.createOrUpdateAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation creates or updates a policy set definition in the given
      management group with the

      given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdateAtManagementGroup(managementGroupId: string,
        policySetDefinitionName: string, parameters: PolicySetDefinition,
        options?:
        PolicySetDefinitionsCreateOrUpdateAtManagementGroupOptionalParams):
        Promise<PolicySetDefinition>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to create.
        - id: parameters
          type: <xref uid="@azure/arm-policy.PolicySetDefinition" />
          description: The policy set definition properties.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsCreateOrUpdateAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicySetDefinition" />&gt;
  - name: delete(string, PolicySetDefinitionsDeleteOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.delete'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes the policy set definition in the given subscription
      with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(policySetDefinitionName: string, options?:
        PolicySetDefinitionsDeleteOptionalParams): Promise<void>
      parameters:
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      deleteAtManagementGroup(string, string,
      PolicySetDefinitionsDeleteAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.deleteAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation deletes the policy set definition in the given management
      group with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAtManagementGroup(managementGroupId: string,
        policySetDefinitionName: string, options?:
        PolicySetDefinitionsDeleteAtManagementGroupOptionalParams):
        Promise<void>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to delete.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsDeleteAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, PolicySetDefinitionsGetOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.get'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the policy set definition in the given
      subscription with the given name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(policySetDefinitionName: string, options?:
        PolicySetDefinitionsGetOptionalParams): Promise<PolicySetDefinition>
      parameters:
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to get.
        - id: options
          type: >-
            <xref uid="@azure/arm-policy.PolicySetDefinitionsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicySetDefinition" />&gt;
  - name: >-
      getAtManagementGroup(string, string,
      PolicySetDefinitionsGetAtManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.getAtManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the policy set definition in the given management
      group with the given

      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAtManagementGroup(managementGroupId: string,
        policySetDefinitionName: string, options?:
        PolicySetDefinitionsGetAtManagementGroupOptionalParams):
        Promise<PolicySetDefinition>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsGetAtManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicySetDefinition" />&gt;
  - name: getBuiltIn(string, PolicySetDefinitionsGetBuiltInOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.getBuiltIn'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves the built-in policy set definition with the given
      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBuiltIn(policySetDefinitionName: string, options?:
        PolicySetDefinitionsGetBuiltInOptionalParams):
        Promise<PolicySetDefinition>
      parameters:
        - id: policySetDefinitionName
          type: string
          description: The name of the policy set definition to get.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsGetBuiltInOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-policy.PolicySetDefinition" />&gt;
  - name: list(PolicySetDefinitionsListOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.list'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the policy set definitions in a
      given subscription that match

      the optional given $filter. Valid values for $filter are:
      'atExactScope()', 'policyType -eq {value}'

      or 'category eq '{value}''. If $filter is not provided, the unfiltered
      list includes all policy set

      definitions associated with the subscription, including those that apply
      directly or from management

      groups that contain the given subscription. If $filter=atExactScope() is
      provided, the returned list

      only includes all policy set definitions that at the given subscription.
      If $filter='policyType -eq

      {value}' is provided, the returned list only includes all policy set
      definitions whose type match

      the {value}. Possible policyType values are NotSpecified, BuiltIn and
      Custom. If $filter='category

      -eq {value}' is provided, the returned list only includes all policy set
      definitions whose category

      match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: PolicySetDefinitionsListOptionalParams):
        PagedAsyncIterableIterator<PolicySetDefinition, PolicySetDefinition[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-policy.PolicySetDefinitionsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicySetDefinition" />, <xref
          uid="@azure/arm-policy.PolicySetDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBuiltIn(PolicySetDefinitionsListBuiltInOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.listBuiltIn'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the built-in policy set definitions
      that match the optional

      given $filter. If $filter='category -eq {value}' is provided, the returned
      list only includes all

      built-in policy set definitions whose category match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBuiltIn(options?:
        PolicySetDefinitionsListBuiltInOptionalParams):
        PagedAsyncIterableIterator<PolicySetDefinition, PolicySetDefinition[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsListBuiltInOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicySetDefinition" />, <xref
          uid="@azure/arm-policy.PolicySetDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listByManagementGroup(string,
      PolicySetDefinitionsListByManagementGroupOptionalParams)
    uid: '@azure/arm-policy.PolicySetDefinitions.listByManagementGroup'
    package: '@azure/arm-policy'
    summary: >-
      This operation retrieves a list of all the policy set definitions in a
      given management group that

      match the optional given $filter. Valid values for $filter are:
      'atExactScope()', 'policyType -eq

      {value}' or 'category eq '{value}''. If $filter is not provided, the
      unfiltered list includes all

      policy set definitions associated with the management group, including
      those that apply directly or

      from management groups that contain the given management group. If
      $filter=atExactScope() is

      provided, the returned list only includes all policy set definitions that
      at the given management

      group. If $filter='policyType -eq {value}' is provided, the returned list
      only includes all policy

      set definitions whose type match the {value}. Possible policyType values
      are NotSpecified, BuiltIn

      and Custom. If $filter='category -eq {value}' is provided, the returned
      list only includes all

      policy set definitions whose category match the {value}.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByManagementGroup(managementGroupId: string, options?:
        PolicySetDefinitionsListByManagementGroupOptionalParams):
        PagedAsyncIterableIterator<PolicySetDefinition, PolicySetDefinition[],
        PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: The ID of the management group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-policy.PolicySetDefinitionsListByManagementGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-policy.PolicySetDefinition" />, <xref
          uid="@azure/arm-policy.PolicySetDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
