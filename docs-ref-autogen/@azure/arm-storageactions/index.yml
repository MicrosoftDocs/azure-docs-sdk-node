### YamlMime:TSPackage
uid: '@azure/arm-storageactions'
name: '@azure/arm-storageactions'
summary: ''
type: package
enums:
  - '@azure/arm-storageactions.KnownActionType'
  - '@azure/arm-storageactions.KnownCreatedByType'
  - '@azure/arm-storageactions.KnownManagedServiceIdentityType'
  - '@azure/arm-storageactions.KnownMatchedBlockName'
  - '@azure/arm-storageactions.KnownOnFailure'
  - '@azure/arm-storageactions.KnownOnSuccess'
  - '@azure/arm-storageactions.KnownOrigin'
  - '@azure/arm-storageactions.KnownProvisioningState'
  - '@azure/arm-storageactions.KnownRunResult'
  - '@azure/arm-storageactions.KnownRunStatusEnum'
  - '@azure/arm-storageactions.KnownStorageTaskOperationName'
  - '@azure/arm-storageactions.KnownVersions'
classes:
  - '@azure/arm-storageactions.StorageActionsManagementClient'
interfaces:
  - '@azure/arm-storageactions.ElseCondition'
  - '@azure/arm-storageactions.ErrorAdditionalInfo'
  - '@azure/arm-storageactions.ErrorDetail'
  - '@azure/arm-storageactions.ErrorResponse'
  - '@azure/arm-storageactions.IfCondition'
  - '@azure/arm-storageactions.ManagedServiceIdentity'
  - '@azure/arm-storageactions.Operation'
  - '@azure/arm-storageactions.OperationDisplay'
  - '@azure/arm-storageactions.OperationsListOptionalParams'
  - '@azure/arm-storageactions.OperationsOperations'
  - '@azure/arm-storageactions.PageSettings'
  - '@azure/arm-storageactions.PagedAsyncIterableIterator'
  - '@azure/arm-storageactions.ProxyResource'
  - '@azure/arm-storageactions.Resource'
  - '@azure/arm-storageactions.RestorePollerOptions'
  - '@azure/arm-storageactions.StorageActionsManagementClientOptionalParams'
  - '@azure/arm-storageactions.StorageTask'
  - '@azure/arm-storageactions.StorageTaskAction'
  - '@azure/arm-storageactions.StorageTaskAssignment'
  - '@azure/arm-storageactions.StorageTaskAssignmentListOptionalParams'
  - '@azure/arm-storageactions.StorageTaskAssignmentOperations'
  - '@azure/arm-storageactions.StorageTaskOperation'
  - '@azure/arm-storageactions.StorageTaskPreviewAction'
  - '@azure/arm-storageactions.StorageTaskPreviewActionCondition'
  - '@azure/arm-storageactions.StorageTaskPreviewActionIfCondition'
  - '@azure/arm-storageactions.StorageTaskPreviewActionProperties'
  - '@azure/arm-storageactions.StorageTaskPreviewBlobProperties'
  - '@azure/arm-storageactions.StorageTaskPreviewContainerProperties'
  - '@azure/arm-storageactions.StorageTaskPreviewKeyValueProperties'
  - '@azure/arm-storageactions.StorageTaskProperties'
  - '@azure/arm-storageactions.StorageTaskReportInstance'
  - '@azure/arm-storageactions.StorageTaskReportProperties'
  - '@azure/arm-storageactions.StorageTaskUpdateParameters'
  - '@azure/arm-storageactions.StorageTaskUpdateProperties'
  - '@azure/arm-storageactions.StorageTasksCreateOptionalParams'
  - '@azure/arm-storageactions.StorageTasksDeleteOptionalParams'
  - '@azure/arm-storageactions.StorageTasksGetOptionalParams'
  - '@azure/arm-storageactions.StorageTasksListByResourceGroupOptionalParams'
  - '@azure/arm-storageactions.StorageTasksListBySubscriptionOptionalParams'
  - '@azure/arm-storageactions.StorageTasksOperations'
  - '@azure/arm-storageactions.StorageTasksPreviewActionsOptionalParams'
  - '@azure/arm-storageactions.StorageTasksReportListOptionalParams'
  - '@azure/arm-storageactions.StorageTasksReportOperations'
  - '@azure/arm-storageactions.StorageTasksUpdateOptionalParams'
  - '@azure/arm-storageactions.SystemData'
  - '@azure/arm-storageactions.TrackedResource'
  - '@azure/arm-storageactions.UserAssignedIdentity'
typeAliases:
  - '@azure/arm-storageactions.ActionType'
  - '@azure/arm-storageactions.ContinuablePage'
  - '@azure/arm-storageactions.CreatedByType'
  - '@azure/arm-storageactions.ManagedServiceIdentityType'
  - '@azure/arm-storageactions.MatchedBlockName'
  - '@azure/arm-storageactions.OnFailure'
  - '@azure/arm-storageactions.OnSuccess'
  - '@azure/arm-storageactions.Origin'
  - '@azure/arm-storageactions.ProvisioningState'
  - '@azure/arm-storageactions.RunResult'
  - '@azure/arm-storageactions.RunStatusEnum'
  - '@azure/arm-storageactions.StorageTaskOperationName'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(StorageActionsManagementClient, string,
      (args: any[]) => PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-storageactions.restorePoller'
    package: '@azure/arm-storageactions'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client:
        StorageActionsManagementClient, serializedState: string,
        sourceOperation: (args: any[]) => PollerLike<OperationState<TResult>,
        TResult>, options?: RestorePollerOptions<TResult,
        PathUncheckedResponse>): PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-storageactions.StorageActionsManagementClient"
            />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-storageactions.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
