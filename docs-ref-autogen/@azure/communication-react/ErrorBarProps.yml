### YamlMime:TSType
name: ErrorBarProps
uid: '@azure/communication-react.ErrorBarProps'
package: '@azure/communication-react'
summary: >-
  Props for [ErrorBar](xref:@azure/communication-react.ErrorBar).


  In addition to the following,
  [ErrorBar](xref:@azure/communication-react.ErrorBar) forwards all

  <xref:%40fluentui%2Freact%23IMessageBarProps> to the underlying
  <xref:%40fluentui%2Freact%23MessageBar>.
fullName: ErrorBarProps
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: activeErrorMessages
    uid: '@azure/communication-react.ErrorBarProps.activeErrorMessages'
    package: '@azure/communication-react'
    summary: Currently active errors.
    fullName: activeErrorMessages
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'activeErrorMessages: ActiveErrorMessage[]'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.ActiveErrorMessage" />[]
  - name: ignorePremountErrors
    uid: '@azure/communication-react.ErrorBarProps.ignorePremountErrors'
    package: '@azure/communication-react'
    summary: >-
      If set, errors with
      [timestamp](xref:@azure/communication-react.ActiveErrorMessage.timestamp)
      older than the time this component is mounted

      are not shown.


      This is useful when using the
      [ErrorBar](xref:@azure/communication-react.ErrorBar) with a stateful
      client that handles more than one call

      or chat thread. Set this prop to ignore errors from previous call or chat.
    fullName: ignorePremountErrors
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ignorePremountErrors?: boolean'
      return:
        description: ''
        type: boolean
  - name: onDismissError
    uid: '@azure/communication-react.ErrorBarProps.onDismissError'
    package: '@azure/communication-react'
    summary: |-
      Callback called when the dismiss button is triggered.
      Use this to control errors shown when they dismissed by the user.
    fullName: onDismissError
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDismissError?: (dismissedError: ActiveErrorMessage) => void'
      return:
        description: ''
        type: '(dismissedError: ActiveErrorMessage) =&gt; void'
  - name: strings
    uid: '@azure/communication-react.ErrorBarProps.strings'
    package: '@azure/communication-react'
    summary: Strings shown on the UI on errors.
    fullName: strings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strings?: ErrorBarStrings'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.ErrorBarStrings" />
inheritedProperties:
  - name: about
    uid: '@azure/communication-react.ErrorBarProps.about'
    package: '@azure/communication-react'
    summary: ''
    fullName: about
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'about?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.about
  - name: accessKey
    uid: '@azure/communication-react.ErrorBarProps.accessKey'
    package: '@azure/communication-react'
    summary: ''
    fullName: accessKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'accessKey?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.accessKey
  - name: actions
    uid: '@azure/communication-react.ErrorBarProps.actions'
    package: '@azure/communication-react'
    summary: The actions you want to show on the other side.
    fullName: actions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'actions?: JSXElement'
      return:
        description: ''
        type: JSXElement
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.actions
  - name: aria-activedescendant
    uid: '@azure/communication-react.ErrorBarProps.aria-activedescendant'
    package: '@azure/communication-react'
    summary: >-
      Identifies the currently active element when DOM focus is on a composite
      widget, textbox, group, or application.
    fullName: aria-activedescendant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-activedescendant?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-activedescendant
  - name: aria-atomic
    uid: '@azure/communication-react.ErrorBarProps.aria-atomic'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether assistive technologies will present all, or only parts
      of, the changed region based on the change notifications defined by the
      aria-relevant attribute.
    fullName: aria-atomic
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-atomic?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-atomic
  - name: aria-autocomplete
    uid: '@azure/communication-react.ErrorBarProps.aria-autocomplete'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether inputting text could trigger display of one or more
      predictions of the user's intended value for an input and specifies how
      predictions would be

      presented if they are made.
    fullName: aria-autocomplete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-autocomplete?: "none" | "list" | "inline" | "both"'
      return:
        description: ''
        type: '"none" | "list" | "inline" | "both"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-autocomplete
  - name: aria-braillelabel
    uid: '@azure/communication-react.ErrorBarProps.aria-braillelabel'
    package: '@azure/communication-react'
    summary: >-
      Defines a string value that labels the current element, which is intended
      to be converted into Braille.


      See aria-label.
    fullName: aria-braillelabel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-braillelabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-braillelabel
  - name: aria-brailleroledescription
    uid: '@azure/communication-react.ErrorBarProps.aria-brailleroledescription'
    package: '@azure/communication-react'
    summary: >-
      Defines a human-readable, author-localized abbreviated description for the
      role of an element, which is intended to be converted into Braille.


      See aria-roledescription.
    fullName: aria-brailleroledescription
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-brailleroledescription?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-brailleroledescription
  - name: aria-busy
    uid: '@azure/communication-react.ErrorBarProps.aria-busy'
    package: '@azure/communication-react'
    summary: ''
    fullName: aria-busy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-busy?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-busy
  - name: aria-checked
    uid: '@azure/communication-react.ErrorBarProps.aria-checked'
    package: '@azure/communication-react'
    summary: >-
      Indicates the current "checked" state of checkboxes, radio buttons, and
      other widgets.


      See aria-pressed

      See aria-selected.
    fullName: aria-checked
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-checked?: boolean | "true" | "false" | "mixed"'
      return:
        description: ''
        type: boolean | "true" | "false" | "mixed"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-checked
  - name: aria-colcount
    uid: '@azure/communication-react.ErrorBarProps.aria-colcount'
    package: '@azure/communication-react'
    summary: |-
      Defines the total number of columns in a table, grid, or treegrid.

      See aria-colindex.
    fullName: aria-colcount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-colcount?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-colcount
  - name: aria-colindex
    uid: '@azure/communication-react.ErrorBarProps.aria-colindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's column index or position with respect to the total
      number of columns within a table, grid, or treegrid.


      See aria-colcount

      See aria-colspan.
    fullName: aria-colindex
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-colindex?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-colindex
  - name: aria-colindextext
    uid: '@azure/communication-react.ErrorBarProps.aria-colindextext'
    package: '@azure/communication-react'
    summary: |-
      Defines a human readable text alternative of aria-colindex.

      See aria-rowindextext.
    fullName: aria-colindextext
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-colindextext?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-colindextext
  - name: aria-colspan
    uid: '@azure/communication-react.ErrorBarProps.aria-colspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of columns spanned by a cell or gridcell within a
      table, grid, or treegrid.


      See aria-colindex

      See aria-rowspan.
    fullName: aria-colspan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-colspan?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-colspan
  - name: aria-controls
    uid: '@azure/communication-react.ErrorBarProps.aria-controls'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element (or elements) whose contents or presence are
      controlled by the current element.


      See aria-owns.
    fullName: aria-controls
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-controls?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-controls
  - name: aria-current
    uid: '@azure/communication-react.ErrorBarProps.aria-current'
    package: '@azure/communication-react'
    summary: >-
      Indicates the element that represents the current item within a container
      or set of related elements.
    fullName: aria-current
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        aria-current?: boolean | "true" | "false" | "page" | "step" | "location"
        | "date" | "time"
      return:
        description: ''
        type: >-
          boolean | "true" | "false" | "page" | "step" | "location" | "date" |
          "time"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-current
  - name: aria-describedby
    uid: '@azure/communication-react.ErrorBarProps.aria-describedby'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element (or elements) that describes the object.

      See aria-labelledby
    fullName: aria-describedby
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-describedby?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-describedby
  - name: aria-description
    uid: '@azure/communication-react.ErrorBarProps.aria-description'
    package: '@azure/communication-react'
    summary: |-
      Defines a string value that describes or annotates the current element.

      See related aria-describedby.
    fullName: aria-description
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-description?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-description
  - name: aria-details
    uid: '@azure/communication-react.ErrorBarProps.aria-details'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element that provides a detailed, extended description for
      the object.


      See aria-describedby.
    fullName: aria-details
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-details?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-details
  - name: aria-disabled
    uid: '@azure/communication-react.ErrorBarProps.aria-disabled'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the element is perceivable but disabled, so it is not
      editable or otherwise operable.


      See aria-hidden

      See aria-readonly.
    fullName: aria-disabled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-disabled?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-disabled
  - name: aria-dropeffect
    uid: '@azure/communication-react.ErrorBarProps.aria-dropeffect'
    package: '@azure/communication-react'
    summary: >-
      Indicates what functions can be performed when a dragged object is
      released on the drop target.
    fullName: aria-dropeffect
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: >-
        aria-dropeffect?: "none" | "link" | "copy" | "execute" | "move" |
        "popup"
      return:
        description: ''
        type: '"none" | "link" | "copy" | "execute" | "move" | "popup"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-dropeffect
  - name: aria-errormessage
    uid: '@azure/communication-react.ErrorBarProps.aria-errormessage'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element that provides an error message for the object.

      See aria-invalid
      See aria-describedby.
    fullName: aria-errormessage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-errormessage?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-errormessage
  - name: aria-expanded
    uid: '@azure/communication-react.ErrorBarProps.aria-expanded'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element, or another grouping element it controls, is
      currently expanded or collapsed.
    fullName: aria-expanded
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-expanded?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-expanded
  - name: aria-flowto
    uid: '@azure/communication-react.ErrorBarProps.aria-flowto'
    package: '@azure/communication-react'
    summary: >-
      Identifies the next element (or elements) in an alternate reading order of
      content which, at the user's discretion,

      allows assistive technology to override the general default of reading in
      document source order.
    fullName: aria-flowto
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-flowto?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-flowto
  - name: aria-grabbed
    uid: '@azure/communication-react.ErrorBarProps.aria-grabbed'
    package: '@azure/communication-react'
    summary: Indicates an element's "grabbed" state in a drag-and-drop operation.
    fullName: aria-grabbed
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: 'aria-grabbed?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-grabbed
  - name: aria-haspopup
    uid: '@azure/communication-react.ErrorBarProps.aria-haspopup'
    package: '@azure/communication-react'
    summary: >-
      Indicates the availability and type of interactive popup element, such as
      menu or dialog, that can be triggered by an element.
    fullName: aria-haspopup
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        aria-haspopup?: boolean | "true" | "false" | "dialog" | "grid" |
        "listbox" | "menu" | "tree"
      return:
        description: ''
        type: >-
          boolean | "true" | "false" | "dialog" | "grid" | "listbox" | "menu" |
          "tree"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-haspopup
  - name: aria-hidden
    uid: '@azure/communication-react.ErrorBarProps.aria-hidden'
    package: '@azure/communication-react'
    summary: |-
      Indicates whether the element is exposed to an accessibility API.

      See aria-disabled.
    fullName: aria-hidden
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-hidden?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-hidden
  - name: aria-invalid
    uid: '@azure/communication-react.ErrorBarProps.aria-invalid'
    package: '@azure/communication-react'
    summary: >-
      Indicates the entered value does not conform to the format expected by the
      application.


      See aria-errormessage.
    fullName: aria-invalid
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-invalid?: boolean | "true" | "false" | "grammar" | "spelling"'
      return:
        description: ''
        type: boolean | "true" | "false" | "grammar" | "spelling"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-invalid
  - name: aria-keyshortcuts
    uid: '@azure/communication-react.ErrorBarProps.aria-keyshortcuts'
    package: '@azure/communication-react'
    summary: >-
      Indicates keyboard shortcuts that an author has implemented to activate or
      give focus to an element.
    fullName: aria-keyshortcuts
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-keyshortcuts?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-keyshortcuts
  - name: aria-label
    uid: '@azure/communication-react.ErrorBarProps.aria-label'
    package: '@azure/communication-react'
    summary: |-
      Defines a string value that labels the current element.

      See aria-labelledby.
    fullName: aria-label
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-label?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-label
  - name: aria-labelledby
    uid: '@azure/communication-react.ErrorBarProps.aria-labelledby'
    package: '@azure/communication-react'
    summary: |-
      Identifies the element (or elements) that labels the current element.

      See aria-describedby.
    fullName: aria-labelledby
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-labelledby?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-labelledby
  - name: aria-level
    uid: '@azure/communication-react.ErrorBarProps.aria-level'
    package: '@azure/communication-react'
    summary: Defines the hierarchical level of an element within a structure.
    fullName: aria-level
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-level?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-level
  - name: aria-live
    uid: '@azure/communication-react.ErrorBarProps.aria-live'
    package: '@azure/communication-react'
    summary: >-
      Indicates that an element will be updated, and describes the types of
      updates the user agents, assistive technologies, and user can expect from
      the live region.
    fullName: aria-live
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-live?: "assertive" | "off" | "polite"'
      return:
        description: ''
        type: '"assertive" | "off" | "polite"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-live
  - name: aria-modal
    uid: '@azure/communication-react.ErrorBarProps.aria-modal'
    package: '@azure/communication-react'
    summary: Indicates whether an element is modal when displayed.
    fullName: aria-modal
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-modal?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-modal
  - name: aria-multiline
    uid: '@azure/communication-react.ErrorBarProps.aria-multiline'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether a text box accepts multiple lines of input or only a
      single line.
    fullName: aria-multiline
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-multiline?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-multiline
  - name: aria-multiselectable
    uid: '@azure/communication-react.ErrorBarProps.aria-multiselectable'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the user may select more than one item from the current
      selectable descendants.
    fullName: aria-multiselectable
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-multiselectable?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-multiselectable
  - name: aria-orientation
    uid: '@azure/communication-react.ErrorBarProps.aria-orientation'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element's orientation is horizontal, vertical, or
      unknown/ambiguous.
    fullName: aria-orientation
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-orientation?: "horizontal" | "vertical"'
      return:
        description: ''
        type: '"horizontal" | "vertical"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-orientation
  - name: aria-owns
    uid: '@azure/communication-react.ErrorBarProps.aria-owns'
    package: '@azure/communication-react'
    summary: >-
      Identifies an element (or elements) in order to define a visual,
      functional, or contextual parent/child relationship

      between DOM elements where the DOM hierarchy cannot be used to represent
      the relationship.


      See aria-controls.
    fullName: aria-owns
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-owns?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-owns
  - name: aria-placeholder
    uid: '@azure/communication-react.ErrorBarProps.aria-placeholder'
    package: '@azure/communication-react'
    summary: >-
      Defines a short hint (a word or short phrase) intended to aid the user
      with data entry when the control has no value.

      A hint could be a sample value or a brief description of the expected
      format.
    fullName: aria-placeholder
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-placeholder?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-placeholder
  - name: aria-posinset
    uid: '@azure/communication-react.ErrorBarProps.aria-posinset'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's number or position in the current set of listitems or
      treeitems. Not required if all elements in the set are present in the DOM.


      See aria-setsize.
    fullName: aria-posinset
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-posinset?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-posinset
  - name: aria-pressed
    uid: '@azure/communication-react.ErrorBarProps.aria-pressed'
    package: '@azure/communication-react'
    summary: |-
      Indicates the current "pressed" state of toggle buttons.

      See aria-checked
      See aria-selected.
    fullName: aria-pressed
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-pressed?: boolean | "true" | "false" | "mixed"'
      return:
        description: ''
        type: boolean | "true" | "false" | "mixed"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-pressed
  - name: aria-readonly
    uid: '@azure/communication-react.ErrorBarProps.aria-readonly'
    package: '@azure/communication-react'
    summary: |-
      Indicates that the element is not editable, but is otherwise operable.

      See aria-disabled.
    fullName: aria-readonly
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-readonly?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-readonly
  - name: aria-relevant
    uid: '@azure/communication-react.ErrorBarProps.aria-relevant'
    package: '@azure/communication-react'
    summary: >-
      Indicates what notifications the user agent will trigger when the
      accessibility tree within a live region is modified.


      See aria-atomic.
    fullName: aria-relevant
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        aria-relevant?: "text" | "additions" | "additions removals" | "additions
        text" | "all" | "removals" | "removals additions" | "removals text" |
        "text additions" | "text removals"
      return:
        description: ''
        type: >-
          "text" | "additions" | "additions removals" | "additions text" | "all"
          | "removals" | "removals additions" | "removals text" | "text
          additions" | "text removals"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-relevant
  - name: aria-required
    uid: '@azure/communication-react.ErrorBarProps.aria-required'
    package: '@azure/communication-react'
    summary: >-
      Indicates that user input is required on the element before a form may be
      submitted.
    fullName: aria-required
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-required?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-required
  - name: aria-roledescription
    uid: '@azure/communication-react.ErrorBarProps.aria-roledescription'
    package: '@azure/communication-react'
    summary: >-
      Defines a human-readable, author-localized description for the role of an
      element.
    fullName: aria-roledescription
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-roledescription?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-roledescription
  - name: aria-rowcount
    uid: '@azure/communication-react.ErrorBarProps.aria-rowcount'
    package: '@azure/communication-react'
    summary: |-
      Defines the total number of rows in a table, grid, or treegrid.

      See aria-rowindex.
    fullName: aria-rowcount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-rowcount?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-rowcount
  - name: aria-rowindex
    uid: '@azure/communication-react.ErrorBarProps.aria-rowindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's row index or position with respect to the total
      number of rows within a table, grid, or treegrid.


      See aria-rowcount

      See aria-rowspan.
    fullName: aria-rowindex
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-rowindex?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-rowindex
  - name: aria-rowindextext
    uid: '@azure/communication-react.ErrorBarProps.aria-rowindextext'
    package: '@azure/communication-react'
    summary: |-
      Defines a human readable text alternative of aria-rowindex.

      See aria-colindextext.
    fullName: aria-rowindextext
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-rowindextext?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-rowindextext
  - name: aria-rowspan
    uid: '@azure/communication-react.ErrorBarProps.aria-rowspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of rows spanned by a cell or gridcell within a table,
      grid, or treegrid.


      See aria-rowindex

      See aria-colspan.
    fullName: aria-rowspan
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-rowspan?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-rowspan
  - name: aria-selected
    uid: '@azure/communication-react.ErrorBarProps.aria-selected'
    package: '@azure/communication-react'
    summary: |-
      Indicates the current "selected" state of various widgets.

      See aria-checked
      See aria-pressed.
    fullName: aria-selected
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-selected?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-selected
  - name: aria-setsize
    uid: '@azure/communication-react.ErrorBarProps.aria-setsize'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of items in the current set of listitems or treeitems.
      Not required if all elements in the set are present in the DOM.


      See aria-posinset.
    fullName: aria-setsize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-setsize?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-setsize
  - name: aria-sort
    uid: '@azure/communication-react.ErrorBarProps.aria-sort'
    package: '@azure/communication-react'
    summary: >-
      Indicates if items in a table or grid are sorted in ascending or
      descending order.
    fullName: aria-sort
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-sort?: "none" | "ascending" | "descending" | "other"'
      return:
        description: ''
        type: '"none" | "ascending" | "descending" | "other"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-sort
  - name: aria-valuemax
    uid: '@azure/communication-react.ErrorBarProps.aria-valuemax'
    package: '@azure/communication-react'
    summary: Defines the maximum allowed value for a range widget.
    fullName: aria-valuemax
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-valuemax?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-valuemax
  - name: aria-valuemin
    uid: '@azure/communication-react.ErrorBarProps.aria-valuemin'
    package: '@azure/communication-react'
    summary: Defines the minimum allowed value for a range widget.
    fullName: aria-valuemin
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-valuemin?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-valuemin
  - name: aria-valuenow
    uid: '@azure/communication-react.ErrorBarProps.aria-valuenow'
    package: '@azure/communication-react'
    summary: |-
      Defines the current value for a range widget.

      See aria-valuetext.
    fullName: aria-valuenow
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-valuenow?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-valuenow
  - name: aria-valuetext
    uid: '@azure/communication-react.ErrorBarProps.aria-valuetext'
    package: '@azure/communication-react'
    summary: >-
      Defines the human readable text alternative of aria-valuenow for a range
      widget.
    fullName: aria-valuetext
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'aria-valuetext?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.aria-valuetext
  - name: ariaLabel
    uid: '@azure/communication-react.ErrorBarProps.ariaLabel'
    package: '@azure/communication-react'
    summary: A description of the message bar for the benefit of screen readers.
    fullName: ariaLabel
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use native prop `aria-label` instead.
    syntax:
      content: 'ariaLabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.ariaLabel
  - name: autoCapitalize
    uid: '@azure/communication-react.ErrorBarProps.autoCapitalize'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCapitalize
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        autoCapitalize?: "off" | "none" | "on" | "sentences" | "words" |
        "characters" | (string & {})
      return:
        description: ''
        type: >-
          "off" | "none" | "on" | "sentences" | "words" | "characters" | (string
          & {})
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.autoCapitalize
  - name: autoCorrect
    uid: '@azure/communication-react.ErrorBarProps.autoCorrect'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCorrect
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'autoCorrect?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.autoCorrect
  - name: autoFocus
    uid: '@azure/communication-react.ErrorBarProps.autoFocus'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoFocus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'autoFocus?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.autoFocus
  - name: autoSave
    uid: '@azure/communication-react.ErrorBarProps.autoSave'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoSave
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'autoSave?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.autoSave
  - name: children
    uid: '@azure/communication-react.ErrorBarProps.children'
    package: '@azure/communication-react'
    summary: ''
    fullName: children
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'children?: ReactNode'
      return:
        description: ''
        type: ReactNode
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.children
  - name: className
    uid: '@azure/communication-react.ErrorBarProps.className'
    package: '@azure/communication-react'
    summary: Additional CSS class(es) to apply to the MessageBar.
    fullName: className
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'className?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.className
  - name: color
    uid: '@azure/communication-react.ErrorBarProps.color'
    package: '@azure/communication-react'
    summary: ''
    fullName: color
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'color?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.color
  - name: componentRef
    uid: '@azure/communication-react.ErrorBarProps.componentRef'
    package: '@azure/communication-react'
    summary: >-
      Optional callback to access the IMessageBar interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    fullName: componentRef
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IMessageBar>'
      return:
        description: ''
        type: IRefObject&lt;IMessageBar&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.componentRef
  - name: content
    uid: '@azure/communication-react.ErrorBarProps.content'
    package: '@azure/communication-react'
    summary: ''
    fullName: content
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'content?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.content
  - name: contentEditable
    uid: '@azure/communication-react.ErrorBarProps.contentEditable'
    package: '@azure/communication-react'
    summary: ''
    fullName: contentEditable
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'contentEditable?: Booleanish | "inherit" | "plaintext-only"'
      return:
        description: ''
        type: Booleanish | "inherit" | "plaintext-only"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.contentEditable
  - name: contextMenu
    uid: '@azure/communication-react.ErrorBarProps.contextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: contextMenu
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'contextMenu?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.contextMenu
  - name: dangerouslySetInnerHTML
    uid: '@azure/communication-react.ErrorBarProps.dangerouslySetInnerHTML'
    package: '@azure/communication-react'
    summary: ''
    fullName: dangerouslySetInnerHTML
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dangerouslySetInnerHTML?: { __html: string | TrustedHTML }'
      return:
        description: ''
        type: '{ __html: string | TrustedHTML }'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.dangerouslySetInnerHTML
  - name: datatype
    uid: '@azure/communication-react.ErrorBarProps.datatype'
    package: '@azure/communication-react'
    summary: ''
    fullName: datatype
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'datatype?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.datatype
  - name: defaultChecked
    uid: '@azure/communication-react.ErrorBarProps.defaultChecked'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultChecked
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'defaultChecked?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.defaultChecked
  - name: defaultValue
    uid: '@azure/communication-react.ErrorBarProps.defaultValue'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultValue
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'defaultValue?: string | number | (readonly string[])'
      return:
        description: ''
        type: string | number | (readonly string[])
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.defaultValue
  - name: delayedRender
    uid: '@azure/communication-react.ErrorBarProps.delayedRender'
    package: '@azure/communication-react'
    summary: >-
      By default, MessageBar delay-renders its content within an internal live
      region to help ensure

      it's announced by screen readers. You can disable that behavior by setting
      this prop to `false`.


      If you set this prop to `false`, to ensure proper announcement you should
      either:

      - If appropriate, ensure that the `role` prop is set to `alert` (this will
      be done by default
        if `messageBarType` is `error`, `blocked`, or `severeWarning`), OR
      - Set the `role` prop to `none` (to avoid nested `status` regions), wrap
      the whole MessageBar
        in a `<div role="status">` which is always rendered, and ensure that the MessageBar is
        rendered either conditionally or with a delay.
    fullName: delayedRender
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'delayedRender?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.delayedRender
  - name: dir
    uid: '@azure/communication-react.ErrorBarProps.dir'
    package: '@azure/communication-react'
    summary: ''
    fullName: dir
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dir?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.dir
  - name: dismissButtonAriaLabel
    uid: '@azure/communication-react.ErrorBarProps.dismissButtonAriaLabel'
    package: '@azure/communication-react'
    summary: Aria label on dismiss button if onDismiss is defined.
    fullName: dismissButtonAriaLabel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dismissButtonAriaLabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.dismissButtonAriaLabel
  - name: dismissIconProps
    uid: '@azure/communication-react.ErrorBarProps.dismissIconProps'
    package: '@azure/communication-react'
    summary: |-
      Custom icon prop to replace the dismiss icon.
      If unset, default will be the Fabric Clear icon.
    fullName: dismissIconProps
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dismissIconProps?: IIconProps'
      return:
        description: ''
        type: IIconProps
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.dismissIconProps
  - name: draggable
    uid: '@azure/communication-react.ErrorBarProps.draggable'
    package: '@azure/communication-react'
    summary: ''
    fullName: draggable
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'draggable?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.draggable
  - name: enterKeyHint
    uid: '@azure/communication-react.ErrorBarProps.enterKeyHint'
    package: '@azure/communication-react'
    summary: ''
    fullName: enterKeyHint
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        enterKeyHint?: "enter" | "done" | "go" | "next" | "previous" | "search"
        | "send"
      return:
        description: ''
        type: '"enter" | "done" | "go" | "next" | "previous" | "search" | "send"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.enterKeyHint
  - name: expandButtonProps
    uid: '@azure/communication-react.ErrorBarProps.expandButtonProps'
    package: '@azure/communication-react'
    summary: Button props that can be applied to the expand button of the MessageBar.
    fullName: expandButtonProps
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'expandButtonProps?: IButtonProps'
      return:
        description: ''
        type: IButtonProps
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.expandButtonProps
  - name: exportparts
    uid: '@azure/communication-react.ErrorBarProps.exportparts'
    package: '@azure/communication-react'
    summary: >-


      See
      https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/exportparts
    fullName: exportparts
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'exportparts?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.exportparts
  - name: hidden
    uid: '@azure/communication-react.ErrorBarProps.hidden'
    package: '@azure/communication-react'
    summary: ''
    fullName: hidden
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'hidden?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.hidden
  - name: id
    uid: '@azure/communication-react.ErrorBarProps.id'
    package: '@azure/communication-react'
    summary: ''
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.id
  - name: inlist
    uid: '@azure/communication-react.ErrorBarProps.inlist'
    package: '@azure/communication-react'
    summary: ''
    fullName: inlist
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'inlist?: any'
      return:
        description: ''
        type: any
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.inlist
  - name: inputMode
    uid: '@azure/communication-react.ErrorBarProps.inputMode'
    package: '@azure/communication-react'
    summary: >-
      Hints at the type of data that might be entered by the user while editing
      the element or its contents


      See
      https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute
    fullName: inputMode
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        inputMode?: "none" | "search" | "text" | "tel" | "url" | "email" |
        "numeric" | "decimal"
      return:
        description: ''
        type: >-
          "none" | "search" | "text" | "tel" | "url" | "email" | "numeric" |
          "decimal"
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.inputMode
  - name: is
    uid: '@azure/communication-react.ErrorBarProps.is'
    package: '@azure/communication-react'
    summary: >-
      Specify that a standard HTML element should behave like a defined custom
      built-in element


      See https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is
    fullName: is
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'is?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.is
  - name: isMultiline
    uid: '@azure/communication-react.ErrorBarProps.isMultiline'
    package: '@azure/communication-react'
    summary: >-
      Determines if the message bar is multi lined.

      If false, and the text overflows over buttons or to another line, it is
      clipped.
    fullName: isMultiline
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'isMultiline?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.isMultiline
  - name: itemID
    uid: '@azure/communication-react.ErrorBarProps.itemID'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemID
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemID?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.itemID
  - name: itemProp
    uid: '@azure/communication-react.ErrorBarProps.itemProp'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemProp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemProp?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.itemProp
  - name: itemRef
    uid: '@azure/communication-react.ErrorBarProps.itemRef'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemRef
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemRef?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.itemRef
  - name: itemScope
    uid: '@azure/communication-react.ErrorBarProps.itemScope'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemScope
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemScope?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.itemScope
  - name: itemType
    uid: '@azure/communication-react.ErrorBarProps.itemType'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'itemType?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.itemType
  - name: key
    uid: '@azure/communication-react.ErrorBarProps.key'
    package: '@azure/communication-react'
    summary: ''
    fullName: key
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'key?: null | Key'
      return:
        description: ''
        type: null | Key
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.key
  - name: lang
    uid: '@azure/communication-react.ErrorBarProps.lang'
    package: '@azure/communication-react'
    summary: ''
    fullName: lang
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'lang?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.lang
  - name: messageBarIconProps
    uid: '@azure/communication-react.ErrorBarProps.messageBarIconProps'
    package: '@azure/communication-react'
    summary: |-
      Custom icon prop to replace the message bar icon.
      If unset, default will be the icon set by messageBarType.
    fullName: messageBarIconProps
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageBarIconProps?: IIconProps'
      return:
        description: ''
        type: IIconProps
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.messageBarIconProps
  - name: messageBarType
    uid: '@azure/communication-react.ErrorBarProps.messageBarType'
    package: '@azure/communication-react'
    summary: The type of MessageBar to render.
    fullName: messageBarType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageBarType?: MessageBarType'
      return:
        description: ''
        type: MessageBarType
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.messageBarType
  - name: nonce
    uid: '@azure/communication-react.ErrorBarProps.nonce'
    package: '@azure/communication-react'
    summary: ''
    fullName: nonce
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'nonce?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.nonce
  - name: onAbort
    uid: '@azure/communication-react.ErrorBarProps.onAbort'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbort
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAbort?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAbort
  - name: onAbortCapture
    uid: '@azure/communication-react.ErrorBarProps.onAbortCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbortCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAbortCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAbortCapture
  - name: onAnimationEnd
    uid: '@azure/communication-react.ErrorBarProps.onAnimationEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationEnd?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationEnd
  - name: onAnimationEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEndCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationEndCapture?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationEndCapture
  - name: onAnimationIteration
    uid: '@azure/communication-react.ErrorBarProps.onAnimationIteration'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIteration
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationIteration?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationIteration
  - name: onAnimationIterationCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationIterationCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIterationCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationIterationCapture?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationIterationCapture
  - name: onAnimationStart
    uid: '@azure/communication-react.ErrorBarProps.onAnimationStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationStart?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationStart
  - name: onAnimationStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStartCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAnimationStartCapture?: AnimationEventHandler<HTMLElement>'
      return:
        description: ''
        type: AnimationEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAnimationStartCapture
  - name: onAuxClick
    uid: '@azure/communication-react.ErrorBarProps.onAuxClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClick
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAuxClick?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAuxClick
  - name: onAuxClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onAuxClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClickCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onAuxClickCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onAuxClickCapture
  - name: onBeforeInput
    uid: '@azure/communication-react.ErrorBarProps.onBeforeInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInput
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onBeforeInput?: InputEventHandler<HTMLElement>'
      return:
        description: ''
        type: InputEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onBeforeInput
  - name: onBeforeInputCapture
    uid: '@azure/communication-react.ErrorBarProps.onBeforeInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInputCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onBeforeInputCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onBeforeInputCapture
  - name: onBlur
    uid: '@azure/communication-react.ErrorBarProps.onBlur'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlur
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onBlur?: FocusEventHandler<HTMLElement>'
      return:
        description: ''
        type: FocusEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onBlur
  - name: onBlurCapture
    uid: '@azure/communication-react.ErrorBarProps.onBlurCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlurCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onBlurCapture?: FocusEventHandler<HTMLElement>'
      return:
        description: ''
        type: FocusEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onBlurCapture
  - name: onCanPlay
    uid: '@azure/communication-react.ErrorBarProps.onCanPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCanPlay?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCanPlay
  - name: onCanPlayCapture
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCanPlayCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCanPlayCapture
  - name: onCanPlayThrough
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayThrough'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThrough
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCanPlayThrough?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCanPlayThrough
  - name: onCanPlayThroughCapture
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayThroughCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThroughCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCanPlayThroughCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCanPlayThroughCapture
  - name: onChange
    uid: '@azure/communication-react.ErrorBarProps.onChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChange
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onChange?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onChange
  - name: onChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChangeCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onChangeCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onChangeCapture
  - name: onClick
    uid: '@azure/communication-react.ErrorBarProps.onClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClick
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onClick?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onClick
  - name: onClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClickCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onClickCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onClickCapture
  - name: onCompositionEnd
    uid: '@azure/communication-react.ErrorBarProps.onCompositionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionEnd?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionEnd
  - name: onCompositionEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEndCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionEndCapture?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionEndCapture
  - name: onCompositionStart
    uid: '@azure/communication-react.ErrorBarProps.onCompositionStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionStart?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionStart
  - name: onCompositionStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStartCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionStartCapture?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionStartCapture
  - name: onCompositionUpdate
    uid: '@azure/communication-react.ErrorBarProps.onCompositionUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionUpdate?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionUpdate
  - name: onCompositionUpdateCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionUpdateCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdateCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCompositionUpdateCapture?: CompositionEventHandler<HTMLElement>'
      return:
        description: ''
        type: CompositionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCompositionUpdateCapture
  - name: onContextMenu
    uid: '@azure/communication-react.ErrorBarProps.onContextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenu
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onContextMenu?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onContextMenu
  - name: onContextMenuCapture
    uid: '@azure/communication-react.ErrorBarProps.onContextMenuCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenuCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onContextMenuCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onContextMenuCapture
  - name: onCopy
    uid: '@azure/communication-react.ErrorBarProps.onCopy'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCopy?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCopy
  - name: onCopyCapture
    uid: '@azure/communication-react.ErrorBarProps.onCopyCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopyCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCopyCapture?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCopyCapture
  - name: onCut
    uid: '@azure/communication-react.ErrorBarProps.onCut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCut
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCut?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCut
  - name: onCutCapture
    uid: '@azure/communication-react.ErrorBarProps.onCutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCutCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onCutCapture?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onCutCapture
  - name: onDismiss
    uid: '@azure/communication-react.ErrorBarProps.onDismiss'
    package: '@azure/communication-react'
    summary: |-
      Whether the message bar has a dismiss button and its callback.
      If null, we don't show a dismiss button.
    fullName: onDismiss
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onDismiss?: (ev?: MouseEvent<HTMLElement | BaseButton | Button,
        MouseEvent>) => any
      return:
        description: ''
        type: >-
          (ev?: MouseEvent&lt;HTMLElement | BaseButton | Button, MouseEvent&gt;)
          =&gt; any
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDismiss
  - name: onDoubleClick
    uid: '@azure/communication-react.ErrorBarProps.onDoubleClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClick
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDoubleClick?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDoubleClick
  - name: onDoubleClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onDoubleClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClickCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDoubleClickCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDoubleClickCapture
  - name: onDrag
    uid: '@azure/communication-react.ErrorBarProps.onDrag'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrag
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDrag?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDrag
  - name: onDragCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragCapture
  - name: onDragEnd
    uid: '@azure/communication-react.ErrorBarProps.onDragEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragEnd?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragEnd
  - name: onDragEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEndCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragEndCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragEndCapture
  - name: onDragEnter
    uid: '@azure/communication-react.ErrorBarProps.onDragEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragEnter?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragEnter
  - name: onDragEnterCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragEnterCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnterCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragEnterCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragEnterCapture
  - name: onDragExit
    uid: '@azure/communication-react.ErrorBarProps.onDragExit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragExit?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragExit
  - name: onDragExitCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragExitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExitCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragExitCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragExitCapture
  - name: onDragLeave
    uid: '@azure/communication-react.ErrorBarProps.onDragLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeave
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragLeave?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragLeave
  - name: onDragLeaveCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragLeaveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeaveCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragLeaveCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragLeaveCapture
  - name: onDragOver
    uid: '@azure/communication-react.ErrorBarProps.onDragOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOver
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragOver?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragOver
  - name: onDragOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOverCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragOverCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragOverCapture
  - name: onDragStart
    uid: '@azure/communication-react.ErrorBarProps.onDragStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragStart?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragStart
  - name: onDragStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStartCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDragStartCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDragStartCapture
  - name: onDrop
    uid: '@azure/communication-react.ErrorBarProps.onDrop'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrop
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDrop?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDrop
  - name: onDropCapture
    uid: '@azure/communication-react.ErrorBarProps.onDropCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDropCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDropCapture?: DragEventHandler<HTMLElement>'
      return:
        description: ''
        type: DragEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDropCapture
  - name: onDurationChange
    uid: '@azure/communication-react.ErrorBarProps.onDurationChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChange
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDurationChange?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDurationChange
  - name: onDurationChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onDurationChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChangeCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDurationChangeCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onDurationChangeCapture
  - name: onEmptied
    uid: '@azure/communication-react.ErrorBarProps.onEmptied'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptied
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEmptied?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEmptied
  - name: onEmptiedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEmptiedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptiedCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEmptiedCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEmptiedCapture
  - name: onEncrypted
    uid: '@azure/communication-react.ErrorBarProps.onEncrypted'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncrypted
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEncrypted?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEncrypted
  - name: onEncryptedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEncryptedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncryptedCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEncryptedCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEncryptedCapture
  - name: onEnded
    uid: '@azure/communication-react.ErrorBarProps.onEnded'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEnded
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEnded?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEnded
  - name: onEndedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEndedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEndedCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onEndedCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onEndedCapture
  - name: onError
    uid: '@azure/communication-react.ErrorBarProps.onError'
    package: '@azure/communication-react'
    summary: ''
    fullName: onError
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onError?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onError
  - name: onErrorCapture
    uid: '@azure/communication-react.ErrorBarProps.onErrorCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onErrorCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onErrorCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onErrorCapture
  - name: onExpandButtonToggled
    uid: '@azure/communication-react.ErrorBarProps.onExpandButtonToggled'
    package: '@azure/communication-react'
    summary: Callback to execute when expand button is toggled
    fullName: onExpandButtonToggled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onExpandButtonToggled?: (expandSingleLine: boolean) => void'
      return:
        description: ''
        type: '(expandSingleLine: boolean) =&gt; void'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onExpandButtonToggled
  - name: onFocus
    uid: '@azure/communication-react.ErrorBarProps.onFocus'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onFocus?: FocusEventHandler<HTMLElement>'
      return:
        description: ''
        type: FocusEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onFocus
  - name: onFocusCapture
    uid: '@azure/communication-react.ErrorBarProps.onFocusCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocusCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onFocusCapture?: FocusEventHandler<HTMLElement>'
      return:
        description: ''
        type: FocusEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onFocusCapture
  - name: onGotPointerCapture
    uid: '@azure/communication-react.ErrorBarProps.onGotPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onGotPointerCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onGotPointerCapture
  - name: onGotPointerCaptureCapture
    uid: '@azure/communication-react.ErrorBarProps.onGotPointerCaptureCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCaptureCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onGotPointerCaptureCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onGotPointerCaptureCapture
  - name: onInput
    uid: '@azure/communication-react.ErrorBarProps.onInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInput
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onInput?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onInput
  - name: onInputCapture
    uid: '@azure/communication-react.ErrorBarProps.onInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInputCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onInputCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onInputCapture
  - name: onInvalid
    uid: '@azure/communication-react.ErrorBarProps.onInvalid'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalid
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onInvalid?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onInvalid
  - name: onInvalidCapture
    uid: '@azure/communication-react.ErrorBarProps.onInvalidCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalidCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onInvalidCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onInvalidCapture
  - name: onKeyDown
    uid: '@azure/communication-react.ErrorBarProps.onKeyDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDown
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onKeyDown?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyDown
  - name: onKeyDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDownCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onKeyDownCapture?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyDownCapture
  - name: onKeyPress
    uid: '@azure/communication-react.ErrorBarProps.onKeyPress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPress
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use `onKeyUp` or `onKeyDown` instead
    syntax:
      content: 'onKeyPress?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyPress
  - name: onKeyPressCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyPressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPressCapture
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use `onKeyUpCapture` or `onKeyDownCapture` instead
    syntax:
      content: 'onKeyPressCapture?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyPressCapture
  - name: onKeyUp
    uid: '@azure/communication-react.ErrorBarProps.onKeyUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onKeyUp?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyUp
  - name: onKeyUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUpCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onKeyUpCapture?: KeyboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: KeyboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onKeyUpCapture
  - name: onLoad
    uid: '@azure/communication-react.ErrorBarProps.onLoad'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoad
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoad?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoad
  - name: onLoadCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadCapture
  - name: onLoadedData
    uid: '@azure/communication-react.ErrorBarProps.onLoadedData'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedData
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadedData?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadedData
  - name: onLoadedDataCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadedDataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedDataCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadedDataCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadedDataCapture
  - name: onLoadedMetadata
    uid: '@azure/communication-react.ErrorBarProps.onLoadedMetadata'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadata
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadedMetadata?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadedMetadata
  - name: onLoadedMetadataCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadedMetadataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadataCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadedMetadataCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadedMetadataCapture
  - name: onLoadStart
    uid: '@azure/communication-react.ErrorBarProps.onLoadStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadStart?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadStart
  - name: onLoadStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStartCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLoadStartCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLoadStartCapture
  - name: onLostPointerCapture
    uid: '@azure/communication-react.ErrorBarProps.onLostPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLostPointerCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLostPointerCapture
  - name: onLostPointerCaptureCapture
    uid: '@azure/communication-react.ErrorBarProps.onLostPointerCaptureCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCaptureCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLostPointerCaptureCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onLostPointerCaptureCapture
  - name: onMouseDown
    uid: '@azure/communication-react.ErrorBarProps.onMouseDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDown
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseDown?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseDown
  - name: onMouseDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDownCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseDownCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseDownCapture
  - name: onMouseEnter
    uid: '@azure/communication-react.ErrorBarProps.onMouseEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseEnter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseEnter?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseEnter
  - name: onMouseLeave
    uid: '@azure/communication-react.ErrorBarProps.onMouseLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseLeave
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseLeave?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseLeave
  - name: onMouseMove
    uid: '@azure/communication-react.ErrorBarProps.onMouseMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMove
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseMove?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseMove
  - name: onMouseMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMoveCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseMoveCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseMoveCapture
  - name: onMouseOut
    uid: '@azure/communication-react.ErrorBarProps.onMouseOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOut
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseOut?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseOut
  - name: onMouseOutCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOutCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseOutCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseOutCapture
  - name: onMouseOver
    uid: '@azure/communication-react.ErrorBarProps.onMouseOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOver
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseOver?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseOver
  - name: onMouseOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOverCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseOverCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseOverCapture
  - name: onMouseUp
    uid: '@azure/communication-react.ErrorBarProps.onMouseUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseUp?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseUp
  - name: onMouseUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUpCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMouseUpCapture?: MouseEventHandler<HTMLElement>'
      return:
        description: ''
        type: MouseEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onMouseUpCapture
  - name: onPaste
    uid: '@azure/communication-react.ErrorBarProps.onPaste'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPaste
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPaste?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPaste
  - name: onPasteCapture
    uid: '@azure/communication-react.ErrorBarProps.onPasteCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPasteCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPasteCapture?: ClipboardEventHandler<HTMLElement>'
      return:
        description: ''
        type: ClipboardEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPasteCapture
  - name: onPause
    uid: '@azure/communication-react.ErrorBarProps.onPause'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPause
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPause?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPause
  - name: onPauseCapture
    uid: '@azure/communication-react.ErrorBarProps.onPauseCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPauseCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPauseCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPauseCapture
  - name: onPlay
    uid: '@azure/communication-react.ErrorBarProps.onPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPlay?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPlay
  - name: onPlayCapture
    uid: '@azure/communication-react.ErrorBarProps.onPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPlayCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPlayCapture
  - name: onPlaying
    uid: '@azure/communication-react.ErrorBarProps.onPlaying'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlaying
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPlaying?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPlaying
  - name: onPlayingCapture
    uid: '@azure/communication-react.ErrorBarProps.onPlayingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayingCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPlayingCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPlayingCapture
  - name: onPointerCancel
    uid: '@azure/communication-react.ErrorBarProps.onPointerCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerCancel?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerCancel
  - name: onPointerCancelCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancelCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerCancelCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerCancelCapture
  - name: onPointerDown
    uid: '@azure/communication-react.ErrorBarProps.onPointerDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDown
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerDown?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerDown
  - name: onPointerDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDownCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerDownCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerDownCapture
  - name: onPointerEnter
    uid: '@azure/communication-react.ErrorBarProps.onPointerEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerEnter
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerEnter?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerEnter
  - name: onPointerLeave
    uid: '@azure/communication-react.ErrorBarProps.onPointerLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerLeave
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerLeave?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerLeave
  - name: onPointerMove
    uid: '@azure/communication-react.ErrorBarProps.onPointerMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMove
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerMove?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerMove
  - name: onPointerMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMoveCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerMoveCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerMoveCapture
  - name: onPointerOut
    uid: '@azure/communication-react.ErrorBarProps.onPointerOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOut
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerOut?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerOut
  - name: onPointerOutCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOutCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerOutCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerOutCapture
  - name: onPointerOver
    uid: '@azure/communication-react.ErrorBarProps.onPointerOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOver
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerOver?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerOver
  - name: onPointerOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOverCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerOverCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerOverCapture
  - name: onPointerUp
    uid: '@azure/communication-react.ErrorBarProps.onPointerUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerUp?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerUp
  - name: onPointerUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUpCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPointerUpCapture?: PointerEventHandler<HTMLElement>'
      return:
        description: ''
        type: PointerEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onPointerUpCapture
  - name: onProgress
    uid: '@azure/communication-react.ErrorBarProps.onProgress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgress
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onProgress?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onProgress
  - name: onProgressCapture
    uid: '@azure/communication-react.ErrorBarProps.onProgressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgressCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onProgressCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onProgressCapture
  - name: onRateChange
    uid: '@azure/communication-react.ErrorBarProps.onRateChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChange
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRateChange?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onRateChange
  - name: onRateChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onRateChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChangeCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRateChangeCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onRateChangeCapture
  - name: onReset
    uid: '@azure/communication-react.ErrorBarProps.onReset'
    package: '@azure/communication-react'
    summary: ''
    fullName: onReset
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onReset?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onReset
  - name: onResetCapture
    uid: '@azure/communication-react.ErrorBarProps.onResetCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onResetCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onResetCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onResetCapture
  - name: onScroll
    uid: '@azure/communication-react.ErrorBarProps.onScroll'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScroll
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onScroll?: UIEventHandler<HTMLElement>'
      return:
        description: ''
        type: UIEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onScroll
  - name: onScrollCapture
    uid: '@azure/communication-react.ErrorBarProps.onScrollCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScrollCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onScrollCapture?: UIEventHandler<HTMLElement>'
      return:
        description: ''
        type: UIEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onScrollCapture
  - name: onSeeked
    uid: '@azure/communication-react.ErrorBarProps.onSeeked'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeked
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSeeked?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSeeked
  - name: onSeekedCapture
    uid: '@azure/communication-react.ErrorBarProps.onSeekedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekedCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSeekedCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSeekedCapture
  - name: onSeeking
    uid: '@azure/communication-react.ErrorBarProps.onSeeking'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeking
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSeeking?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSeeking
  - name: onSeekingCapture
    uid: '@azure/communication-react.ErrorBarProps.onSeekingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekingCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSeekingCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSeekingCapture
  - name: onSelect
    uid: '@azure/communication-react.ErrorBarProps.onSelect'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelect
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSelect?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSelect
  - name: onSelectCapture
    uid: '@azure/communication-react.ErrorBarProps.onSelectCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSelectCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSelectCapture
  - name: onStalled
    uid: '@azure/communication-react.ErrorBarProps.onStalled'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalled
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStalled?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onStalled
  - name: onStalledCapture
    uid: '@azure/communication-react.ErrorBarProps.onStalledCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalledCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStalledCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onStalledCapture
  - name: onSubmit
    uid: '@azure/communication-react.ErrorBarProps.onSubmit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSubmit?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSubmit
  - name: onSubmitCapture
    uid: '@azure/communication-react.ErrorBarProps.onSubmitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmitCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSubmitCapture?: FormEventHandler<HTMLElement>'
      return:
        description: ''
        type: FormEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSubmitCapture
  - name: onSuspend
    uid: '@azure/communication-react.ErrorBarProps.onSuspend'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspend
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSuspend?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSuspend
  - name: onSuspendCapture
    uid: '@azure/communication-react.ErrorBarProps.onSuspendCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspendCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSuspendCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onSuspendCapture
  - name: onTimeUpdate
    uid: '@azure/communication-react.ErrorBarProps.onTimeUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTimeUpdate?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTimeUpdate
  - name: onTimeUpdateCapture
    uid: '@azure/communication-react.ErrorBarProps.onTimeUpdateCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdateCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTimeUpdateCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTimeUpdateCapture
  - name: onTouchCancel
    uid: '@azure/communication-react.ErrorBarProps.onTouchCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchCancel?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchCancel
  - name: onTouchCancelCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancelCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchCancelCapture?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchCancelCapture
  - name: onTouchEnd
    uid: '@azure/communication-react.ErrorBarProps.onTouchEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchEnd?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchEnd
  - name: onTouchEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEndCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchEndCapture?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchEndCapture
  - name: onTouchMove
    uid: '@azure/communication-react.ErrorBarProps.onTouchMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMove
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchMove?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchMove
  - name: onTouchMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMoveCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchMoveCapture?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchMoveCapture
  - name: onTouchStart
    uid: '@azure/communication-react.ErrorBarProps.onTouchStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStart
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchStart?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchStart
  - name: onTouchStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStartCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTouchStartCapture?: TouchEventHandler<HTMLElement>'
      return:
        description: ''
        type: TouchEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTouchStartCapture
  - name: onTransitionEnd
    uid: '@azure/communication-react.ErrorBarProps.onTransitionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEnd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTransitionEnd?: TransitionEventHandler<HTMLElement>'
      return:
        description: ''
        type: TransitionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTransitionEnd
  - name: onTransitionEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onTransitionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEndCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onTransitionEndCapture?: TransitionEventHandler<HTMLElement>'
      return:
        description: ''
        type: TransitionEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onTransitionEndCapture
  - name: onVolumeChange
    uid: '@azure/communication-react.ErrorBarProps.onVolumeChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChange
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onVolumeChange?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onVolumeChange
  - name: onVolumeChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onVolumeChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChangeCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onVolumeChangeCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onVolumeChangeCapture
  - name: onWaiting
    uid: '@azure/communication-react.ErrorBarProps.onWaiting'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaiting
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onWaiting?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onWaiting
  - name: onWaitingCapture
    uid: '@azure/communication-react.ErrorBarProps.onWaitingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaitingCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onWaitingCapture?: ReactEventHandler<HTMLElement>'
      return:
        description: ''
        type: ReactEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onWaitingCapture
  - name: onWheel
    uid: '@azure/communication-react.ErrorBarProps.onWheel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onWheel?: WheelEventHandler<HTMLElement>'
      return:
        description: ''
        type: WheelEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onWheel
  - name: onWheelCapture
    uid: '@azure/communication-react.ErrorBarProps.onWheelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheelCapture
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onWheelCapture?: WheelEventHandler<HTMLElement>'
      return:
        description: ''
        type: WheelEventHandler&lt;HTMLElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.onWheelCapture
  - name: overflowButtonAriaLabel
    uid: '@azure/communication-react.ErrorBarProps.overflowButtonAriaLabel'
    package: '@azure/communication-react'
    summary: Aria label on overflow button if truncated is defined.
    fullName: overflowButtonAriaLabel
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use `expandButtonProps` instead.
    syntax:
      content: 'overflowButtonAriaLabel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.overflowButtonAriaLabel
  - name: part
    uid: '@azure/communication-react.ErrorBarProps.part'
    package: '@azure/communication-react'
    summary: >-


      See
      https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part
    fullName: part
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'part?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.part
  - name: prefix
    uid: '@azure/communication-react.ErrorBarProps.prefix'
    package: '@azure/communication-react'
    summary: ''
    fullName: prefix
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'prefix?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.prefix
  - name: property
    uid: '@azure/communication-react.ErrorBarProps.property'
    package: '@azure/communication-react'
    summary: ''
    fullName: property
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'property?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.property
  - name: radioGroup
    uid: '@azure/communication-react.ErrorBarProps.radioGroup'
    package: '@azure/communication-react'
    summary: ''
    fullName: radioGroup
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'radioGroup?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.radioGroup
  - name: ref
    uid: '@azure/communication-react.ErrorBarProps.ref'
    package: '@azure/communication-react'
    summary: >-
      Allows getting a ref to the component instance.

      Once the component unmounts, React will set `ref.current` to `null`

      (or call the ref with `null` if you passed a callback ref).


      See [React
      Docs](https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom)
    fullName: ref
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ref?: LegacyRef<HTMLDivElement>'
      return:
        description: ''
        type: LegacyRef&lt;HTMLDivElement&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.ref
  - name: rel
    uid: '@azure/communication-react.ErrorBarProps.rel'
    package: '@azure/communication-react'
    summary: ''
    fullName: rel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rel?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.rel
  - name: resource
    uid: '@azure/communication-react.ErrorBarProps.resource'
    package: '@azure/communication-react'
    summary: ''
    fullName: resource
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resource?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.resource
  - name: results
    uid: '@azure/communication-react.ErrorBarProps.results'
    package: '@azure/communication-react'
    summary: ''
    fullName: results
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'results?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.results
  - name: rev
    uid: '@azure/communication-react.ErrorBarProps.rev'
    package: '@azure/communication-react'
    summary: ''
    fullName: rev
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rev?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.rev
  - name: role
    uid: '@azure/communication-react.ErrorBarProps.role'
    package: '@azure/communication-react'
    summary: Custom role to apply to the MessageBar.
    fullName: role
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'role?: "none" | "alert" | "status"'
      return:
        description: ''
        type: '"none" | "alert" | "status"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.role
  - name: security
    uid: '@azure/communication-react.ErrorBarProps.security'
    package: '@azure/communication-react'
    summary: ''
    fullName: security
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'security?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.security
  - name: showExpandButton
    uid: '@azure/communication-react.ErrorBarProps.showExpandButton'
    package: '@azure/communication-react'
    summary: >-
      An optional override to show the expand/collapse icon. It will only be
      shown by default for

      single-line truncated MessageBars that do not have actions.
    fullName: showExpandButton
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'showExpandButton?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.showExpandButton
  - name: slot
    uid: '@azure/communication-react.ErrorBarProps.slot'
    package: '@azure/communication-react'
    summary: ''
    fullName: slot
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'slot?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.slot
  - name: spellCheck
    uid: '@azure/communication-react.ErrorBarProps.spellCheck'
    package: '@azure/communication-react'
    summary: ''
    fullName: spellCheck
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'spellCheck?: Booleanish'
      return:
        description: ''
        type: Booleanish
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.spellCheck
  - name: style
    uid: '@azure/communication-react.ErrorBarProps.style'
    package: '@azure/communication-react'
    summary: ''
    fullName: style
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'style?: CSSProperties'
      return:
        description: ''
        type: CSSProperties
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.style
  - name: styles
    uid: '@azure/communication-react.ErrorBarProps.styles'
    package: '@azure/communication-react'
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    fullName: styles
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IMessageBarStyleProps,
        IMessageBarStyles>
      return:
        description: ''
        type: IStyleFunctionOrObject&lt;IMessageBarStyleProps, IMessageBarStyles&gt;
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.styles
  - name: suppressContentEditableWarning
    uid: '@azure/communication-react.ErrorBarProps.suppressContentEditableWarning'
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressContentEditableWarning
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'suppressContentEditableWarning?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.suppressContentEditableWarning
  - name: suppressHydrationWarning
    uid: '@azure/communication-react.ErrorBarProps.suppressHydrationWarning'
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressHydrationWarning
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'suppressHydrationWarning?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.suppressHydrationWarning
  - name: tabIndex
    uid: '@azure/communication-react.ErrorBarProps.tabIndex'
    package: '@azure/communication-react'
    summary: ''
    fullName: tabIndex
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tabIndex?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.tabIndex
  - name: theme
    uid: '@azure/communication-react.ErrorBarProps.theme'
    package: '@azure/communication-react'
    summary: Theme (provided through customization.)
    fullName: theme
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme'
      return:
        description: ''
        type: ITheme
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.theme
  - name: title
    uid: '@azure/communication-react.ErrorBarProps.title'
    package: '@azure/communication-react'
    summary: ''
    fullName: title
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'title?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.title
  - name: translate
    uid: '@azure/communication-react.ErrorBarProps.translate'
    package: '@azure/communication-react'
    summary: ''
    fullName: translate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'translate?: "yes" | "no"'
      return:
        description: ''
        type: '"yes" | "no"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.translate
  - name: truncated
    uid: '@azure/communication-react.ErrorBarProps.truncated'
    package: '@azure/communication-react'
    summary: >-
      Determines if the message bar text is truncated.

      If true, a button will render to toggle between a single line view and
      multiline view.

      This prop is for single line message bars with no buttons only in a
      limited space scenario.
    fullName: truncated
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'truncated?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.truncated
  - name: typeof
    uid: '@azure/communication-react.ErrorBarProps.typeof'
    package: '@azure/communication-react'
    summary: ''
    fullName: typeof
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'typeof?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.typeof
  - name: unselectable
    uid: '@azure/communication-react.ErrorBarProps.unselectable'
    package: '@azure/communication-react'
    summary: ''
    fullName: unselectable
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'unselectable?: "off" | "on"'
      return:
        description: ''
        type: '"off" | "on"'
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.unselectable
  - name: vocab
    uid: '@azure/communication-react.ErrorBarProps.vocab'
    package: '@azure/communication-react'
    summary: ''
    fullName: vocab
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'vocab?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> IMessageBarProps.vocab
extends: IMessageBarProps
