### YamlMime:TSType
name: Connection
uid: microsoft-cognitiveservices-speech-sdk.Connection
package: microsoft-cognitiveservices-speech-sdk
summary: >-
  Connection is a proxy class for managing connection to the speech service of
  the specified Recognizer.

  By default, a Recognizer autonomously manages connection to service when
  needed.

  The Connection class provides additional methods for users to explicitly open
  or close a connection and

  to subscribe to connection status changes.

  The use of Connection is optional, and mainly for scenarios where fine tuning
  of application

  behavior based on connection status is needed. Users can optionally call
  Open() to manually set up a connection

  in advance before starting recognition on the Recognizer associated with this
  Connection.

  If the Recognizer needs to connect or disconnect to service, it will

  setup or shutdown the connection independently. In this case the Connection
  will be notified by change of connection

  status via Connected/Disconnected events.

  Added in version 1.2.1.
fullName: Connection
remarks: ''
isDeprecated: false
type: class
properties:
  - name: connected
    uid: microsoft-cognitiveservices-speech-sdk.Connection.connected
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The Connected event to indicate that the recognizer is connected to
      service.
    fullName: connected
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'connected: (args: ConnectionEventArgs) => void'
      return:
        description: ''
        type: '(args: ConnectionEventArgs) =&gt; void'
  - name: disconnected
    uid: microsoft-cognitiveservices-speech-sdk.Connection.disconnected
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      The Disconnected event to indicate that the recognizer is disconnected
      from service.
    fullName: disconnected
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'disconnected: (args: ConnectionEventArgs) => void'
      return:
        description: ''
        type: '(args: ConnectionEventArgs) =&gt; void'
  - name: messageReceived
    uid: microsoft-cognitiveservices-speech-sdk.Connection.messageReceived
    package: microsoft-cognitiveservices-speech-sdk
    summary: Any message received from the Speech Service.
    fullName: messageReceived
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageReceived: (args: ConnectionMessageEventArgs) => void'
      return:
        description: ''
        type: '(args: ConnectionMessageEventArgs) =&gt; void'
  - name: messageSent
    uid: microsoft-cognitiveservices-speech-sdk.Connection.messageSent
    package: microsoft-cognitiveservices-speech-sdk
    summary: Any message sent to the Speech Service.
    fullName: messageSent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'messageSent: (args: ConnectionMessageEventArgs) => void'
      return:
        description: ''
        type: '(args: ConnectionMessageEventArgs) =&gt; void'
  - name: receivedServiceMessage
    uid: microsoft-cognitiveservices-speech-sdk.Connection.receivedServiceMessage
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Any message from service that is not being processed by any other top
      level recognizers.


      Will be removed in 2.0.
    fullName: receivedServiceMessage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'receivedServiceMessage: (args: ServiceEventArgs) => void'
      return:
        description: ''
        type: '(args: ServiceEventArgs) =&gt; void'
methods:
  - name: close()
    uid: microsoft-cognitiveservices-speech-sdk.Connection.close
    package: microsoft-cognitiveservices-speech-sdk
    summary: Dispose of associated resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function close()
  - name: 'closeConnection(() => void, (error: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.Connection.closeConnection
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Closes the connection the service.

      Users can optionally call closeConnection() to manually shutdown the
      connection of the associated Recognizer.


      If closeConnection() is called during recognition, recognition will fail
      and cancel with an error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function closeConnection(cb?: () => void, err?: (error: string) => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(error: string) =&gt; void'
          description: ''
  - name: fromRecognizer(Recognizer | ConversationTranscriber)
    uid: microsoft-cognitiveservices-speech-sdk.Connection.fromRecognizer
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the Connection instance from the specified recognizer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function fromRecognizer(recognizer: Recognizer |
        ConversationTranscriber): Connection
      parameters:
        - id: recognizer
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.Recognizer" /> |
            <xref
            uid="microsoft-cognitiveservices-speech-sdk.ConversationTranscriber"
            />
          description: The recognizer associated with the connection.
      return:
        description: The Connection instance of the recognizer.
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.Connection" />
  - name: fromSynthesizer(SpeechSynthesizer)
    uid: microsoft-cognitiveservices-speech-sdk.Connection.fromSynthesizer
    package: microsoft-cognitiveservices-speech-sdk
    summary: Gets the Connection instance from the specified synthesizer.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function fromSynthesizer(synthesizer: SpeechSynthesizer):
        Connection
      parameters:
        - id: synthesizer
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.SpeechSynthesizer"
            />
          description: The synthesizer associated with the connection.
      return:
        description: The Connection instance of the synthesizer.
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.Connection" />
  - name: 'openConnection(() => void, (error: string) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.Connection.openConnection
    package: microsoft-cognitiveservices-speech-sdk
    summary: >-
      Starts to set up connection to the service.

      Users can optionally call openConnection() to manually set up a connection
      in advance before starting recognition on the

      Recognizer associated with this Connection. After starting recognition,
      calling Open() will have no effect


      Note: On return, the connection might not be ready yet. Please subscribe
      to the Connected event to

      be notified when the connection is established.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function openConnection(cb?: () => void, err?: (error: string) => void)'
      parameters:
        - id: cb
          type: () =&gt; void
          description: ''
        - id: err
          type: '(error: string) =&gt; void'
          description: ''
  - name: >-
      sendMessageAsync(string, string | ArrayBuffer, () => void, (error: string)
      => void)
    uid: microsoft-cognitiveservices-speech-sdk.Connection.sendMessageAsync
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Sends a message to the speech service.
      Added in version 1.13.0.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendMessageAsync(path: string, payload: string | ArrayBuffer,
        success?: () => void, error?: (error: string) => void)
      parameters:
        - id: path
          type: string
          description: The WebSocket path of the message
        - id: payload
          type: string | ArrayBuffer
          description: The payload of the message. This is a json string or a ArrayBuffer.
        - id: success
          type: () =&gt; void
          description: A callback to indicate success.
        - id: error
          type: '(error: string) =&gt; void'
          description: A callback to indicate an error.
  - name: setMessageProperty(string, string, string | object)
    uid: microsoft-cognitiveservices-speech-sdk.Connection.setMessageProperty
    package: microsoft-cognitiveservices-speech-sdk
    summary: |-
      Appends a parameter in a message to service.
      Added in version 1.12.1.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setMessageProperty(path: string, propertyName: string,
        propertyValue: string | object)
      parameters:
        - id: path
          type: string
          description: The path of the network message.
        - id: propertyName
          type: string
          description: Name of the property
        - id: propertyValue
          type: string | object
          description: Value of the property. This is a json string.
