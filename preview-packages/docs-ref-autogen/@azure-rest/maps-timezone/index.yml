### YamlMime:TSPackage
uid: '@azure-rest/maps-timezone'
name: '@azure-rest/maps-timezone'
summary: ''
type: package
interfaces:
  - '@azure-rest/maps-timezone.ConvertWindowsTimezoneToIana'
  - '@azure-rest/maps-timezone.CountryRecordOutput'
  - '@azure-rest/maps-timezone.ErrorAdditionalInfoOutput'
  - '@azure-rest/maps-timezone.ErrorDetailOutput'
  - '@azure-rest/maps-timezone.ErrorResponseOutput'
  - '@azure-rest/maps-timezone.GetIanaTimezoneIds'
  - '@azure-rest/maps-timezone.GetIanaVersion'
  - '@azure-rest/maps-timezone.GetTimeZoneByCoordinates'
  - '@azure-rest/maps-timezone.GetTimeZoneByID'
  - '@azure-rest/maps-timezone.GetWindowsTimezoneIds'
  - '@azure-rest/maps-timezone.IanaIdOutput'
  - '@azure-rest/maps-timezone.MapsTimeZoneClientOptions'
  - '@azure-rest/maps-timezone.ReferenceTimeOutput'
  - '@azure-rest/maps-timezone.RepresentativePointOutput'
  - '@azure-rest/maps-timezone.Routes'
  - '@azure-rest/maps-timezone.TimeTransitionOutput'
  - '@azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIana200Response'
  - >-
    @azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIanaDefaultResponse
  - '@azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIanaQueryParam'
  - >-
    @azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIanaQueryParamProperties
  - '@azure-rest/maps-timezone.TimeZoneGetIanaTimezoneIds200Response'
  - '@azure-rest/maps-timezone.TimeZoneGetIanaTimezoneIdsDefaultResponse'
  - '@azure-rest/maps-timezone.TimeZoneGetIanaVersion200Response'
  - '@azure-rest/maps-timezone.TimeZoneGetIanaVersionDefaultResponse'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinates200Response'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesDefaultResponse'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesHeaderParam'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesHeaders'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesQueryParam'
  - >-
    @azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesQueryParamProperties
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByID200Response'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDDefaultResponse'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDHeaderParam'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDHeaders'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDQueryParam'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDQueryParamProperties'
  - '@azure-rest/maps-timezone.TimeZoneGetWindowsTimezoneIds200Response'
  - '@azure-rest/maps-timezone.TimeZoneGetWindowsTimezoneIdsDefaultResponse'
  - '@azure-rest/maps-timezone.TimeZoneIanaVersionResultOutput'
  - '@azure-rest/maps-timezone.TimeZoneIdOutput'
  - '@azure-rest/maps-timezone.TimeZoneNamesOutput'
  - '@azure-rest/maps-timezone.TimeZoneResultOutput'
  - '@azure-rest/maps-timezone.WindowsTimeZoneOutput'
typeAliases:
  - '@azure-rest/maps-timezone.MapsTimeZoneClient'
  - '@azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIanaParameters'
  - '@azure-rest/maps-timezone.TimeZoneGetIanaTimezoneIdsParameters'
  - '@azure-rest/maps-timezone.TimeZoneGetIanaVersionParameters'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesParameters'
  - '@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDParameters'
  - '@azure-rest/maps-timezone.TimeZoneGetWindowsTimezoneIdsParameters'
functions:
  - name: default(AzureKeyCredential, ClientOptions)
    uid: '@azure-rest/maps-timezone.default'
    package: '@azure-rest/maps-timezone'
    summary: |+
      Creates an instance of MapsTimeZoneClient from a subscription key.

      **Example**

      ```ts snippet:ReadmeSampleCreateClient_SubscriptionKey
      import { AzureKeyCredential } from "@azure/core-auth";
      import MapsTimeZone from "@azure-rest/maps-timezone";

      const credential = new AzureKeyCredential("<subscription-key>");
      const client = MapsTimeZone(credential);
      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureKeyCredential, options?:
        ClientOptions): MapsTimeZoneClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureKeyCredential" />
          description: >-
            An AzureKeyCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the TimeZone Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-timezone.MapsTimeZoneClient" />
  - name: default(TokenCredential, string, ClientOptions)
    uid: '@azure-rest/maps-timezone.default_1'
    package: '@azure-rest/maps-timezone'
    summary: >+
      Creates an instance of MapsTimeZone from an Azure Identity
      `TokenCredential`.


      **Example**


      ```ts snippet:ReadmeSampleCreateClient_TokenCredential

      import { DefaultAzureCredential } from "@azure/identity";

      import MapsTimeZone from "@azure-rest/maps-timezone";


      const credential = new DefaultAzureCredential();

      const client = MapsTimeZone(credential, "<maps-account-client-id>");

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: TokenCredential, mapsAccountClientId:
        string, options?: ClientOptions): MapsTimeZoneClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            An TokenCredential instance used to authenticate requests to the
            service
        - id: mapsAccountClientId
          type: string
          description: The Azure Maps client id of a specific map resource
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the TimeZone Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-timezone.MapsTimeZoneClient" />
  - name: default(AzureSASCredential, ClientOptions)
    uid: '@azure-rest/maps-timezone.default_2'
    package: '@azure-rest/maps-timezone'
    summary: >+
      Creates an instance of MapsTimeZone from an Azure Identity
      `AzureSASCredential`.


      **Example**


      ```ts snippet:ReadmeSampleCreateClient_SASToken

      import { AzureSASCredential } from "@azure/core-auth";

      import MapsTimeZone from "@azure-rest/maps-timezone";


      const credential = new AzureSASCredential("<SAS Token>");

      const client = MapsTimeZone(credential);

      ```

    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(credential: AzureSASCredential, options?:
        ClientOptions): MapsTimeZoneClient
      parameters:
        - id: credential
          type: <xref uid="@azure/core-auth.AzureSASCredential" />
          description: >-
            An AzureSASCredential instance used to authenticate requests to the
            service
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: Options used to configure the TimeZone Client
      return:
        description: ''
        type: <xref uid="@azure-rest/maps-timezone.MapsTimeZoneClient" />
  - name: >-
      isUnexpected(TimeZoneGetTimeZoneByID200Response |
      TimeZoneGetTimeZoneByIDDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: TimeZoneGetTimeZoneByID200Response |
        TimeZoneGetTimeZoneByIDDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetTimeZoneByID200Response"
            /> | <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetTimeZoneByIDDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(TimeZoneGetTimeZoneByCoordinates200Response |
      TimeZoneGetTimeZoneByCoordinatesDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected_1'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response:
        TimeZoneGetTimeZoneByCoordinates200Response |
        TimeZoneGetTimeZoneByCoordinatesDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinates200Response"
            /> | <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetTimeZoneByCoordinatesDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(TimeZoneGetWindowsTimezoneIds200Response |
      TimeZoneGetWindowsTimezoneIdsDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected_2'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: TimeZoneGetWindowsTimezoneIds200Response
        | TimeZoneGetWindowsTimezoneIdsDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetWindowsTimezoneIds200Response"
            /> | <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetWindowsTimezoneIdsDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(TimeZoneGetIanaTimezoneIds200Response |
      TimeZoneGetIanaTimezoneIdsDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected_3'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: TimeZoneGetIanaTimezoneIds200Response |
        TimeZoneGetIanaTimezoneIdsDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetIanaTimezoneIds200Response"
            /> | <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetIanaTimezoneIdsDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(TimeZoneGetIanaVersion200Response |
      TimeZoneGetIanaVersionDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected_4'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: TimeZoneGetIanaVersion200Response |
        TimeZoneGetIanaVersionDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetIanaVersion200Response" />
            | <xref
            uid="@azure-rest/maps-timezone.TimeZoneGetIanaVersionDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: >-
      isUnexpected(TimeZoneConvertWindowsTimezoneToIana200Response |
      TimeZoneConvertWindowsTimezoneToIanaDefaultResponse)
    uid: '@azure-rest/maps-timezone.isUnexpected_5'
    package: '@azure-rest/maps-timezone'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response:
        TimeZoneConvertWindowsTimezoneToIana200Response |
        TimeZoneConvertWindowsTimezoneToIanaDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIana200Response"
            /> | <xref
            uid="@azure-rest/maps-timezone.TimeZoneConvertWindowsTimezoneToIanaDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
