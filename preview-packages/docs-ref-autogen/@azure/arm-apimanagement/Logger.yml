### YamlMime:TSType
name: Logger
uid: '@azure/arm-apimanagement.Logger'
package: '@azure/arm-apimanagement'
summary: Interface representing a Logger.
fullName: Logger
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, LoggerContract,
      LoggerCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or Updates a logger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        loggerId: string, parameters: LoggerContract, options?:
        LoggerCreateOrUpdateOptionalParams):
        Promise<LoggerCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: loggerId
          type: string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.LoggerContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.LoggerCreateOrUpdateResponse" />&gt;
  - name: delete(string, string, string, string, LoggerDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified logger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string,
        loggerId: string, ifMatch: string, options?:
        LoggerDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: loggerId
          type: string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.LoggerDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, LoggerGetOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.get'
    package: '@azure/arm-apimanagement'
    summary: Gets the details of the logger specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, loggerId:
        string, options?: LoggerGetOptionalParams): Promise<LoggerGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: loggerId
          type: string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.LoggerGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.LoggerGetResponse"
          />&gt;
  - name: getEntityTag(string, string, string, LoggerGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the logger specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        loggerId: string, options?: LoggerGetEntityTagOptionalParams):
        Promise<LoggerGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: loggerId
          type: string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.LoggerGetEntityTagOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.LoggerGetEntityTagHeaders" />&gt;
  - name: listByService(string, string, LoggerListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of loggers in the specified service instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: LoggerListByServiceOptionalParams):
        PagedAsyncIterableIterator<LoggerContract, LoggerContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.LoggerListByServiceOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.LoggerContract" />, <xref
          uid="@azure/arm-apimanagement.LoggerContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      update(string, string, string, string, LoggerUpdateContract,
      LoggerUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.Logger.update'
    package: '@azure/arm-apimanagement'
    summary: Updates an existing logger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string,
        loggerId: string, ifMatch: string, parameters: LoggerUpdateContract,
        options?: LoggerUpdateOptionalParams): Promise<LoggerUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: loggerId
          type: string
          description: >-
            Logger identifier. Must be unique in the API Management service
            instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.LoggerUpdateContract" />
          description: Update parameters.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.LoggerUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.LoggerUpdateResponse"
          />&gt;
