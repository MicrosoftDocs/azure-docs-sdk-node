### YamlMime:TSType
name: EventGridSenderClient
uid: '@azure/eventgrid-namespaces.EventGridSenderClient'
package: '@azure/eventgrid-namespaces'
summary: Event Grid Namespaces Client
fullName: EventGridSenderClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      EventGridSenderClient(string, AzureKeyCredential | TokenCredential,
      string, EventGridSenderClientOptions)
    uid: '@azure/eventgrid-namespaces.EventGridSenderClient.constructor'
    package: '@azure/eventgrid-namespaces'
    summary: Azure Messaging EventGrid Client
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new EventGridSenderClient(endpoint: string, credential:
        AzureKeyCredential | TokenCredential, topicName: string, options?:
        EventGridSenderClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: ''
        - id: credential
          type: >-
            <xref uid="@azure/eventgrid-namespaces.AzureKeyCredential" /> |
            <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: topicName
          type: string
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/eventgrid-namespaces.EventGridSenderClientOptions"
            />
          description: ''
methods:
  - name: sendEvents<T>(CloudEvent<T> | CloudEvent<T>[], SendEventsOptions)
    uid: '@azure/eventgrid-namespaces.EventGridSenderClient.sendEvents'
    package: '@azure/eventgrid-namespaces'
    summary: >-
      Publish Cloud Events to namespace topic. In case of success, the server
      responds with an HTTP 200

      status code with an empty JSON object in response. Otherwise, the server
      can return various error codes.

      For example, 401: which indicates authorization failure, 403: which
      indicates quota exceeded or message

      is too large, 410: which indicates that specific topic is not found, 400:
      for bad request, and 500: for

      internal server error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendEvents<T>(events: CloudEvent<T> | CloudEvent<T>[],
        options?: SendEventsOptions): Promise<void>
      parameters:
        - id: events
          type: >-
            <xref uid="@azure/eventgrid-namespaces.CloudEvent" />&lt;T&gt; |
            <xref uid="@azure/eventgrid-namespaces.CloudEvent" />&lt;T&gt;[]
          description: Events to publish
        - id: options
          type: <xref uid="@azure/eventgrid-namespaces.SendEventsOptions" />
          description: Options to publish
      return:
        description: ''
        type: Promise&lt;void&gt;
