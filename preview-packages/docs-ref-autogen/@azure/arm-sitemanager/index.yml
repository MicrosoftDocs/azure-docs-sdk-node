### YamlMime:TSPackage
uid: '@azure/arm-sitemanager'
name: '@azure/arm-sitemanager'
summary: ''
type: package
enums:
  - '@azure/arm-sitemanager.KnownCreatedByType'
  - '@azure/arm-sitemanager.KnownResourceProvisioningState'
  - '@azure/arm-sitemanager.KnownVersions'
classes:
  - '@azure/arm-sitemanager.EdgeClient'
interfaces:
  - '@azure/arm-sitemanager.EdgeClientOptionalParams'
  - '@azure/arm-sitemanager.ErrorAdditionalInfo'
  - '@azure/arm-sitemanager.ErrorDetail'
  - '@azure/arm-sitemanager.ErrorResponse'
  - '@azure/arm-sitemanager.PageSettings'
  - '@azure/arm-sitemanager.PagedAsyncIterableIterator'
  - '@azure/arm-sitemanager.ProxyResource'
  - '@azure/arm-sitemanager.Resource'
  - '@azure/arm-sitemanager.RestorePollerOptions'
  - '@azure/arm-sitemanager.Site'
  - '@azure/arm-sitemanager.SiteAddressProperties'
  - '@azure/arm-sitemanager.SiteProperties'
  - '@azure/arm-sitemanager.SiteUpdate'
  - '@azure/arm-sitemanager.SiteUpdateProperties'
  - '@azure/arm-sitemanager.SitesByServiceGroupCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupGetOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupListByServiceGroupOptionalParams'
  - '@azure/arm-sitemanager.SitesByServiceGroupOperations'
  - '@azure/arm-sitemanager.SitesByServiceGroupUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionGetOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionListOptionalParams'
  - '@azure/arm-sitemanager.SitesBySubscriptionOperations'
  - '@azure/arm-sitemanager.SitesBySubscriptionUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesCreateOrUpdateOptionalParams'
  - '@azure/arm-sitemanager.SitesDeleteOptionalParams'
  - '@azure/arm-sitemanager.SitesGetOptionalParams'
  - '@azure/arm-sitemanager.SitesListByResourceGroupOptionalParams'
  - '@azure/arm-sitemanager.SitesOperations'
  - '@azure/arm-sitemanager.SitesUpdateOptionalParams'
  - '@azure/arm-sitemanager.SystemData'
typeAliases:
  - '@azure/arm-sitemanager.ContinuablePage'
  - '@azure/arm-sitemanager.CreatedByType'
  - '@azure/arm-sitemanager.ResourceProvisioningState'
functions:
  - name: >-
      restorePoller<TResponse, TResult>(EdgeClient, string, (args: any[]) =>
      PollerLike<OperationState<TResult>, TResult>,
      RestorePollerOptions<TResult, PathUncheckedResponse>)
    uid: '@azure/arm-sitemanager.restorePoller'
    package: '@azure/arm-sitemanager'
    summary: |-
      Creates a poller from the serialized state of another poller. This can be
      useful when you want to create pollers on a different host or a poller
      needs to be constructed after the original one is not in scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function restorePoller<TResponse, TResult>(client: EdgeClient,
        serializedState: string, sourceOperation: (args: any[]) =>
        PollerLike<OperationState<TResult>, TResult>, options?:
        RestorePollerOptions<TResult, PathUncheckedResponse>):
        PollerLike<OperationState<TResult>, TResult>
      parameters:
        - id: client
          type: <xref uid="@azure/arm-sitemanager.EdgeClient" />
          description: ''
        - id: serializedState
          type: string
          description: ''
        - id: sourceOperation
          type: >-
            (args: any[]) =&gt; PollerLike&lt;OperationState&lt;TResult&gt;,
            TResult&gt;
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/arm-sitemanager.RestorePollerOptions"
            />&lt;TResult, <xref
            uid="@azure-rest/core-client.PathUncheckedResponse" />&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;TResult&gt;, TResult&gt;
