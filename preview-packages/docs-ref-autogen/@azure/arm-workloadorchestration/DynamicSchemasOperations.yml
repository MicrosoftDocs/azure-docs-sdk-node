### YamlMime:TSType
name: DynamicSchemasOperations
uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations'
package: '@azure/arm-workloadorchestration'
summary: Interface representing a DynamicSchemas operations.
fullName: DynamicSchemasOperations
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: createOrUpdate
    uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations.createOrUpdate'
    package: '@azure/arm-workloadorchestration'
    summary: Create or update a DynamicSchema Resource
    fullName: createOrUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createOrUpdate: (resourceGroupName: string, schemaName: string,
        dynamicSchemaName: string, resource: DynamicSchema, options?:
        DynamicSchemasCreateOrUpdateOptionalParams) =>
        PollerLike<OperationState<DynamicSchema>, DynamicSchema>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, schemaName: string, dynamicSchemaName:
          string, resource: DynamicSchema, options?:
          DynamicSchemasCreateOrUpdateOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;DynamicSchema&gt;, DynamicSchema&gt;
  - name: delete
    uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations.delete'
    package: '@azure/arm-workloadorchestration'
    summary: ''
    fullName: delete
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        delete: (resourceGroupName: string, schemaName: string,
        dynamicSchemaName: string, options?: DynamicSchemasDeleteOptionalParams)
        => PollerLike<OperationState<void>, void>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, schemaName: string, dynamicSchemaName:
          string, options?: DynamicSchemasDeleteOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;void&gt;, void&gt;
  - name: get
    uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations.get'
    package: '@azure/arm-workloadorchestration'
    summary: Get a DynamicSchema Resource
    fullName: get
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        get: (resourceGroupName: string, schemaName: string, dynamicSchemaName:
        string, options?: DynamicSchemasGetOptionalParams) =>
        Promise<DynamicSchema>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, schemaName: string, dynamicSchemaName:
          string, options?: DynamicSchemasGetOptionalParams) =&gt;
          Promise&lt;DynamicSchema&gt;
  - name: listBySchema
    uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations.listBySchema'
    package: '@azure/arm-workloadorchestration'
    summary: List by Schema
    fullName: listBySchema
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        listBySchema: (resourceGroupName: string, schemaName: string, options?:
        DynamicSchemasListBySchemaOptionalParams) =>
        PagedAsyncIterableIterator<DynamicSchema, DynamicSchema[], PageSettings>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, schemaName: string, options?:
          DynamicSchemasListBySchemaOptionalParams) =&gt;
          PagedAsyncIterableIterator&lt;DynamicSchema, DynamicSchema[],
          PageSettings&gt;
  - name: update
    uid: '@azure/arm-workloadorchestration.DynamicSchemasOperations.update'
    package: '@azure/arm-workloadorchestration'
    summary: update a DynamicSchema Resource
    fullName: update
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        update: (resourceGroupName: string, schemaName: string,
        dynamicSchemaName: string, properties: DynamicSchema, options?:
        DynamicSchemasUpdateOptionalParams) => Promise<DynamicSchema>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, schemaName: string, dynamicSchemaName:
          string, properties: DynamicSchema, options?:
          DynamicSchemasUpdateOptionalParams) =&gt; Promise&lt;DynamicSchema&gt;
