### YamlMime:TSType
name: Accounts
uid: '@azure/arm-cognitiveservices.Accounts'
package: '@azure/arm-cognitiveservices'
summary: Interface representing a Accounts.
fullName: Accounts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, Account, AccountsCreateOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginCreate'
    package: '@azure/arm-cognitiveservices'
    summary: >-
      Create Cognitive Services Account. Accounts is a resource group wide
      resource type. It holds the

      keys for developer to access intelligent APIs. It's also the resource type
      for billing.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        account: Account, options?: AccountsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Account>, Account>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: account
          type: <xref uid="@azure/arm-cognitiveservices.Account" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cognitiveservices.Account" />&gt;, <xref
          uid="@azure/arm-cognitiveservices.Account" />&gt;&gt;
  - name: beginCreateAndWait(string, string, Account, AccountsCreateOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginCreateAndWait'
    package: '@azure/arm-cognitiveservices'
    summary: >-
      Create Cognitive Services Account. Accounts is a resource group wide
      resource type. It holds the

      keys for developer to access intelligent APIs. It's also the resource type
      for billing.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, accountName:
        string, account: Account, options?: AccountsCreateOptionalParams):
        Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: account
          type: <xref uid="@azure/arm-cognitiveservices.Account" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cognitiveservices.Account" />&gt;
  - name: beginDelete(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginDelete'
    package: '@azure/arm-cognitiveservices'
    summary: Deletes a Cognitive Services account from the resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        options?: AccountsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginDeleteAndWait'
    package: '@azure/arm-cognitiveservices'
    summary: Deletes a Cognitive Services account from the resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, options?: AccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginUpdate(string, string, Account, AccountsUpdateOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginUpdate'
    package: '@azure/arm-cognitiveservices'
    summary: Updates a Cognitive Services account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        account: Account, options?: AccountsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Account>, Account>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: account
          type: <xref uid="@azure/arm-cognitiveservices.Account" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cognitiveservices.Account" />&gt;, <xref
          uid="@azure/arm-cognitiveservices.Account" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, Account, AccountsUpdateOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.beginUpdateAndWait'
    package: '@azure/arm-cognitiveservices'
    summary: Updates a Cognitive Services account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, accountName:
        string, account: Account, options?: AccountsUpdateOptionalParams):
        Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: account
          type: <xref uid="@azure/arm-cognitiveservices.Account" />
          description: The parameters to provide for the created account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cognitiveservices.Account" />&gt;
  - name: get(string, string, AccountsGetOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.get'
    package: '@azure/arm-cognitiveservices'
    summary: Returns a Cognitive Services account specified by the parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        AccountsGetOptionalParams): Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref uid="@azure/arm-cognitiveservices.AccountsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cognitiveservices.Account" />&gt;
  - name: list(AccountsListOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.list'
    package: '@azure/arm-cognitiveservices'
    summary: >-
      Returns all the resources of a particular type belonging to a
      subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: AccountsListOptionalParams):
        PagedAsyncIterableIterator<Account, Account[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-cognitiveservices.AccountsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cognitiveservices.Account" />, <xref
          uid="@azure/arm-cognitiveservices.Account" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, AccountsListByResourceGroupOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.listByResourceGroup'
    package: '@azure/arm-cognitiveservices'
    summary: >-
      Returns all the resources of a particular type belonging to a resource
      group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        AccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Account, Account[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cognitiveservices.Account" />, <xref
          uid="@azure/arm-cognitiveservices.Account" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, AccountsListKeysOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.listKeys'
    package: '@azure/arm-cognitiveservices'
    summary: Lists the account keys for the specified Cognitive Services account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: AccountsListKeysOptionalParams): Promise<ApiKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsListKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cognitiveservices.ApiKeys" />&gt;
  - name: listModels(string, string, AccountsListModelsOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.listModels'
    package: '@azure/arm-cognitiveservices'
    summary: List available Models for the requested Cognitive Services account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listModels(resourceGroupName: string, accountName: string,
        options?: AccountsListModelsOptionalParams):
        PagedAsyncIterableIterator<AccountModel, AccountModel[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsListModelsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cognitiveservices.AccountModel" />, <xref
          uid="@azure/arm-cognitiveservices.AccountModel" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listSkus(string, string, AccountsListSkusOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.listSkus'
    package: '@azure/arm-cognitiveservices'
    summary: List available SKUs for the requested Cognitive Services account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, accountName: string,
        options?: AccountsListSkusOptionalParams): Promise<AccountSkuListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsListSkusOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cognitiveservices.AccountSkuListResult" />&gt;
  - name: listUsages(string, string, AccountsListUsagesOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.listUsages'
    package: '@azure/arm-cognitiveservices'
    summary: Get usages for the requested Cognitive Services account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options?: AccountsListUsagesOptionalParams): Promise<UsageListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsListUsagesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cognitiveservices.UsageListResult"
          />&gt;
  - name: >-
      regenerateKey(string, string, KeyName,
      AccountsRegenerateKeyOptionalParams)
    uid: '@azure/arm-cognitiveservices.Accounts.regenerateKey'
    package: '@azure/arm-cognitiveservices'
    summary: >-
      Regenerates the specified account key for the specified Cognitive Services
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: KeyName, options?: AccountsRegenerateKeyOptionalParams):
        Promise<ApiKeys>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of Cognitive Services account.
        - id: keyName
          type: <xref uid="@azure/arm-cognitiveservices.KeyName" />
          description: key name to generate (Key1|Key2)
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cognitiveservices.AccountsRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cognitiveservices.ApiKeys" />&gt;
