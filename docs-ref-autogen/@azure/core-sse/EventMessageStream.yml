### YamlMime:TSType
name: EventMessageStream
uid: '@azure/core-sse.EventMessageStream'
package: '@azure/core-sse'
summary: A stream of event messages
fullName: EventMessageStream
remarks: ''
isDeprecated: false
type: interface
inheritedProperties:
  - name: locked
    uid: '@azure/core-sse.EventMessageStream.locked'
    package: '@azure/core-sse'
    summary: ''
    fullName: locked
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'locked: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> ReadableStream.locked
inheritedMethods:
  - name: cancel(any)
    uid: '@azure/core-sse.EventMessageStream.cancel'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function cancel(reason?: any): Promise<void>'
      parameters:
        - id: reason
          type: any
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.cancel
  - name: getReader()
    uid: '@azure/core-sse.EventMessageStream.getReader_1'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getReader(): ReadableStreamDefaultReader<EventMessage>'
      return:
        description: ''
        type: >-
          ReadableStreamDefaultReader&lt;<xref
          uid="@azure/core-sse.EventMessage" />&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: getReader(ReadableStreamGetReaderOptions)
    uid: '@azure/core-sse.EventMessageStream.getReader_2'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getReader(options?: ReadableStreamGetReaderOptions):
        ReadableStreamReader<EventMessage>
      parameters:
        - id: options
          type: ReadableStreamGetReaderOptions
          description: ''
      return:
        description: ''
        type: >-
          ReadableStreamReader&lt;<xref uid="@azure/core-sse.EventMessage"
          />&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: 'getReader({ mode: "byob" })'
    uid: '@azure/core-sse.EventMessageStream.getReader'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getReader(options: { mode: "byob" }): ReadableStreamBYOBReader'
      parameters:
        - id: options
          type: '{ mode: "byob" }'
          description: ''
      return:
        description: ''
        type: ReadableStreamBYOBReader
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: pipeThrough<T>(ReadableWritablePair<T, EventMessage>, StreamPipeOptions)
    uid: '@azure/core-sse.EventMessageStream.pipeThrough'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pipeThrough<T>(transform: ReadableWritablePair<T,
        EventMessage>, options?: StreamPipeOptions): ReadableStream<T>
      parameters:
        - id: transform
          type: >-
            ReadableWritablePair&lt;T, <xref uid="@azure/core-sse.EventMessage"
            />&gt;
          description: ''
        - id: options
          type: StreamPipeOptions
          description: ''
      return:
        description: ''
        type: ReadableStream&lt;T&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.pipeThrough
  - name: pipeTo(WritableStream<EventMessage>, StreamPipeOptions)
    uid: '@azure/core-sse.EventMessageStream.pipeTo'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pipeTo(destination: WritableStream<EventMessage>, options?:
        StreamPipeOptions): Promise<void>
      parameters:
        - id: destination
          type: WritableStream&lt;<xref uid="@azure/core-sse.EventMessage" />&gt;
          description: ''
        - id: options
          type: StreamPipeOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.pipeTo
  - name: tee()
    uid: '@azure/core-sse.EventMessageStream.tee'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function tee(): [ReadableStream<EventMessage>,
        ReadableStream<EventMessage>]
      return:
        description: ''
        type: >-
          [ReadableStream&lt;EventMessage&gt;,
          ReadableStream&lt;EventMessage&gt;]
    inheritanceDescription: <b>Inherited From</b> ReadableStream.tee
  - name: '[asyncDispose]()'
    uid: '@azure/core-sse.EventMessageStream.[asyncDispose]'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function [asyncDispose](): PromiseLike<void>'
      return:
        description: ''
        type: PromiseLike&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> AsyncDisposable.__@asyncDispose@48
  - name: '[asyncIterator]()'
    uid: '@azure/core-sse.EventMessageStream.[asyncIterator]'
    package: '@azure/core-sse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function [asyncIterator](): AsyncIterator<EventMessage, any, undefined>'
      return:
        description: ''
        type: >-
          AsyncIterator&lt;<xref uid="@azure/core-sse.EventMessage" />, any,
          undefined&gt;
    inheritanceDescription: <b>Inherited From</b> AsyncIterable.__@asyncIterator@50
extends: >-
  ReadableStream&lt;<xref uid="@azure/core-sse.EventMessage"
  />&gt;,AsyncDisposable,AsyncIterable&lt;<xref
  uid="@azure/core-sse.EventMessage" />&gt;
