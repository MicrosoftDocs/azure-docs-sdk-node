### YamlMime:TSType
name: ApiIssueComment
uid: '@azure/arm-apimanagement.ApiIssueComment'
package: '@azure/arm-apimanagement'
summary: Interface representing a ApiIssueComment.
fullName: ApiIssueComment
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, string, string,
      IssueCommentContract, ApiIssueCommentCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.createOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates a new Comment for the Issue in an API or updates an existing one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, parameters:
        IssueCommentContract, options?:
        ApiIssueCommentCreateOrUpdateOptionalParams):
        Promise<ApiIssueCommentCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.IssueCommentContract" />
          description: Create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ApiIssueCommentCreateOrUpdateResponse"
          />&gt;
  - name: >-
      delete(string, string, string, string, string, string,
      ApiIssueCommentDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes the specified comment from an Issue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, commentId: string, ifMatch: string, options?:
        ApiIssueCommentDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      get(string, string, string, string, string,
      ApiIssueCommentGetOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.get'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the details of the issue Comment for an API specified by its
      identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, commentId: string, options?:
        ApiIssueCommentGetOptionalParams): Promise<ApiIssueCommentGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ApiIssueCommentGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string, string, string,
      ApiIssueCommentGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: >-
      Gets the entity state (Etag) version of the issue Comment for an API
      specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, commentId: string, options?:
        ApiIssueCommentGetEntityTagOptionalParams):
        Promise<ApiIssueCommentGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: commentId
          type: string
          description: >-
            Comment identifier within an Issue. Must be unique in the current
            Issue.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.ApiIssueCommentGetEntityTagHeaders"
          />&gt;
  - name: >-
      listByService(string, string, string, string,
      ApiIssueCommentListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.ApiIssueComment.listByService'
    package: '@azure/arm-apimanagement'
    summary: Lists all comments for the Issue associated with the specified API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?:
        ApiIssueCommentListByServiceOptionalParams):
        PagedAsyncIterableIterator<IssueCommentContract, IssueCommentContract[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.ApiIssueCommentListByServiceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.IssueCommentContract" />, <xref
          uid="@azure/arm-apimanagement.IssueCommentContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
