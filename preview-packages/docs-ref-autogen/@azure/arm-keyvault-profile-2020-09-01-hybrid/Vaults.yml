### YamlMime:TSType
name: Vaults
uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults'
package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
summary: Interface representing a Vaults.
fullName: Vaults
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters,
      VaultsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.beginCreateOrUpdate'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options?:
        VaultsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<Vault>, Vault>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultCreateOrUpdateParameters"
            />
          description: Parameters to create or update the vault
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />&gt;,
          <xref uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, VaultCreateOrUpdateParameters,
      VaultsCreateOrUpdateOptionalParams)
    uid: >-
      @azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.beginCreateOrUpdateAndWait
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        vaultName: string, parameters: VaultCreateOrUpdateParameters, options?:
        VaultsCreateOrUpdateOptionalParams): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultCreateOrUpdateParameters"
            />
          description: Parameters to create or update the vault
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />&gt;
  - name: beginPurgeDeleted(string, string, VaultsPurgeDeletedOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.beginPurgeDeleted'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        options?: VaultsPurgeDeletedOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: vaultName
          type: string
          description: The name of the soft-deleted vault.
        - id: location
          type: string
          description: The location of the soft-deleted vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsPurgeDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginPurgeDeletedAndWait(string, string, VaultsPurgeDeletedOptionalParams)
    uid: >-
      @azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.beginPurgeDeletedAndWait
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeletedAndWait(vaultName: string, location: string,
        options?: VaultsPurgeDeletedOptionalParams): Promise<void>
      parameters:
        - id: vaultName
          type: string
          description: The name of the soft-deleted vault.
        - id: location
          type: string
          description: The location of the soft-deleted vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsPurgeDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      VaultsCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.checkNameAvailability'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options?:
        VaultsCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityResult>
      parameters:
        - id: vaultName
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultCheckNameAvailabilityParameters"
            />
          description: The name of the vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.CheckNameAvailabilityResult"
          />&gt;
  - name: delete(string, string, VaultsDeleteOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.delete'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, vaultName: string, options?:
        VaultsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: The name of the vault to delete
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, VaultsGetOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.get'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Gets the specified Azure key vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?:
        VaultsGetOptionalParams): Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: The name of the vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />&gt;
  - name: getDeleted(string, string, VaultsGetDeletedOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.getDeleted'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options?:
        VaultsGetDeletedOptionalParams): Promise<DeletedVault>
      parameters:
        - id: vaultName
          type: string
          description: The name of the vault.
        - id: location
          type: string
          description: The location of the deleted vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsGetDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.DeletedVault"
          />&gt;
  - name: list(VaultsListOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.list'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: VaultsListOptionalParams):
        PagedAsyncIterableIterator<Resource, Resource[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Resource" />, <xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Resource" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, VaultsListByResourceGroupOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.listByResourceGroup'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription and within the

      specified resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        VaultsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Vault, Vault[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />, <xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(VaultsListBySubscriptionOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.listBySubscription'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        VaultsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<Vault, Vault[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />, <xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listDeleted(VaultsListDeletedOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.listDeleted'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options?: VaultsListDeletedOptionalParams):
        PagedAsyncIterableIterator<DeletedVault, DeletedVault[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsListDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.DeletedVault" />,
          <xref uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.DeletedVault"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, string, VaultPatchParameters, VaultsUpdateOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.update'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options?: VaultsUpdateOptionalParams):
        Promise<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultPatchParameters"
            />
          description: Parameters to patch the vault
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.Vault" />&gt;
  - name: >-
      updateAccessPolicy(string, string, AccessPolicyUpdateKind,
      VaultAccessPolicyParameters, VaultsUpdateAccessPolicyOptionalParams)
    uid: '@azure/arm-keyvault-profile-2020-09-01-hybrid.Vaults.updateAccessPolicy'
    package: '@azure/arm-keyvault-profile-2020-09-01-hybrid'
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: AccessPolicyUpdateKind, parameters:
        VaultAccessPolicyParameters, options?:
        VaultsUpdateAccessPolicyOptionalParams):
        Promise<VaultAccessPolicyParameters>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: operationKind
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.AccessPolicyUpdateKind"
            />
          description: Name of the operation
        - id: parameters
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultAccessPolicyParameters"
            />
          description: Access policy to merge into the vault
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultsUpdateAccessPolicyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault-profile-2020-09-01-hybrid.VaultAccessPolicyParameters"
          />&gt;
