### YamlMime:TSType
name: ManagedClusterPropertiesAutoScalerProfile
uid: '@azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile'
package: '@azure/arm-containerservice'
summary: Parameters to be applied to the cluster-autoscaler when enabled
fullName: ManagedClusterPropertiesAutoScalerProfile
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: balanceSimilarNodeGroups
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.balanceSimilarNodeGroups
    package: '@azure/arm-containerservice'
    summary: >-
      Detects similar node pools and balances the number of nodes between them.
      Valid values are 'true' and 'false'
    fullName: balanceSimilarNodeGroups
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'balanceSimilarNodeGroups?: string'
      return:
        description: ''
        type: string
  - name: daemonsetEvictionForEmptyNodes
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.daemonsetEvictionForEmptyNodes
    package: '@azure/arm-containerservice'
    summary: >-
      DaemonSet pods will be gracefully terminated from empty nodes. If set to
      true, all daemonset pods on empty nodes will be evicted before deletion of
      the node. If the daemonset pod cannot be evicted another node will be
      chosen for scaling. If set to false, the node will be deleted without
      ensuring that daemonset pods are deleted or evicted.
    fullName: daemonsetEvictionForEmptyNodes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'daemonsetEvictionForEmptyNodes?: boolean'
      return:
        description: ''
        type: boolean
  - name: daemonsetEvictionForOccupiedNodes
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.daemonsetEvictionForOccupiedNodes
    package: '@azure/arm-containerservice'
    summary: >-
      DaemonSet pods will be gracefully terminated from non-empty nodes. If set
      to true, all daemonset pods on occupied nodes will be evicted before
      deletion of the node. If the daemonset pod cannot be evicted another node
      will be chosen for scaling. If set to false, the node will be deleted
      without ensuring that daemonset pods are deleted or evicted.
    fullName: daemonsetEvictionForOccupiedNodes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'daemonsetEvictionForOccupiedNodes?: boolean'
      return:
        description: ''
        type: boolean
  - name: expander
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.expander
    package: '@azure/arm-containerservice'
    summary: >-
      The expander to use when scaling up. If not specified, the default is
      'random'. See
      [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
      for more information.
    fullName: expander
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'expander?: string'
      return:
        description: ''
        type: string
  - name: ignoreDaemonsetsUtilization
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.ignoreDaemonsetsUtilization
    package: '@azure/arm-containerservice'
    summary: >-
      Should CA ignore DaemonSet pods when calculating resource utilization for
      scaling down. If set to true, the resources used by daemonset will be
      taken into account when making scaling down decisions.
    fullName: ignoreDaemonsetsUtilization
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ignoreDaemonsetsUtilization?: boolean'
      return:
        description: ''
        type: boolean
  - name: maxEmptyBulkDelete
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.maxEmptyBulkDelete
    package: '@azure/arm-containerservice'
    summary: >-
      The maximum number of empty nodes that can be deleted at the same time.
      This must be a positive integer. The default is 10.
    fullName: maxEmptyBulkDelete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxEmptyBulkDelete?: string'
      return:
        description: ''
        type: string
  - name: maxGracefulTerminationSec
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.maxGracefulTerminationSec
    package: '@azure/arm-containerservice'
    summary: >-
      The maximum number of seconds the cluster autoscaler waits for pod
      termination when trying to scale down a node. The default is 600.
    fullName: maxGracefulTerminationSec
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxGracefulTerminationSec?: string'
      return:
        description: ''
        type: string
  - name: maxNodeProvisionTime
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.maxNodeProvisionTime
    package: '@azure/arm-containerservice'
    summary: >-
      The maximum time the autoscaler waits for a node to be provisioned. The
      default is '15m'. Values must be an integer followed by an 'm'. No unit of
      time other than minutes (m) is supported.
    fullName: maxNodeProvisionTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxNodeProvisionTime?: string'
      return:
        description: ''
        type: string
  - name: maxTotalUnreadyPercentage
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.maxTotalUnreadyPercentage
    package: '@azure/arm-containerservice'
    summary: >-
      The maximum percentage of unready nodes in the cluster. After this
      percentage is exceeded, cluster autoscaler halts operations. The default
      is 45. The maximum is 100 and the minimum is 0.
    fullName: maxTotalUnreadyPercentage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxTotalUnreadyPercentage?: string'
      return:
        description: ''
        type: string
  - name: newPodScaleUpDelay
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.newPodScaleUpDelay
    package: '@azure/arm-containerservice'
    summary: >-
      Ignore unscheduled pods before they're a certain age. For scenarios like
      burst/batch scale where you don't want CA to act before the kubernetes
      scheduler could schedule all the pods, you can tell CA to ignore
      unscheduled pods before they're a certain age. The default is '0s'. Values
      must be an integer followed by a unit ('s' for seconds, 'm' for minutes,
      'h' for hours, etc).
    fullName: newPodScaleUpDelay
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'newPodScaleUpDelay?: string'
      return:
        description: ''
        type: string
  - name: okTotalUnreadyCount
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.okTotalUnreadyCount
    package: '@azure/arm-containerservice'
    summary: >-
      The number of allowed unready nodes, irrespective of
      max-total-unready-percentage. This must be an integer. The default is 3.
    fullName: okTotalUnreadyCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'okTotalUnreadyCount?: string'
      return:
        description: ''
        type: string
  - name: scaleDownDelayAfterAdd
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterAdd
    package: '@azure/arm-containerservice'
    summary: >-
      How long after scale up that scale down evaluation resumes. The default is
      '10m'. Values must be an integer followed by an 'm'. No unit of time other
      than minutes (m) is supported.
    fullName: scaleDownDelayAfterAdd
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownDelayAfterAdd?: string'
      return:
        description: ''
        type: string
  - name: scaleDownDelayAfterDelete
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterDelete
    package: '@azure/arm-containerservice'
    summary: >-
      How long after node deletion that scale down evaluation resumes. The
      default is the scan-interval. Values must be an integer followed by an
      'm'. No unit of time other than minutes (m) is supported.
    fullName: scaleDownDelayAfterDelete
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownDelayAfterDelete?: string'
      return:
        description: ''
        type: string
  - name: scaleDownDelayAfterFailure
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownDelayAfterFailure
    package: '@azure/arm-containerservice'
    summary: >-
      How long after scale down failure that scale down evaluation resumes. The
      default is '3m'. Values must be an integer followed by an 'm'. No unit of
      time other than minutes (m) is supported.
    fullName: scaleDownDelayAfterFailure
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownDelayAfterFailure?: string'
      return:
        description: ''
        type: string
  - name: scaleDownUnneededTime
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownUnneededTime
    package: '@azure/arm-containerservice'
    summary: >-
      How long a node should be unneeded before it is eligible for scale down.
      The default is '10m'. Values must be an integer followed by an 'm'. No
      unit of time other than minutes (m) is supported.
    fullName: scaleDownUnneededTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownUnneededTime?: string'
      return:
        description: ''
        type: string
  - name: scaleDownUnreadyTime
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownUnreadyTime
    package: '@azure/arm-containerservice'
    summary: >-
      How long an unready node should be unneeded before it is eligible for
      scale down. The default is '20m'. Values must be an integer followed by an
      'm'. No unit of time other than minutes (m) is supported.
    fullName: scaleDownUnreadyTime
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownUnreadyTime?: string'
      return:
        description: ''
        type: string
  - name: scaleDownUtilizationThreshold
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scaleDownUtilizationThreshold
    package: '@azure/arm-containerservice'
    summary: >-
      Node utilization level, defined as sum of requested resources divided by
      capacity, below which a node can be considered for scale down. The default
      is '0.5'.
    fullName: scaleDownUtilizationThreshold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scaleDownUtilizationThreshold?: string'
      return:
        description: ''
        type: string
  - name: scanInterval
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.scanInterval
    package: '@azure/arm-containerservice'
    summary: >-
      How often cluster is reevaluated for scale up or down. The default is
      '10'. Values must be an integer number of seconds.
    fullName: scanInterval
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'scanInterval?: string'
      return:
        description: ''
        type: string
  - name: skipNodesWithLocalStorage
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.skipNodesWithLocalStorage
    package: '@azure/arm-containerservice'
    summary: >-
      If cluster autoscaler will skip deleting nodes with pods with local
      storage, for example, EmptyDir or HostPath. The default is true.
    fullName: skipNodesWithLocalStorage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'skipNodesWithLocalStorage?: string'
      return:
        description: ''
        type: string
  - name: skipNodesWithSystemPods
    uid: >-
      @azure/arm-containerservice.ManagedClusterPropertiesAutoScalerProfile.skipNodesWithSystemPods
    package: '@azure/arm-containerservice'
    summary: >-
      If cluster autoscaler will skip deleting nodes with pods from kube-system
      (except for DaemonSet or mirror pods). The default is true.
    fullName: skipNodesWithSystemPods
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'skipNodesWithSystemPods?: string'
      return:
        description: ''
        type: string
