### YamlMime:TSType
name: GroupUser
uid: '@azure/arm-apimanagement.GroupUser'
package: '@azure/arm-apimanagement'
summary: Interface representing a GroupUser.
fullName: GroupUser
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      checkEntityExists(string, string, string, string,
      GroupUserCheckEntityExistsOptionalParams)
    uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists'
    package: '@azure/arm-apimanagement'
    summary: >-
      Checks that user entity specified by identifier is associated with the
      group entity.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkEntityExists(resourceGroupName: string, serviceName:
        string, groupId: string, userId: string, options?:
        GroupUserCheckEntityExistsOptionalParams):
        Promise<GroupUserCheckEntityExistsResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.GroupUserCheckEntityExistsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.GroupUserCheckEntityExistsResponse"
          />&gt;
  - name: create(string, string, string, string, GroupUserCreateOptionalParams)
    uid: '@azure/arm-apimanagement.GroupUser.create'
    package: '@azure/arm-apimanagement'
    summary: Add existing user to existing group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options?: GroupUserCreateOptionalParams):
        Promise<UserContract>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.GroupUserCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-apimanagement.UserContract" />&gt;
  - name: delete(string, string, string, string, GroupUserDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.GroupUser.delete'
    package: '@azure/arm-apimanagement'
    summary: Remove existing user from existing group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, groupId:
        string, userId: string, options?: GroupUserDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: userId
          type: string
          description: >-
            User identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.GroupUserDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: list(string, string, string, GroupUserListOptionalParams)
    uid: '@azure/arm-apimanagement.GroupUser.list'
    package: '@azure/arm-apimanagement'
    summary: Lists a collection of user entities associated with the group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, serviceName: string, groupId:
        string, options?: GroupUserListOptionalParams):
        PagedAsyncIterableIterator<UserContract, UserContract[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: groupId
          type: string
          description: >-
            Group identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: <xref uid="@azure/arm-apimanagement.GroupUserListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.UserContract" />, <xref
          uid="@azure/arm-apimanagement.UserContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
