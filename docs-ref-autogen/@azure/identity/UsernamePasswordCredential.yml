### YamlMime:TSType
name: UsernamePasswordCredential
uid: '@azure/identity.UsernamePasswordCredential'
package: '@azure/identity'
summary: |-
  Enables authentication to Microsoft Entra ID with a user's
  username and password. This credential requires a high degree of
  trust so you should only use it when other, more secure credential
  types can't be used.
fullName: UsernamePasswordCredential
remarks: ''
isDeprecated: true
customDeprecatedMessage: >-
  UsernamePasswordCredential is deprecated. Use a more secure credential. See
  https://aka.ms/azsdk/identity/mfa for details.
type: class
constructors:
  - name: >-
      UsernamePasswordCredential(string, string, string, string,
      UsernamePasswordCredentialOptions)
    uid: '@azure/identity.UsernamePasswordCredential.constructor'
    package: '@azure/identity'
    summary: |-
      Creates an instance of the UsernamePasswordCredential with the details
      needed to authenticate against Microsoft Entra ID with a username
      and password.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new UsernamePasswordCredential(tenantId: string, clientId: string,
        username: string, password: string, options?:
        UsernamePasswordCredentialOptions)
      parameters:
        - id: tenantId
          type: string
          description: The Microsoft Entra tenant (directory).
        - id: clientId
          type: string
          description: The client (application) ID of an App Registration in the tenant.
        - id: username
          type: string
          description: The user account's e-mail address (user name).
        - id: password
          type: string
          description: The user account's account password
        - id: options
          type: <xref uid="@azure/identity.UsernamePasswordCredentialOptions" />
          description: >-
            Options for configuring the client which makes the authentication
            request.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.UsernamePasswordCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Microsoft Entra ID and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.


      If the user provided the option `disableAutomaticAuthentication`,

      once the token can't be retrieved silently,

      this method won't attempt to request user interaction to retrieve the
      token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           TokenCredential implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
