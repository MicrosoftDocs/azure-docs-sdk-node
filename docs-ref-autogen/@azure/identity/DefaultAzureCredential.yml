### YamlMime:TSType
name: DefaultAzureCredential
uid: '@azure/identity.DefaultAzureCredential'
package: '@azure/identity'
summary: >-
  Provides a default
  [ChainedTokenCredential](xref:@azure/identity.ChainedTokenCredential)
  configuration that works for most

  applications that use Azure SDK client libraries. For more information, see

  [DefaultAzureCredential
  overview](https://aka.ms/azsdk/js/identity/credential-chains#use-defaultazurecredential-for-flexibility).


  The following credential types will be tried, in order:


  - [EnvironmentCredential](xref:@azure/identity.EnvironmentCredential)

  -
  [WorkloadIdentityCredential](xref:@azure/identity.WorkloadIdentityCredential)

  - [ManagedIdentityCredential](xref:@azure/identity.ManagedIdentityCredential)

  - [AzureCliCredential](xref:@azure/identity.AzureCliCredential)

  - [AzurePowerShellCredential](xref:@azure/identity.AzurePowerShellCredential)

  -
  [AzureDeveloperCliCredential](xref:@azure/identity.AzureDeveloperCliCredential)


  Consult the documentation of these credential types for more information

  on how they attempt authentication.
fullName: DefaultAzureCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: DefaultAzureCredential(DefaultAzureCredentialClientIdOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the DefaultAzureCredential class with
      [DefaultAzureCredentialClientIdOptions](xref:@azure/identity.DefaultAzureCredentialClientIdOptions).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new DefaultAzureCredential(options?:
        DefaultAzureCredentialClientIdOptions)
      parameters:
        - id: options
          type: <xref uid="@azure/identity.DefaultAzureCredentialClientIdOptions" />
          description: >-
            Optional parameters. See
            [DefaultAzureCredentialClientIdOptions](xref:@azure/identity.DefaultAzureCredentialClientIdOptions).
  - name: DefaultAzureCredential(DefaultAzureCredentialOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor_2'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the DefaultAzureCredential class with
      [DefaultAzureCredentialOptions](xref:@azure/identity.DefaultAzureCredentialOptions).
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new DefaultAzureCredential(options?: DefaultAzureCredentialOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/identity.DefaultAzureCredentialOptions" />
          description: >-
            Optional parameters. See
            [DefaultAzureCredentialOptions](xref:@azure/identity.DefaultAzureCredentialOptions).
  - name: DefaultAzureCredential(DefaultAzureCredentialResourceIdOptions)
    uid: '@azure/identity.DefaultAzureCredential.constructor_1'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the DefaultAzureCredential class with
      [DefaultAzureCredentialResourceIdOptions](xref:@azure/identity.DefaultAzureCredentialResourceIdOptions).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new DefaultAzureCredential(options?:
        DefaultAzureCredentialResourceIdOptions)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/identity.DefaultAzureCredentialResourceIdOptions"
            />
          description: >-
            Optional parameters. See
            [DefaultAzureCredentialResourceIdOptions](xref:@azure/identity.DefaultAzureCredentialResourceIdOptions).
inheritedMethods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.DefaultAzureCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Returns the first access token returned by one of the chained

      `TokenCredential` implementations.  Throws an
      [AggregateAuthenticationError](xref:@azure/identity.AggregateAuthenticationError)

      when one or more credentials throws an
      [AuthenticationError](xref:@azure/identity.AuthenticationError) and

      no credentials have returned an access token.


      This method is called automatically by Azure SDK client libraries. You may
      call this method

      directly, but you must also handle token caching and token refreshing.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           `TokenCredential` implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [ChainedTokenCredential.getToken](xref:@azure/identity.ChainedTokenCredential.getToken)
extends: <xref uid="@azure/identity.ChainedTokenCredential" />
