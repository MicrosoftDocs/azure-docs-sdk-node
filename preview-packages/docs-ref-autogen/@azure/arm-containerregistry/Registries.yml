### YamlMime:TSType
name: Registries
uid: '@azure/arm-containerregistry.Registries'
package: '@azure/arm-containerregistry'
summary: Interface representing a Registries.
fullName: Registries
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, Registry, RegistriesCreateOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginCreate'
    package: '@azure/arm-containerregistry'
    summary: Creates a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        registry: Registry, options?: RegistriesCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Registry>, Registry>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: registry
          type: <xref uid="@azure/arm-containerregistry.Registry" />
          description: The parameters for creating a container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.Registry" />&gt;, <xref
          uid="@azure/arm-containerregistry.Registry" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, Registry,
      RegistriesCreateOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginCreateAndWait'
    package: '@azure/arm-containerregistry'
    summary: Creates a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, registryName:
        string, registry: Registry, options?: RegistriesCreateOptionalParams):
        Promise<Registry>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: registry
          type: <xref uid="@azure/arm-containerregistry.Registry" />
          description: The parameters for creating a container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Registry" />&gt;
  - name: beginDelete(string, string, RegistriesDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginDelete'
    package: '@azure/arm-containerregistry'
    summary: Deletes a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, registryName: string,
        options?: RegistriesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, RegistriesDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginDeleteAndWait'
    package: '@azure/arm-containerregistry'
    summary: Deletes a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, registryName:
        string, options?: RegistriesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginGenerateCredentials(string, string, GenerateCredentialsParameters,
      RegistriesGenerateCredentialsOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginGenerateCredentials'
    package: '@azure/arm-containerregistry'
    summary: Generate keys for a token of a specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginGenerateCredentials(resourceGroupName: string,
        registryName: string, generateCredentialsParameters:
        GenerateCredentialsParameters, options?:
        RegistriesGenerateCredentialsOptionalParams):
        Promise<SimplePollerLike<OperationState<GenerateCredentialsResult>,
        GenerateCredentialsResult>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: generateCredentialsParameters
          type: >-
            <xref
            uid="@azure/arm-containerregistry.GenerateCredentialsParameters" />
          description: The parameters for generating credentials.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesGenerateCredentialsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.GenerateCredentialsResult" />&gt;,
          <xref uid="@azure/arm-containerregistry.GenerateCredentialsResult"
          />&gt;&gt;
  - name: >-
      beginGenerateCredentialsAndWait(string, string,
      GenerateCredentialsParameters,
      RegistriesGenerateCredentialsOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginGenerateCredentialsAndWait'
    package: '@azure/arm-containerregistry'
    summary: Generate keys for a token of a specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginGenerateCredentialsAndWait(resourceGroupName: string,
        registryName: string, generateCredentialsParameters:
        GenerateCredentialsParameters, options?:
        RegistriesGenerateCredentialsOptionalParams):
        Promise<GenerateCredentialsResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: generateCredentialsParameters
          type: >-
            <xref
            uid="@azure/arm-containerregistry.GenerateCredentialsParameters" />
          description: The parameters for generating credentials.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesGenerateCredentialsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.GenerateCredentialsResult" />&gt;
  - name: >-
      beginImportImage(string, string, ImportImageParameters,
      RegistriesImportImageOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginImportImage'
    package: '@azure/arm-containerregistry'
    summary: >-
      Copies an image to this container registry from the specified container
      registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportImage(resourceGroupName: string, registryName:
        string, parameters: ImportImageParameters, options?:
        RegistriesImportImageOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: parameters
          type: <xref uid="@azure/arm-containerregistry.ImportImageParameters" />
          description: >-
            The parameters specifying the image to copy and the source container
            registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesImportImageOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginImportImageAndWait(string, string, ImportImageParameters,
      RegistriesImportImageOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginImportImageAndWait'
    package: '@azure/arm-containerregistry'
    summary: >-
      Copies an image to this container registry from the specified container
      registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginImportImageAndWait(resourceGroupName: string,
        registryName: string, parameters: ImportImageParameters, options?:
        RegistriesImportImageOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: parameters
          type: <xref uid="@azure/arm-containerregistry.ImportImageParameters" />
          description: >-
            The parameters specifying the image to copy and the source container
            registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesImportImageOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, RegistryUpdateParameters,
      RegistriesUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginUpdate'
    package: '@azure/arm-containerregistry'
    summary: Updates a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        registryUpdateParameters: RegistryUpdateParameters, options?:
        RegistriesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Registry>, Registry>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: registryUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.RegistryUpdateParameters" />
          description: The parameters for updating a container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.Registry" />&gt;, <xref
          uid="@azure/arm-containerregistry.Registry" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, RegistryUpdateParameters,
      RegistriesUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.beginUpdateAndWait'
    package: '@azure/arm-containerregistry'
    summary: Updates a container registry with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, registryName:
        string, registryUpdateParameters: RegistryUpdateParameters, options?:
        RegistriesUpdateOptionalParams): Promise<Registry>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: registryUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.RegistryUpdateParameters" />
          description: The parameters for updating a container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Registry" />&gt;
  - name: >-
      checkNameAvailability(RegistryNameCheckRequest,
      RegistriesCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.checkNameAvailability'
    package: '@azure/arm-containerregistry'
    summary: >-
      Checks whether the container registry name is available for use. The name
      must contain only

      alphanumeric characters, be globally unique, and between 5 and 50
      characters in length.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(registryNameCheckRequest:
        RegistryNameCheckRequest, options?:
        RegistriesCheckNameAvailabilityOptionalParams):
        Promise<RegistryNameStatus>
      parameters:
        - id: registryNameCheckRequest
          type: <xref uid="@azure/arm-containerregistry.RegistryNameCheckRequest" />
          description: The object containing information for the availability request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-containerregistry.RegistryNameStatus"
          />&gt;
  - name: get(string, string, RegistriesGetOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.get'
    package: '@azure/arm-containerregistry'
    summary: Gets the properties of the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string, options?:
        RegistriesGetOptionalParams): Promise<Registry>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.RegistriesGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Registry" />&gt;
  - name: >-
      getBuildSourceUploadUrl(string, string,
      RegistriesGetBuildSourceUploadUrlOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.getBuildSourceUploadUrl'
    package: '@azure/arm-containerregistry'
    summary: Get the upload location for the user to be able to upload the source.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getBuildSourceUploadUrl(resourceGroupName: string,
        registryName: string, options?:
        RegistriesGetBuildSourceUploadUrlOptionalParams):
        Promise<SourceUploadDefinition>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesGetBuildSourceUploadUrlOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.SourceUploadDefinition" />&gt;
  - name: >-
      getPrivateLinkResource(string, string, string,
      RegistriesGetPrivateLinkResourceOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.getPrivateLinkResource'
    package: '@azure/arm-containerregistry'
    summary: >-
      Gets a private link resource by a specified group name for a container
      registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPrivateLinkResource(resourceGroupName: string, registryName:
        string, groupName: string, options?:
        RegistriesGetPrivateLinkResourceOptionalParams):
        Promise<PrivateLinkResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: groupName
          type: string
          description: The name of the private link resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesGetPrivateLinkResourceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.PrivateLinkResource" />&gt;
  - name: list(RegistriesListOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.list'
    package: '@azure/arm-containerregistry'
    summary: Lists all the container registries under the specified subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: RegistriesListOptionalParams):
        PagedAsyncIterableIterator<Registry, Registry[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.Registry" />, <xref
          uid="@azure/arm-containerregistry.Registry" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, RegistriesListByResourceGroupOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.listByResourceGroup'
    package: '@azure/arm-containerregistry'
    summary: Lists all the container registries under the specified resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        RegistriesListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Registry, Registry[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.Registry" />, <xref
          uid="@azure/arm-containerregistry.Registry" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listCredentials(string, string, RegistriesListCredentialsOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.listCredentials'
    package: '@azure/arm-containerregistry'
    summary: Lists the login credentials for the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listCredentials(resourceGroupName: string, registryName:
        string, options?: RegistriesListCredentialsOptionalParams):
        Promise<RegistryListCredentialsResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesListCredentialsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.RegistryListCredentialsResult"
          />&gt;
  - name: >-
      listPrivateLinkResources(string, string,
      RegistriesListPrivateLinkResourcesOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.listPrivateLinkResources'
    package: '@azure/arm-containerregistry'
    summary: Lists the private link resources for a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPrivateLinkResources(resourceGroupName: string,
        registryName: string, options?:
        RegistriesListPrivateLinkResourcesOptionalParams):
        PagedAsyncIterableIterator<PrivateLinkResource, PrivateLinkResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesListPrivateLinkResourcesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.PrivateLinkResource" />, <xref
          uid="@azure/arm-containerregistry.PrivateLinkResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listUsages(string, string, RegistriesListUsagesOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.listUsages'
    package: '@azure/arm-containerregistry'
    summary: Gets the quota usages for the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, registryName: string,
        options?: RegistriesListUsagesOptionalParams):
        Promise<RegistryUsageListResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesListUsagesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.RegistryUsageListResult" />&gt;
  - name: >-
      regenerateCredential(string, string, RegenerateCredentialParameters,
      RegistriesRegenerateCredentialOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.regenerateCredential'
    package: '@azure/arm-containerregistry'
    summary: >-
      Regenerates one of the login credentials for the specified container
      registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateCredential(resourceGroupName: string, registryName:
        string, regenerateCredentialParameters: RegenerateCredentialParameters,
        options?: RegistriesRegenerateCredentialOptionalParams):
        Promise<RegistryListCredentialsResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: regenerateCredentialParameters
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegenerateCredentialParameters" />
          description: |-
            Specifies name of the password which should be regenerated --
                                                  password or password2.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesRegenerateCredentialOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.RegistryListCredentialsResult"
          />&gt;
  - name: >-
      scheduleRun(string, string, RunRequestUnion,
      RegistriesScheduleRunOptionalParams)
    uid: '@azure/arm-containerregistry.Registries.scheduleRun'
    package: '@azure/arm-containerregistry'
    summary: >-
      Schedules a new run based on the request parameters and add it to the run
      queue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function scheduleRun(resourceGroupName: string, registryName: string,
        runRequest: RunRequestUnion, options?:
        RegistriesScheduleRunOptionalParams): Promise<Run>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: runRequest
          type: <xref uid="@azure/arm-containerregistry.RunRequestUnion" />
          description: The parameters of a run that needs to scheduled.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.RegistriesScheduleRunOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.Run" />&gt;
