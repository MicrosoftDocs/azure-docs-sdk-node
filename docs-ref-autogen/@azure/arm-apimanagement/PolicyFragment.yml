### YamlMime:TSType
name: PolicyFragment
uid: '@azure/arm-apimanagement.PolicyFragment'
package: '@azure/arm-apimanagement'
summary: Interface representing a PolicyFragment.
fullName: PolicyFragment
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, PolicyFragmentContract,
      PolicyFragmentCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.beginCreateOrUpdate'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates a policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serviceName:
        string, id: string, parameters: PolicyFragmentContract, options?:
        PolicyFragmentCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<PolicyFragmentCreateOrUpdateResponse>,
        PolicyFragmentCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyFragmentContract" />
          description: The policy fragment contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-apimanagement.PolicyFragmentCreateOrUpdateResponse"
          />&gt;, <xref
          uid="@azure/arm-apimanagement.PolicyFragmentCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, PolicyFragmentContract,
      PolicyFragmentCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.beginCreateOrUpdateAndWait'
    package: '@azure/arm-apimanagement'
    summary: Creates or updates a policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serviceName: string, id: string, parameters: PolicyFragmentContract,
        options?: PolicyFragmentCreateOrUpdateOptionalParams):
        Promise<PolicyFragmentCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: parameters
          type: <xref uid="@azure/arm-apimanagement.PolicyFragmentContract" />
          description: The policy fragment contents to apply.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.PolicyFragmentCreateOrUpdateResponse"
          />&gt;
  - name: delete(string, string, string, string, PolicyFragmentDeleteOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.delete'
    package: '@azure/arm-apimanagement'
    summary: Deletes a policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, id:
        string, ifMatch: string, options?: PolicyFragmentDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, PolicyFragmentGetOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.get'
    package: '@azure/arm-apimanagement'
    summary: Gets a policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, id: string,
        options?: PolicyFragmentGetOptionalParams):
        Promise<PolicyFragmentGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: options
          type: >-
            <xref uid="@azure/arm-apimanagement.PolicyFragmentGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.PolicyFragmentGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string,
      PolicyFragmentGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.getEntityTag'
    package: '@azure/arm-apimanagement'
    summary: Gets the entity state (Etag) version of a policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        id: string, options?: PolicyFragmentGetEntityTagOptionalParams):
        Promise<PolicyFragmentGetEntityTagHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentGetEntityTagOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-apimanagement.PolicyFragmentGetEntityTagHeaders"
          />&gt;
  - name: listByService(string, string, PolicyFragmentListByServiceOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.listByService'
    package: '@azure/arm-apimanagement'
    summary: Gets all policy fragments.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        options?: PolicyFragmentListByServiceOptionalParams):
        PagedAsyncIterableIterator<PolicyFragmentContract,
        PolicyFragmentContract[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentListByServiceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-apimanagement.PolicyFragmentContract" />, <xref
          uid="@azure/arm-apimanagement.PolicyFragmentContract" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listReferences(string, string, string,
      PolicyFragmentListReferencesOptionalParams)
    uid: '@azure/arm-apimanagement.PolicyFragment.listReferences'
    package: '@azure/arm-apimanagement'
    summary: Lists policy resources that reference the policy fragment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listReferences(resourceGroupName: string, serviceName: string,
        id: string, options?: PolicyFragmentListReferencesOptionalParams):
        Promise<ResourceCollection>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: id
          type: string
          description: A resource identifier.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-apimanagement.PolicyFragmentListReferencesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-apimanagement.ResourceCollection"
          />&gt;
