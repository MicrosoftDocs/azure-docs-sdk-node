### YamlMime:TSType
name: Monitors
uid: '@azure/arm-newrelicobservability.Monitors'
package: '@azure/arm-newrelicobservability'
summary: Interface representing a Monitors.
fullName: Monitors
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, NewRelicMonitorResource,
      MonitorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.beginCreateOrUpdate'
    package: '@azure/arm-newrelicobservability'
    summary: Create a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, monitorName:
        string, resource: NewRelicMonitorResource, options?:
        MonitorsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<NewRelicMonitorResource>,
        NewRelicMonitorResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: resource
          type: >-
            <xref uid="@azure/arm-newrelicobservability.NewRelicMonitorResource"
            />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />&gt;,
          <xref uid="@azure/arm-newrelicobservability.NewRelicMonitorResource"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, NewRelicMonitorResource,
      MonitorsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.beginCreateOrUpdateAndWait'
    package: '@azure/arm-newrelicobservability'
    summary: Create a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        monitorName: string, resource: NewRelicMonitorResource, options?:
        MonitorsCreateOrUpdateOptionalParams): Promise<NewRelicMonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: resource
          type: >-
            <xref uid="@azure/arm-newrelicobservability.NewRelicMonitorResource"
            />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />&gt;
  - name: beginDelete(string, string, string, MonitorsDeleteOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.beginDelete'
    package: '@azure/arm-newrelicobservability'
    summary: Delete a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, userEmail: string,
        monitorName: string, options?: MonitorsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: userEmail
          type: string
          description: User Email.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, MonitorsDeleteOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.beginDeleteAndWait'
    package: '@azure/arm-newrelicobservability'
    summary: Delete a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, userEmail:
        string, monitorName: string, options?: MonitorsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: userEmail
          type: string
          description: User Email.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, MonitorsGetOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.get'
    package: '@azure/arm-newrelicobservability'
    summary: Get a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, monitorName: string, options?:
        MonitorsGetOptionalParams): Promise<NewRelicMonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />&gt;
  - name: >-
      getMetricRules(string, string, MetricsRequest,
      MonitorsGetMetricRulesOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.getMetricRules'
    package: '@azure/arm-newrelicobservability'
    summary: Get metric rules
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMetricRules(resourceGroupName: string, monitorName: string,
        request: MetricsRequest, options?:
        MonitorsGetMetricRulesOptionalParams): Promise<MetricRules>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: request
          type: <xref uid="@azure/arm-newrelicobservability.MetricsRequest" />
          description: The details of the get metrics status request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsGetMetricRulesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-newrelicobservability.MetricRules"
          />&gt;
  - name: >-
      getMetricStatus(string, string, MetricsStatusRequest,
      MonitorsGetMetricStatusOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.getMetricStatus'
    package: '@azure/arm-newrelicobservability'
    summary: Get metric status
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMetricStatus(resourceGroupName: string, monitorName: string,
        request: MetricsStatusRequest, options?:
        MonitorsGetMetricStatusOptionalParams): Promise<MetricsStatusResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: request
          type: <xref uid="@azure/arm-newrelicobservability.MetricsStatusRequest" />
          description: The details of the get metrics status request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsGetMetricStatusOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.MetricsStatusResponse" />&gt;
  - name: >-
      listAppServices(string, string, AppServicesGetRequest,
      MonitorsListAppServicesOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listAppServices'
    package: '@azure/arm-newrelicobservability'
    summary: >-
      List the app service resources currently being monitored by the NewRelic
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAppServices(resourceGroupName: string, monitorName: string,
        request: AppServicesGetRequest, options?:
        MonitorsListAppServicesOptionalParams):
        PagedAsyncIterableIterator<AppServiceInfo, AppServiceInfo[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: request
          type: >-
            <xref uid="@azure/arm-newrelicobservability.AppServicesGetRequest"
            />
          description: The details of the app services get request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListAppServicesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.AppServiceInfo" />, <xref
          uid="@azure/arm-newrelicobservability.AppServiceInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listByResourceGroup(string, MonitorsListByResourceGroupOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listByResourceGroup'
    package: '@azure/arm-newrelicobservability'
    summary: List NewRelicMonitorResource resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        MonitorsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<NewRelicMonitorResource,
        NewRelicMonitorResource[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />,
          <xref uid="@azure/arm-newrelicobservability.NewRelicMonitorResource"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(MonitorsListBySubscriptionOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listBySubscription'
    package: '@azure/arm-newrelicobservability'
    summary: List NewRelicMonitorResource resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        MonitorsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<NewRelicMonitorResource,
        NewRelicMonitorResource[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />,
          <xref uid="@azure/arm-newrelicobservability.NewRelicMonitorResource"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listHosts(string, string, HostsGetRequest,
      MonitorsListHostsOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listHosts'
    package: '@azure/arm-newrelicobservability'
    summary: >-
      List the compute vm resources currently being monitored by the NewRelic
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listHosts(resourceGroupName: string, monitorName: string,
        request: HostsGetRequest, options?: MonitorsListHostsOptionalParams):
        PagedAsyncIterableIterator<VMInfo, VMInfo[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: request
          type: <xref uid="@azure/arm-newrelicobservability.HostsGetRequest" />
          description: The details of the Hosts get request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListHostsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.VMInfo" />, <xref
          uid="@azure/arm-newrelicobservability.VMInfo" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listLinkedResources(string, string,
      MonitorsListLinkedResourcesOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listLinkedResources'
    package: '@azure/arm-newrelicobservability'
    summary: >-
      List all Azure resources associated to the same NewRelic organization and
      account as the target

      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listLinkedResources(resourceGroupName: string, monitorName:
        string, options?: MonitorsListLinkedResourcesOptionalParams):
        PagedAsyncIterableIterator<LinkedResource, LinkedResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListLinkedResourcesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.LinkedResource" />, <xref
          uid="@azure/arm-newrelicobservability.LinkedResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listMonitoredResources(string, string,
      MonitorsListMonitoredResourcesOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.listMonitoredResources'
    package: '@azure/arm-newrelicobservability'
    summary: >-
      List the resources currently being monitored by the NewRelic monitor
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMonitoredResources(resourceGroupName: string, monitorName:
        string, options?: MonitorsListMonitoredResourcesOptionalParams):
        PagedAsyncIterableIterator<MonitoredResource, MonitoredResource[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsListMonitoredResourcesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-newrelicobservability.MonitoredResource" />, <xref
          uid="@azure/arm-newrelicobservability.MonitoredResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      switchBilling(string, string, SwitchBillingRequest,
      MonitorsSwitchBillingOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.switchBilling'
    package: '@azure/arm-newrelicobservability'
    summary: Switches the billing for NewRelic monitor resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function switchBilling(resourceGroupName: string, monitorName: string,
        request: SwitchBillingRequest, options?:
        MonitorsSwitchBillingOptionalParams): Promise<NewRelicMonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: request
          type: <xref uid="@azure/arm-newrelicobservability.SwitchBillingRequest" />
          description: The details of the switch billing request.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsSwitchBillingOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />&gt;
  - name: >-
      update(string, string, NewRelicMonitorResourceUpdate,
      MonitorsUpdateOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.update'
    package: '@azure/arm-newrelicobservability'
    summary: Update a NewRelicMonitorResource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, monitorName: string,
        properties: NewRelicMonitorResourceUpdate, options?:
        MonitorsUpdateOptionalParams): Promise<NewRelicMonitorResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: properties
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.NewRelicMonitorResourceUpdate"
            />
          description: The resource properties to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.NewRelicMonitorResource" />&gt;
  - name: vmHostPayload(string, string, MonitorsVmHostPayloadOptionalParams)
    uid: '@azure/arm-newrelicobservability.Monitors.vmHostPayload'
    package: '@azure/arm-newrelicobservability'
    summary: >-
      Returns the payload that needs to be passed in the request body for
      installing NewRelic agent on a

      VM.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function vmHostPayload(resourceGroupName: string, monitorName: string,
        options?: MonitorsVmHostPayloadOptionalParams):
        Promise<VMExtensionPayload>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: monitorName
          type: string
          description: Name of the Monitors resource
        - id: options
          type: >-
            <xref
            uid="@azure/arm-newrelicobservability.MonitorsVmHostPayloadOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-newrelicobservability.VMExtensionPayload" />&gt;
