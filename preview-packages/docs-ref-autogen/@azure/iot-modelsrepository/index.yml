### YamlMime:TSPackage
uid: '@azure/iot-modelsrepository'
name: '@azure/iot-modelsrepository'
summary: ''
type: package
classes:
  - '@azure/iot-modelsrepository.ModelError'
  - '@azure/iot-modelsrepository.ModelsRepositoryClient'
interfaces:
  - '@azure/iot-modelsrepository.GetModelsOptions'
  - '@azure/iot-modelsrepository.ModelsRepositoryClientOptions'
typeAliases:
  - '@azure/iot-modelsrepository.dependencyResolutionType'
functions:
  - name: getModelUri(string, string, boolean)
    uid: '@azure/iot-modelsrepository.getModelUri'
    package: '@azure/iot-modelsrepository'
    summary: Given the dtmi and repository uri, will get a fully qualified model uri.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getModelUri(dtmi: string, repositoryUri: string, expanded?:
        boolean): string
      parameters:
        - id: dtmi
          type: string
          description: digital twins model identifier string
        - id: repositoryUri
          type: string
          description: base URI for repository
        - id: expanded
          type: boolean
          description: is the Model URI .json or .expanded.json
      return:
        description: ''
        type: string
  - name: isValidDtmi(string)
    uid: '@azure/iot-modelsrepository.isValidDtmi'
    package: '@azure/iot-modelsrepository'
    summary: >-
      isValidDtmi validates if a given dtmi matches the convention.

      This is based on the DTMI spec:

      https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/dtdlv2.md#digital-twin-model-identifier
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isValidDtmi(dtmi: string): boolean'
      parameters:
        - id: dtmi
          type: string
          description: digital twins model identifier string
      return:
        description: ''
        type: boolean
