### YamlMime:TSType
name: BatchTaskCreateOptions
uid: '@azure-rest/batch.BatchTaskCreateOptions'
package: '@azure-rest/batch'
summary: Parameters for creating an Azure Batch Task.
fullName: BatchTaskCreateOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: affinityInfo
    uid: '@azure-rest/batch.BatchTaskCreateOptions.affinityInfo'
    package: '@azure-rest/batch'
    summary: >-
      A locality hint that can be used by the Batch service to select a Compute
      Node on which to start the new Task.
    fullName: affinityInfo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'affinityInfo?: BatchAffinityInfo'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchAffinityInfo" />
  - name: applicationPackageReferences
    uid: '@azure-rest/batch.BatchTaskCreateOptions.applicationPackageReferences'
    package: '@azure-rest/batch'
    summary: >-
      A list of Packages that the Batch service will deploy to the Compute Node
      before running the command line. Application packages are downloaded and
      deployed to a shared directory, not the Task working directory. Therefore,
      if a referenced package is already on the Node, and is up to date, then it
      is not re-downloaded; the existing copy on the Compute Node is used. If a
      referenced Package cannot be installed, for example because the package
      has been deleted or because download failed, the Task fails.
    fullName: applicationPackageReferences
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'applicationPackageReferences?: BatchApplicationPackageReference[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchApplicationPackageReference" />[]
  - name: authenticationTokenSettings
    uid: '@azure-rest/batch.BatchTaskCreateOptions.authenticationTokenSettings'
    package: '@azure-rest/batch'
    summary: >-
      The settings for an authentication token that the Task can use to perform
      Batch service operations. If this property is set, the Batch service
      provides the Task with an authentication token which can be used to
      authenticate Batch service operations without requiring an Account access
      key. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN
      environment variable. The operations that the Task can carry out using the
      token depend on the settings. For example, a Task can request Job
      permissions in order to add other Tasks to the Job, or check the status of
      the Job or of other Tasks under the Job.
    fullName: authenticationTokenSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.AuthenticationTokenSettings" />
  - name: commandLine
    uid: '@azure-rest/batch.BatchTaskCreateOptions.commandLine'
    package: '@azure-rest/batch'
    summary: >-
      The command line of the Task. For multi-instance Tasks, the command line
      is executed as the primary Task, after the primary Task and all subtasks
      have finished executing the coordination command line. The command line
      does not run under a shell, and therefore cannot take advantage of shell
      features such as environment variable expansion. If you want to take
      advantage of such features, you should invoke the shell in the command
      line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c
      MyCommand" in Linux. If the command line refers to file paths, it should
      use a relative path (relative to the Task working directory), or use the
      Batch provided environment variable
      (https://learn.microsoft.com/azure/batch/batch-compute-node-environment-variables).
    fullName: commandLine
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'commandLine: string'
      return:
        description: ''
        type: string
  - name: constraints
    uid: '@azure-rest/batch.BatchTaskCreateOptions.constraints'
    package: '@azure-rest/batch'
    summary: >-
      The execution constraints that apply to this Task. If you do not specify
      constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for
      the Job, the maxWallClockTime is infinite, and the retentionTime is 7
      days.
    fullName: constraints
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'constraints?: BatchTaskConstraints'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskConstraints" />
  - name: containerSettings
    uid: '@azure-rest/batch.BatchTaskCreateOptions.containerSettings'
    package: '@azure-rest/batch'
    summary: >-
      The settings for the container under which the Task runs. If the Pool that
      will run this Task has containerConfiguration set, this must be set as
      well. If the Pool that will run this Task doesn't have
      containerConfiguration set, this must not be set. When this is specified,
      all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of
      Azure Batch directories on the node) are mapped into the container, all
      Task environment variables are mapped into the container, and the Task
      command line is executed in the container. Files produced in the container
      outside of AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
      meaning that Batch file APIs will not be able to access those files.
    fullName: containerSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'containerSettings?: BatchTaskContainerSettings'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskContainerSettings" />
  - name: dependsOn
    uid: '@azure-rest/batch.BatchTaskCreateOptions.dependsOn'
    package: '@azure-rest/batch'
    summary: >-
      The Tasks that this Task depends on. This Task will not be scheduled until
      all Tasks that it depends on have completed successfully. If any of those
      Tasks fail and exhaust their retry counts, this Task will never be
      scheduled. If the Job does not have usesTaskDependencies set to true, and
      this element is present, the request fails with error code
      TaskDependenciesNotSpecifiedOnJob.
    fullName: dependsOn
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'dependsOn?: BatchTaskDependencies'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.BatchTaskDependencies" />
  - name: displayName
    uid: '@azure-rest/batch.BatchTaskCreateOptions.displayName'
    package: '@azure-rest/batch'
    summary: >-
      A display name for the Task. The display name need not be unique and can
      contain any Unicode characters up to a maximum length of 1024.
    fullName: displayName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'displayName?: string'
      return:
        description: ''
        type: string
  - name: environmentSettings
    uid: '@azure-rest/batch.BatchTaskCreateOptions.environmentSettings'
    package: '@azure-rest/batch'
    summary: A list of environment variable settings for the Task.
    fullName: environmentSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.EnvironmentSetting" />[]
  - name: exitConditions
    uid: '@azure-rest/batch.BatchTaskCreateOptions.exitConditions'
    package: '@azure-rest/batch'
    summary: How the Batch service should respond when the Task completes.
    fullName: exitConditions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'exitConditions?: ExitConditions'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.ExitConditions" />
  - name: id
    uid: '@azure-rest/batch.BatchTaskCreateOptions.id'
    package: '@azure-rest/batch'
    summary: >-
      A string that uniquely identifies the Task within the Job. The ID can
      contain any combination of alphanumeric characters including hyphens and
      underscores, and cannot contain more than 64 characters. The ID is
      case-preserving and case-insensitive (that is, you may not have two IDs
      within a Job that differ only by case).
    fullName: id
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        description: ''
        type: string
  - name: multiInstanceSettings
    uid: '@azure-rest/batch.BatchTaskCreateOptions.multiInstanceSettings'
    package: '@azure-rest/batch'
    summary: >-
      An object that indicates that the Task is a multi-instance Task, and
      contains information about how to run the multi-instance Task.
    fullName: multiInstanceSettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'multiInstanceSettings?: MultiInstanceSettings'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.MultiInstanceSettings" />
  - name: outputFiles
    uid: '@azure-rest/batch.BatchTaskCreateOptions.outputFiles'
    package: '@azure-rest/batch'
    summary: >-
      A list of files that the Batch service will upload from the Compute Node
      after running the command line. For multi-instance Tasks, the files will
      only be uploaded from the Compute Node on which the primary Task is
      executed.
    fullName: outputFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'outputFiles?: OutputFile[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.OutputFile" />[]
  - name: requiredSlots
    uid: '@azure-rest/batch.BatchTaskCreateOptions.requiredSlots'
    package: '@azure-rest/batch'
    summary: >-
      The number of scheduling slots that the Task required to run. The default
      is 1. A Task can only be scheduled to run on a compute node if the node
      has enough free scheduling slots available. For multi-instance Tasks, this
      must be 1.
    fullName: requiredSlots
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'requiredSlots?: number'
      return:
        description: ''
        type: number
  - name: resourceFiles
    uid: '@azure-rest/batch.BatchTaskCreateOptions.resourceFiles'
    package: '@azure-rest/batch'
    summary: >-
      A list of files that the Batch service will download to the Compute Node
      before running the command line. For multi-instance Tasks, the resource
      files will only be downloaded to the Compute Node on which the primary
      Task is executed. There is a maximum size for the list of resource files. 
      When the max size is exceeded, the request will fail and the response
      error code will be RequestEntityTooLarge. If this occurs, the collection
      of ResourceFiles must be reduced in size. This can be achieved using .zip
      files, Application Packages, or Docker Containers.
    fullName: resourceFiles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.ResourceFile" />[]
  - name: userIdentity
    uid: '@azure-rest/batch.BatchTaskCreateOptions.userIdentity'
    package: '@azure-rest/batch'
    summary: >-
      The user identity under which the Task runs. If omitted, the Task runs as
      a non-administrative user unique to the Task.
    fullName: userIdentity
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        description: ''
        type: <xref uid="@azure-rest/batch.UserIdentity" />
