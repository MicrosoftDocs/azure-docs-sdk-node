### YamlMime:TSType
name: CommonCallingHandlers
uid: '@azure/communication-react.CommonCallingHandlers'
package: '@azure/communication-react'
summary: >-
  Object containing all the handlers required for calling components.


  Calling related components from this package are able to pick out relevant
  handlers from this object.

  See <xref:useHandlers> and
  [usePropsFor](xref:@azure/communication-react.usePropsFor).
fullName: CommonCallingHandlers
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: onAcceptCall
    uid: '@azure/communication-react.CommonCallingHandlers.onAcceptCall'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAcceptCall
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onAcceptCall: (incomingCallId: string, useVideo?: boolean) =>
        Promise<void>
      return:
        description: ''
        type: '(incomingCallId: string, useVideo?: boolean) =&gt; Promise&lt;void&gt;'
  - name: onBlurVideoBackground
    uid: '@azure/communication-react.CommonCallingHandlers.onBlurVideoBackground'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlurVideoBackground
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onBlurVideoBackground: (backgroundBlurConfig?: VideoEffectConfig) =>
        Promise<void>
      return:
        description: ''
        type: '(backgroundBlurConfig?: VideoEffectConfig) =&gt; Promise&lt;void&gt;'
  - name: onCreateLocalStreamView
    uid: '@azure/communication-react.CommonCallingHandlers.onCreateLocalStreamView'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCreateLocalStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onCreateLocalStreamView: (options?: VideoStreamOptions) => Promise<void
        | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onCreateRemoteStreamView
    uid: '@azure/communication-react.CommonCallingHandlers.onCreateRemoteStreamView'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCreateRemoteStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onCreateRemoteStreamView: (userId: string, options?: VideoStreamOptions)
        => Promise<void | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (userId: string, options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onCreateTogetherModeStreamView
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onCreateTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Call back to create a view for together mode
    fullName: onCreateTogetherModeStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onCreateTogetherModeStreamView: (options?: TogetherModeStreamOptions) =>
        Promise<void | TogetherModeStreamViewResult>
      return:
        description: ''
        type: >-
          (options?: TogetherModeStreamOptions) =&gt; Promise&lt;void |
          TogetherModeStreamViewResult&gt;
  - name: onDisposeLocalScreenShareStreamView
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onDisposeLocalScreenShareStreamView
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeLocalScreenShareStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeLocalScreenShareStreamView: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onDisposeLocalStreamView
    uid: '@azure/communication-react.CommonCallingHandlers.onDisposeLocalStreamView'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeLocalStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeLocalStreamView: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onDisposeRemoteScreenShareStreamView
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onDisposeRemoteScreenShareStreamView
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeRemoteScreenShareStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeRemoteScreenShareStreamView: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onDisposeRemoteStreamView
    uid: '@azure/communication-react.CommonCallingHandlers.onDisposeRemoteStreamView'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeRemoteStreamView
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: >-
      use
      [onDisposeRemoteVideoStreamView](xref:@azure/communication-react.CommonCallingHandlers.onDisposeRemoteVideoStreamView)
      and
      [onDisposeRemoteScreenShareStreamView](xref:@azure/communication-react.CommonCallingHandlers.onDisposeRemoteScreenShareStreamView)
      instead.
    syntax:
      content: 'onDisposeRemoteStreamView: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onDisposeRemoteVideoStreamView
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onDisposeRemoteVideoStreamView
    package: '@azure/communication-react'
    summary: ''
    fullName: onDisposeRemoteVideoStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeRemoteVideoStreamView: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onDisposeTogetherModeStreamView
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onDisposeTogetherModeStreamView
    package: '@azure/communication-react'
    summary: Call back to dispose together mode views
    fullName: onDisposeTogetherModeStreamView
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onDisposeTogetherModeStreamView: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onForbidAudio
    uid: '@azure/communication-react.CommonCallingHandlers.onForbidAudio'
    package: '@azure/communication-react'
    summary: Forbid remote participants from sending audio
    fullName: onForbidAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidAudio?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onForbidOthersAudio
    uid: '@azure/communication-react.CommonCallingHandlers.onForbidOthersAudio'
    package: '@azure/communication-react'
    summary: Change meeting option forbid remote participants from sending audio
    fullName: onForbidOthersAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidOthersAudio?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onForbidOthersVideo
    uid: '@azure/communication-react.CommonCallingHandlers.onForbidOthersVideo'
    package: '@azure/communication-react'
    summary: Change meeting option forbid remote participants from sending video
    fullName: onForbidOthersVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidOthersVideo?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onForbidVideo
    uid: '@azure/communication-react.CommonCallingHandlers.onForbidVideo'
    package: '@azure/communication-react'
    summary: Forbid remote participants from sending video
    fullName: onForbidVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onForbidVideo?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onHangUp
    uid: '@azure/communication-react.CommonCallingHandlers.onHangUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onHangUp
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onHangUp: (forEveryone?: boolean) => Promise<void>'
      return:
        description: ''
        type: '(forEveryone?: boolean) =&gt; Promise&lt;void&gt;'
  - name: onLowerHand
    uid: '@azure/communication-react.CommonCallingHandlers.onLowerHand'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLowerHand
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onLowerHand: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onMuteAllRemoteParticipants
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onMuteAllRemoteParticipants
    package: '@azure/communication-react'
    summary: ''
    fullName: onMuteAllRemoteParticipants
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMuteAllRemoteParticipants: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onMuteParticipant
    uid: '@azure/communication-react.CommonCallingHandlers.onMuteParticipant'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMuteParticipant
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onMuteParticipant: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onPermitAudio
    uid: '@azure/communication-react.CommonCallingHandlers.onPermitAudio'
    package: '@azure/communication-react'
    summary: Permit remote participants to send audio
    fullName: onPermitAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitAudio?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onPermitOthersAudio
    uid: '@azure/communication-react.CommonCallingHandlers.onPermitOthersAudio'
    package: '@azure/communication-react'
    summary: Change meeting option permit remote participants to send audio
    fullName: onPermitOthersAudio
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitOthersAudio?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onPermitOthersVideo
    uid: '@azure/communication-react.CommonCallingHandlers.onPermitOthersVideo'
    package: '@azure/communication-react'
    summary: Change meeting option permit remote participants to send video
    fullName: onPermitOthersVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitOthersVideo?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onPermitVideo
    uid: '@azure/communication-react.CommonCallingHandlers.onPermitVideo'
    package: '@azure/communication-react'
    summary: Permit remote participants to send video
    fullName: onPermitVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onPermitVideo?: (userIds: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds: string[]) =&gt; Promise&lt;void&gt;'
  - name: onRaiseHand
    uid: '@azure/communication-react.CommonCallingHandlers.onRaiseHand'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRaiseHand
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRaiseHand: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onReactionClick
    uid: '@azure/communication-react.CommonCallingHandlers.onReactionClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onReactionClick
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onReactionClick: (reaction: Reaction) => Promise<void>'
      return:
        description: ''
        type: '(reaction: Reaction) =&gt; Promise&lt;void&gt;'
  - name: onRejectCall
    uid: '@azure/communication-react.CommonCallingHandlers.onRejectCall'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRejectCall
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRejectCall: (incomingCallId: string) => Promise<void>'
      return:
        description: ''
        type: '(incomingCallId: string) =&gt; Promise&lt;void&gt;'
  - name: onRemoveVideoBackgroundEffects
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onRemoveVideoBackgroundEffects
    package: '@azure/communication-react'
    summary: ''
    fullName: onRemoveVideoBackgroundEffects
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onRemoveVideoBackgroundEffects: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onReplaceVideoBackground
    uid: '@azure/communication-react.CommonCallingHandlers.onReplaceVideoBackground'
    package: '@azure/communication-react'
    summary: ''
    fullName: onReplaceVideoBackground
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onReplaceVideoBackground: (backgroundReplacementConfig:
        BackgroundReplacementConfig) => Promise<void>
      return:
        description: ''
        type: >-
          (backgroundReplacementConfig: BackgroundReplacementConfig) =&gt;
          Promise&lt;void&gt;
  - name: onSelectCamera
    uid: '@azure/communication-react.CommonCallingHandlers.onSelectCamera'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectCamera
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onSelectCamera: (device: VideoDeviceInfo, options?: VideoStreamOptions)
        => Promise<void>
      return:
        description: ''
        type: >-
          (device: VideoDeviceInfo, options?: VideoStreamOptions) =&gt;
          Promise&lt;void&gt;
  - name: onSelectMicrophone
    uid: '@azure/communication-react.CommonCallingHandlers.onSelectMicrophone'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectMicrophone
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSelectMicrophone: (device: AudioDeviceInfo) => Promise<void>'
      return:
        description: ''
        type: '(device: AudioDeviceInfo) =&gt; Promise&lt;void&gt;'
  - name: onSelectSpeaker
    uid: '@azure/communication-react.CommonCallingHandlers.onSelectSpeaker'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectSpeaker
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSelectSpeaker: (device: AudioDeviceInfo) => Promise<void>'
      return:
        description: ''
        type: '(device: AudioDeviceInfo) =&gt; Promise&lt;void&gt;'
  - name: onSendDtmfTone
    uid: '@azure/communication-react.CommonCallingHandlers.onSendDtmfTone'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSendDtmfTone
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSendDtmfTone: (dtmfTone: DtmfTone) => Promise<void>'
      return:
        description: ''
        type: '(dtmfTone: DtmfTone) =&gt; Promise&lt;void&gt;'
  - name: onSendRealTimeText
    uid: '@azure/communication-react.CommonCallingHandlers.onSendRealTimeText'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSendRealTimeText
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onSendRealTimeText: (text: string, isFinalized: boolean) =>
        Promise<void>
      return:
        description: ''
        type: '(text: string, isFinalized: boolean) =&gt; Promise&lt;void&gt;'
  - name: onSetCaptionLanguage
    uid: '@azure/communication-react.CommonCallingHandlers.onSetCaptionLanguage'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSetCaptionLanguage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSetCaptionLanguage: (language: string) => Promise<void>'
      return:
        description: ''
        type: '(language: string) =&gt; Promise&lt;void&gt;'
  - name: onSetSpokenLanguage
    uid: '@azure/communication-react.CommonCallingHandlers.onSetSpokenLanguage'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSetSpokenLanguage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSetSpokenLanguage: (language: string) => Promise<void>'
      return:
        description: ''
        type: '(language: string) =&gt; Promise&lt;void&gt;'
  - name: onSetTogetherModeSceneSize
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onSetTogetherModeSceneSize
    package: '@azure/communication-react'
    summary: Call set together mode scene size
    fullName: onSetTogetherModeSceneSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onSetTogetherModeSceneSize: (width: number, height: number) => void'
      return:
        description: ''
        type: '(width: number, height: number) =&gt; void'
  - name: onStartCall
    uid: '@azure/communication-react.CommonCallingHandlers.onStartCall'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartCall
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        onStartCall: (participants: CommunicationIdentifier[], options?:
        StartCallOptions) => void
      return:
        description: ''
        type: >-
          (participants: CommunicationIdentifier[], options?: StartCallOptions)
          =&gt; void
  - name: onStartCaptions
    uid: '@azure/communication-react.CommonCallingHandlers.onStartCaptions'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartCaptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartCaptions: (options?: CaptionsOptions) => Promise<void>'
      return:
        description: ''
        type: '(options?: CaptionsOptions) =&gt; Promise&lt;void&gt;'
  - name: onStartLocalVideo
    uid: '@azure/communication-react.CommonCallingHandlers.onStartLocalVideo'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartLocalVideo
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartLocalVideo: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStartNoiseSuppressionEffect
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onStartNoiseSuppressionEffect
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartNoiseSuppressionEffect
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartNoiseSuppressionEffect: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStartScreenShare
    uid: '@azure/communication-react.CommonCallingHandlers.onStartScreenShare'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartScreenShare
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartScreenShare: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStartSpotlight
    uid: '@azure/communication-react.CommonCallingHandlers.onStartSpotlight'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStartSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartSpotlight: (userIds?: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds?: string[]) =&gt; Promise&lt;void&gt;'
  - name: onStartTogetherMode
    uid: '@azure/communication-react.CommonCallingHandlers.onStartTogetherMode'
    package: '@azure/communication-react'
    summary: Call back to create a view for together mode
    fullName: onStartTogetherMode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStartTogetherMode: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopAllSpotlight
    uid: '@azure/communication-react.CommonCallingHandlers.onStopAllSpotlight'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStopAllSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopAllSpotlight: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopCaptions
    uid: '@azure/communication-react.CommonCallingHandlers.onStopCaptions'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStopCaptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopCaptions: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopNoiseSuppressionEffect
    uid: >-
      @azure/communication-react.CommonCallingHandlers.onStopNoiseSuppressionEffect
    package: '@azure/communication-react'
    summary: ''
    fullName: onStopNoiseSuppressionEffect
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopNoiseSuppressionEffect: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopScreenShare
    uid: '@azure/communication-react.CommonCallingHandlers.onStopScreenShare'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStopScreenShare
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopScreenShare: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onStopSpotlight
    uid: '@azure/communication-react.CommonCallingHandlers.onStopSpotlight'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStopSpotlight
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onStopSpotlight: (userIds?: string[]) => Promise<void>'
      return:
        description: ''
        type: '(userIds?: string[]) =&gt; Promise&lt;void&gt;'
  - name: onToggleCamera
    uid: '@azure/communication-react.CommonCallingHandlers.onToggleCamera'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleCamera
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onToggleCamera: (options?: VideoStreamOptions) => Promise<void>'
      return:
        description: ''
        type: '(options?: VideoStreamOptions) =&gt; Promise&lt;void&gt;'
  - name: onToggleHold
    uid: '@azure/communication-react.CommonCallingHandlers.onToggleHold'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleHold
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onToggleHold: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onToggleMicrophone
    uid: '@azure/communication-react.CommonCallingHandlers.onToggleMicrophone'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleMicrophone
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onToggleMicrophone: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onToggleRaiseHand
    uid: '@azure/communication-react.CommonCallingHandlers.onToggleRaiseHand'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleRaiseHand
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onToggleRaiseHand: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: onToggleScreenShare
    uid: '@azure/communication-react.CommonCallingHandlers.onToggleScreenShare'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleScreenShare
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'onToggleScreenShare: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
methods:
  - name: onAddParticipant(CommunicationUserIdentifier)
    uid: '@azure/communication-react.CommonCallingHandlers.onAddParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onAddParticipant(participant: CommunicationUserIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: onAddParticipant(PhoneNumberIdentifier, AddPhoneNumberOptions)
    uid: '@azure/communication-react.CommonCallingHandlers.onAddParticipant_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onAddParticipant(participant: PhoneNumberIdentifier, options:
        AddPhoneNumberOptions): Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.PhoneNumberIdentifier" />
          description: ''
        - id: options
          type: <xref uid="@azure/communication-calling.AddPhoneNumberOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: onRemoveParticipant(CommunicationIdentifier)
    uid: '@azure/communication-react.CommonCallingHandlers.onRemoveParticipant_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onRemoveParticipant(participant: CommunicationIdentifier):
        Promise<void>
      parameters:
        - id: participant
          type: <xref uid="@azure/communication-common.CommunicationIdentifier" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: onRemoveParticipant(string)
    uid: '@azure/communication-react.CommonCallingHandlers.onRemoveParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onRemoveParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: onSubmitSurvey(CallSurvey)
    uid: '@azure/communication-react.CommonCallingHandlers.onSubmitSurvey'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onSubmitSurvey(survey: CallSurvey): Promise<undefined |
        CallSurveyResponse>
      parameters:
        - id: survey
          type: <xref uid="@azure/communication-calling.CallSurvey" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;undefined | <xref
          uid="@azure/communication-calling.CallSurveyResponse" />&gt;
