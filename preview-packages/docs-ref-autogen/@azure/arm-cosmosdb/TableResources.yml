### YamlMime:TSType
name: TableResources
uid: '@azure/arm-cosmosdb.TableResources'
package: '@azure/arm-cosmosdb'
summary: Interface representing a TableResources.
fullName: TableResources
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdateTable(string, string, string,
      TableCreateUpdateParameters,
      TableResourcesCreateUpdateTableOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginCreateUpdateTable'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateTable(resourceGroupName: string, accountName:
        string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?:
        TableResourcesCreateUpdateTableOptionalParams):
        Promise<SimplePollerLike<OperationState<TableGetResults>,
        TableGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type: <xref uid="@azure/arm-cosmosdb.TableCreateUpdateParameters" />
          description: The parameters to provide for the current Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesCreateUpdateTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.TableGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.TableGetResults" />&gt;&gt;
  - name: >-
      beginCreateUpdateTableAndWait(string, string, string,
      TableCreateUpdateParameters,
      TableResourcesCreateUpdateTableOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginCreateUpdateTableAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateTableAndWait(resourceGroupName: string,
        accountName: string, tableName: string, createUpdateTableParameters:
        TableCreateUpdateParameters, options?:
        TableResourcesCreateUpdateTableOptionalParams): Promise<TableGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: createUpdateTableParameters
          type: <xref uid="@azure/arm-cosmosdb.TableCreateUpdateParameters" />
          description: The parameters to provide for the current Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesCreateUpdateTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.TableGetResults" />&gt;
  - name: >-
      beginDeleteTable(string, string, string,
      TableResourcesDeleteTableOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginDeleteTable'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteTable(resourceGroupName: string, accountName:
        string, tableName: string, options?:
        TableResourcesDeleteTableOptionalParams):
        Promise<SimplePollerLike<OperationState<TableResourcesDeleteTableHeaders>,
        TableResourcesDeleteTableHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesDeleteTableOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.TableResourcesDeleteTableHeaders" />&gt;,
          <xref uid="@azure/arm-cosmosdb.TableResourcesDeleteTableHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteTableAndWait(string, string, string,
      TableResourcesDeleteTableOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginDeleteTableAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteTableAndWait(resourceGroupName: string, accountName:
        string, tableName: string, options?:
        TableResourcesDeleteTableOptionalParams):
        Promise<TableResourcesDeleteTableHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesDeleteTableOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.TableResourcesDeleteTableHeaders" />&gt;
  - name: >-
      beginMigrateTableToAutoscale(string, string, string,
      TableResourcesMigrateTableToAutoscaleOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToAutoscale(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        TableResourcesMigrateTableToAutoscaleOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesMigrateTableToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateTableToAutoscaleAndWait(string, string, string,
      TableResourcesMigrateTableToAutoscaleOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToAutoscaleAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToAutoscaleAndWait(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        TableResourcesMigrateTableToAutoscaleOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesMigrateTableToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateTableToManualThroughput(string, string, string,
      TableResourcesMigrateTableToManualThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginMigrateTableToManualThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToManualThroughput(resourceGroupName: string,
        accountName: string, tableName: string, options?:
        TableResourcesMigrateTableToManualThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesMigrateTableToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateTableToManualThroughputAndWait(string, string, string,
      TableResourcesMigrateTableToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.TableResources.beginMigrateTableToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateTableToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, tableName: string, options?:
        TableResourcesMigrateTableToManualThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesMigrateTableToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginRetrieveContinuousBackupInformation(string, string, string,
      ContinuousBackupRestoreLocation,
      TableResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.TableResources.beginRetrieveContinuousBackupInformation
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRetrieveContinuousBackupInformation(resourceGroupName:
        string, accountName: string, tableName: string, location:
        ContinuousBackupRestoreLocation, options?:
        TableResourcesRetrieveContinuousBackupInformationOptionalParams):
        Promise<SimplePollerLike<OperationState<BackupInformation>,
        BackupInformation>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.BackupInformation" />&gt;, <xref
          uid="@azure/arm-cosmosdb.BackupInformation" />&gt;&gt;
  - name: >-
      beginRetrieveContinuousBackupInformationAndWait(string, string, string,
      ContinuousBackupRestoreLocation,
      TableResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.TableResources.beginRetrieveContinuousBackupInformationAndWait
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a table.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginRetrieveContinuousBackupInformationAndWait(resourceGroupName:
        string, accountName: string, tableName: string, location:
        ContinuousBackupRestoreLocation, options?:
        TableResourcesRetrieveContinuousBackupInformationOptionalParams):
        Promise<BackupInformation>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.BackupInformation" />&gt;
  - name: >-
      beginUpdateTableThroughput(string, string, string,
      ThroughputSettingsUpdateParameters,
      TableResourcesUpdateTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginUpdateTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateTableThroughput(resourceGroupName: string,
        accountName: string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        TableResourcesUpdateTableThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The parameters to provide for the RUs per second of the current
                                              Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesUpdateTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginUpdateTableThroughputAndWait(string, string, string,
      ThroughputSettingsUpdateParameters,
      TableResourcesUpdateTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.beginUpdateTableThroughputAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Table
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateTableThroughputAndWait(resourceGroupName: string,
        accountName: string, tableName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        TableResourcesUpdateTableThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The parameters to provide for the RUs per second of the current
                                              Table.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesUpdateTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: getTable(string, string, string, TableResourcesGetTableOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.getTable'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Tables under an existing Azure Cosmos DB database account with
      the provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTable(resourceGroupName: string, accountName: string,
        tableName: string, options?: TableResourcesGetTableOptionalParams):
        Promise<TableGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.TableResourcesGetTableOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.TableGetResults" />&gt;
  - name: >-
      getTableThroughput(string, string, string,
      TableResourcesGetTableThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.getTableThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Table under an existing Azure Cosmos DB
      database account with the

      provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTableThroughput(resourceGroupName: string, accountName:
        string, tableName: string, options?:
        TableResourcesGetTableThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: tableName
          type: string
          description: Cosmos DB table name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesGetTableThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: listTables(string, string, TableResourcesListTablesOptionalParams)
    uid: '@azure/arm-cosmosdb.TableResources.listTables'
    package: '@azure/arm-cosmosdb'
    summary: Lists the Tables under an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listTables(resourceGroupName: string, accountName: string,
        options?: TableResourcesListTablesOptionalParams):
        PagedAsyncIterableIterator<TableGetResults, TableGetResults[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.TableResourcesListTablesOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.TableGetResults" />, <xref
          uid="@azure/arm-cosmosdb.TableGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
