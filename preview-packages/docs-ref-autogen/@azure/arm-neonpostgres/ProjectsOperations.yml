### YamlMime:TSType
name: ProjectsOperations
uid: '@azure/arm-neonpostgres.ProjectsOperations'
package: '@azure/arm-neonpostgres'
summary: Interface representing a Projects operations.
fullName: ProjectsOperations
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: createOrUpdate
    uid: '@azure/arm-neonpostgres.ProjectsOperations.createOrUpdate'
    package: '@azure/arm-neonpostgres'
    summary: Create a Project
    fullName: createOrUpdate
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        createOrUpdate: (resourceGroupName: string, organizationName: string,
        projectName: string, resource: Project, options?:
        ProjectsCreateOrUpdateOptionalParams) =>
        PollerLike<OperationState<Project>, Project>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, resource: Project, options?:
          ProjectsCreateOrUpdateOptionalParams) =&gt;
          PollerLike&lt;OperationState&lt;Project&gt;, Project&gt;
  - name: delete
    uid: '@azure/arm-neonpostgres.ProjectsOperations.delete'
    package: '@azure/arm-neonpostgres'
    summary: ''
    fullName: delete
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        delete: (resourceGroupName: string, organizationName: string,
        projectName: string, options?: ProjectsDeleteOptionalParams) =>
        Promise<void>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, options?: ProjectsDeleteOptionalParams) =&gt;
          Promise&lt;void&gt;
  - name: get
    uid: '@azure/arm-neonpostgres.ProjectsOperations.get'
    package: '@azure/arm-neonpostgres'
    summary: Get a Project
    fullName: get
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        get: (resourceGroupName: string, organizationName: string, projectName:
        string, options?: ProjectsGetOptionalParams) => Promise<Project>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, options?: ProjectsGetOptionalParams) =&gt;
          Promise&lt;Project&gt;
  - name: getConnectionUri
    uid: '@azure/arm-neonpostgres.ProjectsOperations.getConnectionUri'
    package: '@azure/arm-neonpostgres'
    summary: Action to retrieve the connection URI for the Neon Database.
    fullName: getConnectionUri
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        getConnectionUri: (resourceGroupName: string, organizationName: string,
        projectName: string, connectionUriParameters: ConnectionUriProperties,
        options?: ProjectsGetConnectionUriOptionalParams) =>
        Promise<ConnectionUriProperties>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, connectionUriParameters: ConnectionUriProperties, options?:
          ProjectsGetConnectionUriOptionalParams) =&gt;
          Promise&lt;ConnectionUriProperties&gt;
  - name: list
    uid: '@azure/arm-neonpostgres.ProjectsOperations.list'
    package: '@azure/arm-neonpostgres'
    summary: List Project resources by OrganizationResource
    fullName: list
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        list: (resourceGroupName: string, organizationName: string, options?:
        ProjectsListOptionalParams) => PagedAsyncIterableIterator<Project,
        Project[], PageSettings>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, options?:
          ProjectsListOptionalParams) =&gt;
          PagedAsyncIterableIterator&lt;Project, Project[], PageSettings&gt;
  - name: update
    uid: '@azure/arm-neonpostgres.ProjectsOperations.update'
    package: '@azure/arm-neonpostgres'
    summary: Update a Project
    fullName: update
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        update: (resourceGroupName: string, organizationName: string,
        projectName: string, properties: Project, options?:
        ProjectsUpdateOptionalParams) => PollerLike<OperationState<Project>,
        Project>
      return:
        description: ''
        type: >-
          (resourceGroupName: string, organizationName: string, projectName:
          string, properties: Project, options?: ProjectsUpdateOptionalParams)
          =&gt; PollerLike&lt;OperationState&lt;Project&gt;, Project&gt;
