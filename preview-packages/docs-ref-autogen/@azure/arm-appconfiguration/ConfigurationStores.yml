### YamlMime:TSType
name: ConfigurationStores
uid: '@azure/arm-appconfiguration.ConfigurationStores'
package: '@azure/arm-appconfiguration'
summary: Interface representing a ConfigurationStores.
fullName: ConfigurationStores
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, ConfigurationStore,
      ConfigurationStoresCreateOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginCreate'
    package: '@azure/arm-appconfiguration'
    summary: Creates a configuration store with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, configStoreName: string,
        configStoreCreationParameters: ConfigurationStore, options?:
        ConfigurationStoresCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<ConfigurationStore>,
        ConfigurationStore>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: configStoreCreationParameters
          type: <xref uid="@azure/arm-appconfiguration.ConfigurationStore" />
          description: The parameters for creating a configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />&gt;, <xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, ConfigurationStore,
      ConfigurationStoresCreateOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginCreateAndWait'
    package: '@azure/arm-appconfiguration'
    summary: Creates a configuration store with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, configStoreName:
        string, configStoreCreationParameters: ConfigurationStore, options?:
        ConfigurationStoresCreateOptionalParams): Promise<ConfigurationStore>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: configStoreCreationParameters
          type: <xref uid="@azure/arm-appconfiguration.ConfigurationStore" />
          description: The parameters for creating a configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-appconfiguration.ConfigurationStore"
          />&gt;
  - name: beginDelete(string, string, ConfigurationStoresDeleteOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginDelete'
    package: '@azure/arm-appconfiguration'
    summary: Deletes a configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, configStoreName: string,
        options?: ConfigurationStoresDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string,
      ConfigurationStoresDeleteOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginDeleteAndWait'
    package: '@azure/arm-appconfiguration'
    summary: Deletes a configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, configStoreName:
        string, options?: ConfigurationStoresDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginPurgeDeleted(string, string,
      ConfigurationStoresPurgeDeletedOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginPurgeDeleted'
    package: '@azure/arm-appconfiguration'
    summary: Permanently deletes the specified configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(location: string, configStoreName: string,
        options?: ConfigurationStoresPurgeDeletedOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresPurgeDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginPurgeDeletedAndWait(string, string,
      ConfigurationStoresPurgeDeletedOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginPurgeDeletedAndWait'
    package: '@azure/arm-appconfiguration'
    summary: Permanently deletes the specified configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeletedAndWait(location: string, configStoreName:
        string, options?: ConfigurationStoresPurgeDeletedOptionalParams):
        Promise<void>
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresPurgeDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, ConfigurationStoreUpdateParameters,
      ConfigurationStoresUpdateOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginUpdate'
    package: '@azure/arm-appconfiguration'
    summary: Updates a configuration store with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, configStoreName: string,
        configStoreUpdateParameters: ConfigurationStoreUpdateParameters,
        options?: ConfigurationStoresUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ConfigurationStore>,
        ConfigurationStore>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: configStoreUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoreUpdateParameters"
            />
          description: The parameters for updating a configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />&gt;, <xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ConfigurationStoreUpdateParameters,
      ConfigurationStoresUpdateOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.beginUpdateAndWait'
    package: '@azure/arm-appconfiguration'
    summary: Updates a configuration store with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, configStoreName:
        string, configStoreUpdateParameters: ConfigurationStoreUpdateParameters,
        options?: ConfigurationStoresUpdateOptionalParams):
        Promise<ConfigurationStore>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: configStoreUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoreUpdateParameters"
            />
          description: The parameters for updating a configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-appconfiguration.ConfigurationStore"
          />&gt;
  - name: get(string, string, ConfigurationStoresGetOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.get'
    package: '@azure/arm-appconfiguration'
    summary: Gets the properties of the specified configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, configStoreName: string,
        options?: ConfigurationStoresGetOptionalParams):
        Promise<ConfigurationStore>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-appconfiguration.ConfigurationStore"
          />&gt;
  - name: getDeleted(string, string, ConfigurationStoresGetDeletedOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.getDeleted'
    package: '@azure/arm-appconfiguration'
    summary: Gets a deleted Azure app configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(location: string, configStoreName: string, options?:
        ConfigurationStoresGetDeletedOptionalParams):
        Promise<DeletedConfigurationStore>
      parameters:
        - id: location
          type: string
          description: The location in which uniqueness will be verified.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresGetDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-appconfiguration.DeletedConfigurationStore" />&gt;
  - name: list(ConfigurationStoresListOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.list'
    package: '@azure/arm-appconfiguration'
    summary: Lists the configuration stores for a given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ConfigurationStoresListOptionalParams):
        PagedAsyncIterableIterator<ConfigurationStore, ConfigurationStore[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />, <xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listByResourceGroup(string,
      ConfigurationStoresListByResourceGroupOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.listByResourceGroup'
    package: '@azure/arm-appconfiguration'
    summary: Lists the configuration stores for a given resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ConfigurationStoresListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<ConfigurationStore, ConfigurationStore[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />, <xref
          uid="@azure/arm-appconfiguration.ConfigurationStore" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listDeleted(ConfigurationStoresListDeletedOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.listDeleted'
    package: '@azure/arm-appconfiguration'
    summary: Gets information about the deleted configuration stores in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options?:
        ConfigurationStoresListDeletedOptionalParams):
        PagedAsyncIterableIterator<DeletedConfigurationStore,
        DeletedConfigurationStore[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresListDeletedOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appconfiguration.DeletedConfigurationStore" />, <xref
          uid="@azure/arm-appconfiguration.DeletedConfigurationStore" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listKeys(string, string, ConfigurationStoresListKeysOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.listKeys'
    package: '@azure/arm-appconfiguration'
    summary: Lists the access key for the specified configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, configStoreName: string,
        options?: ConfigurationStoresListKeysOptionalParams):
        PagedAsyncIterableIterator<ApiKey, ApiKey[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresListKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-appconfiguration.ApiKey" />, <xref
          uid="@azure/arm-appconfiguration.ApiKey" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      regenerateKey(string, string, RegenerateKeyParameters,
      ConfigurationStoresRegenerateKeyOptionalParams)
    uid: '@azure/arm-appconfiguration.ConfigurationStores.regenerateKey'
    package: '@azure/arm-appconfiguration'
    summary: Regenerates an access key for the specified configuration store.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, configStoreName:
        string, regenerateKeyParameters: RegenerateKeyParameters, options?:
        ConfigurationStoresRegenerateKeyOptionalParams): Promise<ApiKey>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group to which the container registry
            belongs.
        - id: configStoreName
          type: string
          description: The name of the configuration store.
        - id: regenerateKeyParameters
          type: <xref uid="@azure/arm-appconfiguration.RegenerateKeyParameters" />
          description: The parameters for regenerating an access key.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-appconfiguration.ConfigurationStoresRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-appconfiguration.ApiKey" />&gt;
