### YamlMime:TSType
name: SimplePollerLike
uid: '@azure-rest/ai-translation-document.SimplePollerLike'
package: '@azure-rest/ai-translation-document'
summary: A simple poller that can be used to poll a long running operation.
fullName: SimplePollerLike<TState, TResult>
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: getOperationState()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.getOperationState'
    package: '@azure-rest/ai-translation-document'
    summary: Returns the state of the operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getOperationState(): TState'
      return:
        description: ''
        type: TState
  - name: getResult()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.getResult'
    package: '@azure-rest/ai-translation-document'
    summary: |-
      Returns the result value of the operation,
      regardless of the state of the poller.
      It can return undefined or an incomplete form of the final TResult value
      depending on the implementation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getResult(): undefined | TResult'
      return:
        description: ''
        type: undefined | TResult
  - name: isDone()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.isDone'
    package: '@azure-rest/ai-translation-document'
    summary: Returns true if the poller has finished polling.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isDone(): boolean'
      return:
        description: ''
        type: boolean
  - name: isStopped()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.isStopped'
    package: '@azure-rest/ai-translation-document'
    summary: Returns true if the poller is stopped.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use abortSignal status to track this instead.
    syntax:
      content: 'function isStopped(): boolean'
      return:
        description: ''
        type: boolean
  - name: 'onProgress((state: TState) => void)'
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.onProgress'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Invokes the provided callback after each polling is completed,

      sending the current state of the poller's operation.


      It returns a method that can be used to stop receiving updates on the
      given callback function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onProgress(callback: (state: TState) => void): CancelOnProgress'
      parameters:
        - id: callback
          type: '(state: TState) =&gt; void'
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/core-lro.CancelOnProgress" />
  - name: 'poll({ abortSignal?: AbortSignalLike })'
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.poll'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Returns a promise that will resolve once a single polling request
      finishes.

      It does this by calling the update method of the Poller's operation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function poll(options?: { abortSignal?: AbortSignalLike }):
        Promise<TState>
      parameters:
        - id: options
          type: '{ abortSignal?: AbortSignalLike }'
          description: ''
      return:
        description: ''
        type: Promise&lt;TState&gt;
  - name: 'pollUntilDone({ abortSignal?: AbortSignalLike })'
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.pollUntilDone'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Returns a promise that will resolve once the underlying operation is
      completed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pollUntilDone(pollOptions?: { abortSignal?: AbortSignalLike }):
        Promise<TResult>
      parameters:
        - id: pollOptions
          type: '{ abortSignal?: AbortSignalLike }'
          description: ''
      return:
        description: ''
        type: Promise&lt;TResult&gt;
  - name: serialize()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.serialize'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Returns a promise that could be used for serialized version of the
      poller's operation

      by invoking the operation's serialize method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function serialize(): Promise<string>'
      return:
        description: ''
        type: Promise&lt;string&gt;
  - name: stopPolling()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.stopPolling'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Stops the poller from continuing to poll. Please note this will only stop
      the client-side polling
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use abortSignal to stop polling instead.
    syntax:
      content: function stopPolling()
  - name: submitted()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.submitted'
    package: '@azure-rest/ai-translation-document'
    summary: Wait the poller to be submitted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function submitted(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: toString()
    uid: '@azure-rest/ai-translation-document.SimplePollerLike.toString'
    package: '@azure-rest/ai-translation-document'
    summary: >-
      Returns a string representation of the poller's operation. Similar to
      serialize but returns a string.
    remarks: ''
    isDeprecated: true
    customDeprecatedMessage: Use serialize() instead.
    syntax:
      content: 'function toString(): string'
      return:
        description: ''
        type: string
